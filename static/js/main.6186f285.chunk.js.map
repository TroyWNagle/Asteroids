{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particlePool.js","boostBar.js","powerUpTimer.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","hud.js","game.js","audiocontroller.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","ParticlePool","maxSize","color","speed","this","pool","Float32Array","end","decay","life","randSpeed","vx","sin","vy","cos","lifeNoise","I","last","ctx","save","beginPath","fillStyle","moveTo","arc","fill","restore","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","add","createParticles","update","strokeStyle","globalAlpha","strokeRect","fillRect","render","PowerUpDisplay","type","timer","initColor","string","font","fillText","toFixed","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boostParticles","normalParticles","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","powerUpDisplays","boostGauge","acceleration","angleNoise","angle","edgeDetection","updateVelocity","checkPowerUps","closePath","amount","translate","rotate","lineTo","stroke","drawShield","Asteroid","mass","held","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","push","context","Projectile","initSpeed","particlePool","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","past","shortest","distance","findDistance","findDirection","delta","point","splice","forEach","findTarget","adjustDirection","storePast","alterPast","lineWidth","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","clock","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","j","player","error","magnitude","updateSpeed","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","initTimer","initShape","rect","PopUp","size","initSettings","HUDObject","information","info","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","audioController","menu","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","initParticlePools","score","highscore","lives","level","popups","hudObjects","initHUD","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","gameState","buttonNames","drawPauseMenu","trigger","ufo","tx","ty","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","updateScore","angleChange","newX","newY","catchAsteroid","ufoProjectile","index","len","explode","ufoID","createBlip","HUDcontext","strokeText","checkAsteroidAlignment","initAsteroids","difference","addUFO","scaling","createPowerUp","ratio","particleCollision","handleAsteriodExplosion","respawn","powerUp","updatePowerUpDisplay","createPowerUpDisplay","createPowerUpBlip","k","detectShipCrash","destoryUFO","ufo1","ufo2","projectileDodger","createProjectile","teleport","checkHighScore","drawImage","AudioController","theme","Audio","muted","sounds","over","collisionSound","volume","explosion","shipExplosion","ufoLaser","homing","teleportSound","shieldBreak","homingPickUp","play","pause","change","sound","Menu","game","highlighted","buttons","initButtons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","handleMouseDown","onmousedown","playMenu","scaleY","clickButton","clientX","clientY","button","playTheme","stopMenu","clearInterval","unmute","mute","drawMenu","drawControls"],"mappings":"uGACAA,KAAKC,IAAgB,EAAVD,KAAKE,GAOhBF,KAAKG,cAAgB,SAAUC,EAAKC,GAClC,OAAOL,KAAKM,UAAYD,EAAMD,GAAOA,GASvCJ,KAAKO,UAAY,SAAUH,EAAKC,GAC9B,IAAIG,EAASR,KAAKS,MAAML,GACpBM,EAAUV,KAAKW,KAAKN,GACxB,OAAOL,KAAKY,MAAMZ,KAAKM,UAAYI,EAAUF,IAAWA,GAU1DR,KAAKa,aAAe,SAASC,EAAGC,EAAGC,EAAIC,GAErC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EAETG,EAAOpB,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GAEhCG,EAAYtB,KAAKuB,KAAKJ,EAAGC,GAQ7B,OANGF,EAAK,IACNI,IAAc,GAEZA,EAAY,IACdA,GAAatB,KAAKC,KAEbqB,GAGTtB,KAAKwB,OAAS,SAASJ,EAAMN,EAAGC,EAAIC,EAAIC,GAEtC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EACTK,EAAYtB,KAAKuB,KAAKJ,EAAKC,GAQ/B,OANGF,EAAK,IACNI,IAAc,GAEbA,EAAY,IACbA,GAAatB,KAAKC,KAEbqB,GAGTtB,KAAKyB,YAAc,SAASX,EAAGC,EAAGC,EAAIC,GAEpC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EAGb,OADWjB,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,IActCnB,KAAK0B,yBAA2B,SAASC,EAAIC,EAAIC,EAAIb,EAAIC,EAAIa,GAC3D,IAAIZ,EAAKS,EAAKX,EACVG,EAAKS,EAAKX,EAEd,QAAGC,EAAKW,EAAKC,GAAMX,EAAKU,EAAKC,MAI1BZ,EAAKA,EAAKC,EAAKA,IAAOU,EAAKC,IAAOD,EAAKC,KAiB5C9B,KAAK+B,yBAA2B,SAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAE/D,IAAIC,EAAUJ,EAAKE,EAAK,EAApBE,EAA0BH,EAAKE,EAAK,EAEpCpB,EAAKlB,KAAKwC,IAAIR,EAAKO,GACnBpB,EAAKnB,KAAKwC,IAAIP,EAAKM,GAGvB,QAAIrB,EAAMmB,EAAK,EAAIH,OACff,EAAMmB,EAAK,EAAIJ,KAGfhB,GAAOmB,EAAK,IACZlB,GAAOmB,EAAK,GAGLtC,KAAKyC,IAAKvB,EAAKmB,EAAK,EAAK,GAAKrC,KAAKyC,IAAKtB,EAAKmB,EAAK,EAAI,IAChDJ,EAAKA,uDC7HT,SAAAQ,EAAAC,EAAAC,GACf,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCCFA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAD,EAAAE,OAAkBD,IAAA,CACnC,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIe,SAAAO,EAAAd,EAAAe,EAAAC,GAGf,OAFAD,GAAAb,EAAAF,EAAAiB,UAAAF,GACAC,GAAAd,EAAAF,EAAAgB,GACAhB,aCXqBkB,aAEnB,SAAAA,EAAYC,EAASC,EAAOC,GAAQvB,EAAAwB,KAAAJ,GAClCI,KAAKC,KAAO,IAAIC,aAAa,EAAIL,GACjCG,KAAKG,IAAM,EACXH,KAAK7D,IAAM0D,EACXG,KAAKF,MAAQA,EACbE,KAAKD,MAAQA,wCAGXnD,EAAGC,EAAGO,EAAWgD,EAAOC,GAC1B,IAAIC,EAAYxE,KAAKO,UAAU,EAAG2D,KAAKD,OACnCQ,EAAKzE,KAAK0E,IAAIpD,GAAakD,EAC3BG,GAAM3E,KAAK4E,IAAItD,GAAakD,EAC5BK,EAAYN,EAAOvE,KAAKG,eAAe,GAAK,IAC7C+D,KAAKG,IAAMH,KAAK7D,MACjB6D,KAAKC,KAAK,EAAED,KAAKG,KAAOvD,EACxBoD,KAAKC,KAAK,EAAED,KAAKG,IAAM,GAAKtD,EAC5BmD,KAAKC,KAAK,EAAED,KAAKG,IAAM,GAAKI,EAC5BP,KAAKC,KAAK,EAAED,KAAKG,IAAM,GAAKM,EAC5BT,KAAKC,KAAK,EAAED,KAAKG,IAAM,GAAKC,EAC5BJ,KAAKC,KAAK,EAAED,KAAKG,IAAM,GAAKQ,EAC5BX,KAAKG,wCAKP,IAAI,IAAIpB,EAAI,EAAGA,EAAIiB,KAAKG,IAAKpB,IAAK,CAChC,IAAI6B,EAAI,EAAI7B,EAyBZ,GAvBAiB,KAAKC,KAAKW,IAAMZ,KAAKC,KAAKW,EAAI,GAE9BZ,KAAKC,KAAKW,EAAI,IAAMZ,KAAKC,KAAKW,EAAI,GAE/B9E,KAAKwC,IAAI0B,KAAKC,KAAKW,EAAI,IAAM,IAC3BZ,KAAKC,KAAKW,EAAI,GAAK,EACpBZ,KAAKC,KAAKW,EAAI,IAAMZ,KAAKC,KAAKW,EAAI,GAGlCZ,KAAKC,KAAKW,EAAI,IAAMZ,KAAKC,KAAKW,EAAI,IAGnC9E,KAAKwC,IAAI0B,KAAKC,KAAKW,EAAI,IAAM,IAC3BZ,KAAKC,KAAKW,EAAI,GAAK,EACpBZ,KAAKC,KAAKW,EAAI,IAAMZ,KAAKC,KAAKW,EAAI,GAGlCZ,KAAKC,KAAKW,EAAI,IAAMZ,KAAKC,KAAKW,EAAI,IAItCZ,KAAKC,KAAKW,EAAI,IAAM,GAEjBZ,KAAKC,KAAKW,EAAI,IAAM,EAAG,CACxB,IAAIC,EAAO,GAAKb,KAAKG,IAAM,GAC3BH,KAAKC,KAAKW,GAAKZ,KAAKC,KAAKY,GACzBb,KAAKC,KAAKW,EAAI,GAAKZ,KAAKC,KAAKY,EAAO,GACpCb,KAAKC,KAAKW,EAAI,GAAKZ,KAAKC,KAAKY,EAAO,GACpCb,KAAKC,KAAKW,EAAI,GAAKZ,KAAKC,KAAKY,EAAO,GACpCb,KAAKC,KAAKW,EAAI,GAAKZ,KAAKC,KAAKY,EAAO,GACpCb,KAAKC,KAAKW,EAAI,GAAKZ,KAAKC,KAAKY,EAAO,GACpCb,KAAKG,MACLpB,qCAKC+B,GACLA,EAAIC,OACJD,EAAIE,YACJF,EAAIG,UAAYjB,KAAKF,MACrB,IAAI,IAAIf,EAAI,EAAGA,EAAIiB,KAAKG,IAAKpB,IAC3B+B,EAAII,OAAOlB,KAAKC,KAAK,EAAIlB,GAAIiB,KAAKC,KAAK,EAAIlB,EAAI,IAC/C+B,EAAIK,IAAInB,KAAKC,KAAK,EAAIlB,GAAIiB,KAAKC,KAAK,EAAIlB,EAAI,GAAI,EAAG,EAAGjD,KAAKC,KAE7D+E,EAAIM,OACJN,EAAIO,mBC5EaC,aACnB,SAAAA,EAAYC,EAAOpF,GAAMqC,EAAAwB,KAAAsB,GACvBtB,KAAKpD,EAAI,IACToD,KAAKnD,EAAI,IACTmD,KAAKwB,MAAQ,IACbxB,KAAKyB,OAAS,GACdzB,KAAK0B,SAAWvF,EAChB6D,KAAKuB,MAAQA,EACbvB,KAAK2B,UAAY,IAAI/B,EAAa,IAAK,QAAS,GAChDI,KAAK4B,WAAa5B,KAAKwB,OAASxB,KAAKuB,MAAQvB,KAAK0B,4DAGpCG,GAEd,IADA,IAAIjF,EAAI,EAAIoD,KAAKpD,EAAIoD,KAAKwB,MAAQ,EACzBzC,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CACrC,IAAIlC,EAAIf,KAAKG,cAAc+D,KAAKnD,EAAImD,KAAKyB,OAAS,EAAGzB,KAAKnD,EAAImD,KAAKyB,OAAS,GAC5EzB,KAAK2B,UAAUG,IAAIlF,EAAGC,EAAGf,KAAKE,GAAK,EAAG,EAAK,uCAK7CgE,KAAK4B,WAAa5B,KAAKwB,OAASxB,KAAKuB,MAAQvB,KAAK0B,UAClD1B,KAAK+B,gBAAgB,GAErB/B,KAAK2B,UAAUK,wCAGVlB,GACLA,EAAIC,OACJD,EAAImB,YAAc,OAClBnB,EAAIG,UAAY,OAChBH,EAAIoB,YAAc,GAClBpB,EAAIqB,WAAWnC,KAAKpD,EAAIoD,KAAKwB,MAAQ,EAAGxB,KAAKnD,EAAImD,KAAKyB,OAAS,EAAGzB,KAAKwB,MAAOxB,KAAKyB,QACnFX,EAAIsB,SAASpC,KAAKpD,EAAIoD,KAAKwB,MAAQ,EAAGxB,KAAKnD,EAAImD,KAAKyB,OAAS,EAAGzB,KAAK4B,WAAY5B,KAAKyB,QACtFX,EAAIO,UACJrB,KAAK2B,UAAUU,OAAOvB,YCnCLwB,aACnB,SAAAA,EAAY1F,EAAGC,EAAG0F,EAAMC,GAAQhE,EAAAwB,KAAAsC,GAC9BtC,KAAKpD,EAAIA,EACToD,KAAKnD,EAAIA,EACTmD,KAAKwC,MAAQA,EACbxC,KAAKuC,KAAOA,EACZvC,KAAKyC,0DAIL,OAAQzC,KAAKuC,MACX,KAAK,EACHvC,KAAKF,MAAQ,MACbE,KAAK0C,OAAS,WACd,MACF,KAAK,EACH1C,KAAKF,MAAQ,MACbE,KAAK0C,OAAS,UACd,MACF,KAAK,EACH1C,KAAKF,MAAQ,UACbE,KAAK0C,OAAS,2CAOb5B,GACLA,EAAIC,OACJD,EAAIG,UAAYjB,KAAKF,MACrBgB,EAAI6B,KAAO,aACX7B,EAAIoB,YAAc,GAClBpB,EAAI8B,SAAS5C,KAAK0C,QAAU1C,KAAKwC,MAAQ,IAAIK,QAAQ,GAAI7C,KAAKpD,EAAGoD,KAAKnD,GACtEiE,EAAIO,mBC3BayB,aAInB,SAAAA,IAAetE,EAAAwB,KAAA8C,GAEb9C,KAAKpD,EAAI,IACToD,KAAKnD,EAAI,IACTmD,KAAK+C,KAAO,GACZ/C,KAAKgD,WAAY,EACjBhD,KAAKiD,WAAajD,KAAK+C,KACvB/C,KAAKkD,MAAQ,CAACC,IAAK,GAAKC,IAAK,GAC7BpD,KAAKqD,SAAW,CAACF,IAAK,EAAKC,IAAK,GAChCpD,KAAKD,MAAQ,CAACnD,EAAG,EAAKC,EAAG,GACzBmD,KAAKsD,OAAS,GAEdtD,KAAKuD,eAAiB,IAAI3D,EAAa,IAAK,OAAQ,GACpDI,KAAKwD,gBAAkB,IAAI5D,EAAa,GAAI,MAAO,GACnDI,KAAKF,MAAQ,QACbE,KAAK0B,SAAW,IAChB1B,KAAKyD,UAAW,EAChBzD,KAAKuB,MAAQ,IACbvB,KAAK0D,cAAgB,EACrB1D,KAAK2D,SAAW,EAEhB3D,KAAK4D,SAAW,CAACC,GAAG,EAAOC,GAAG,EAAOC,GAAG,GACxC/D,KAAKgE,cAAgB,CAACH,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACrC/D,KAAKiE,gBAAkB,CAACJ,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACzC/D,KAAKkE,WAAa,IAAI5C,EAAStB,KAAKuB,MAAOvB,KAAK0B,wDAMtCyC,GAEVnE,KAAKD,MAAMlD,IAAMf,KAAK4E,IAAIV,KAAKkD,MAAME,KAAOe,EAC5CnE,KAAKD,MAAMnD,GAAKd,KAAK0E,IAAIR,KAAKkD,MAAME,KAAOe,EAExCrI,KAAKwC,IAAI0B,KAAKD,MAAMnD,IAAMoD,KAAK2D,WAC7B3D,KAAKD,MAAMnD,EAAI,EAChBoD,KAAKD,MAAMnD,GAAKoD,KAAK2D,SAGrB3D,KAAKD,MAAMnD,EAAIoD,KAAK2D,UAIrB7H,KAAKwC,IAAI0B,KAAKD,MAAMlD,IAAMmD,KAAK2D,WAC7B3D,KAAKD,MAAMlD,EAAI,EAChBmD,KAAKD,MAAMlD,GAAKmD,KAAK2D,SAGrB3D,KAAKD,MAAMlD,EAAImD,KAAK2D,kDASrB3D,KAAKpD,IAAMoD,KAAKsD,SACjBtD,KAAKpD,EAAI,KAERoD,KAAKnD,IAAMmD,KAAKsD,SACjBtD,KAAKnD,EAAI,KAERmD,KAAKpD,GAAK,IAAOoD,KAAKsD,SACvBtD,KAAKpD,EAAI,GAERoD,KAAKnD,GAAK,IAAOmD,KAAKsD,SACvBtD,KAAKnD,EAAI,2CAQGgF,GAId,IAFA,IAAIjF,EAAIoD,KAAKpD,EAAId,KAAK0E,IAAIR,KAAKkD,MAAME,KAAOpD,KAAKsD,OAC7CzG,EAAImD,KAAKnD,EAAIf,KAAK4E,IAAIV,KAAKkD,MAAME,KAAOpD,KAAKsD,OACzCvE,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CAEpC,IAAI/B,EAAKJ,EAAId,KAAKG,eAAe,EAAG,GAChCgB,EAAKJ,EAAIf,KAAKG,eAAe,EAAG,GAEhCmI,EAAapE,KAAKkD,MAAME,IAAMtH,KAAKG,eAAc,QAAgB,SAElE+D,KAAKyD,UAAYzD,KAAKuB,MAAQ,EAC/BvB,KAAKuD,eAAezB,IAAI9E,EAAIC,EAAInB,KAAKE,GAAKoI,GAAa,IAAM,KAG7DpE,KAAKwD,gBAAgB1B,IAAI9E,EAAIC,EAAInB,KAAKE,GAAKoI,GAAa,IAAM,4CAMlE,IAAI,IAAIrF,EAAI,EAAGA,GAAK,EAAGA,IAClBiB,KAAK4D,SAAS7E,KACfiB,KAAKgE,cAAcjF,KACnBiB,KAAKiE,gBAAgBlF,GAAGyD,QACrBxC,KAAKgE,cAAcjF,IAAM,IAC1BiB,KAAK4D,SAAS7E,IAAK,EACnBiB,KAAKiE,gBAAgBlF,GAAK,8CAOhC,IAAIoE,EAAMrH,KAAKqB,KAAK6C,KAAKD,MAAMnD,EAAIoD,KAAKD,MAAMnD,EAAIoD,KAAKD,MAAMlD,EAAImD,KAAKD,MAAMlD,GACxEwH,EAAQvI,KAAKuB,KAAK2C,KAAKD,MAAMlD,EAAIsG,GAClCnD,KAAKD,MAAMnD,EAAI,IAChByH,IAAU,GAETA,EAAQ,IACTA,GAASvI,KAAKC,KAEhBiE,KAAKqD,SAASF,IAAMA,EACpBnD,KAAKqD,SAASD,IAAMiB,mCAOpBrE,KAAKsE,gBACLtE,KAAKpD,GAAKoD,KAAKD,MAAMnD,EACrBoD,KAAKnD,GAAKmD,KAAKD,MAAMlD,EACrBmD,KAAKuE,iBACLvE,KAAKwE,gBAEFxE,KAAKgD,YACNhD,KAAKiD,aACFjD,KAAKiD,YAAc,IACjBjD,KAAK4D,SAAS,GACf5D,KAAKiD,WAAajD,KAAK+C,KAAO,EAG9B/C,KAAKiD,WAAajD,KAAK+C,KAEzB/C,KAAKgD,WAAY,KAIjBhD,KAAKyD,UAAYzD,KAAKuB,MAAQvB,KAAK0B,WACrC1B,KAAK0D,gBAAkB,EAEG,IAAvB1D,KAAK0D,gBACN1D,KAAKuB,QACLvB,KAAKkE,WAAW3C,MAAQvB,KAAKuB,QAIjCvB,KAAKuD,eAAevB,SACpBhC,KAAKwD,gBAAgBxB,SACrBhC,KAAKkE,WAAWlC,4CAGPlB,GACTA,EAAIC,OACJD,EAAIG,UAAY,UAChBH,EAAIoB,YAAc,GAClBpB,EAAIE,YACJF,EAAIK,IAAInB,KAAKpD,EAAGoD,KAAKnD,EAAiB,IAAdmD,KAAKsD,OAAc,EAAGxH,KAAKC,KACnD+E,EAAI2D,YACJ3D,EAAIM,OACJN,EAAIO,uDAGekB,EAAMC,GAEvBxC,KAAKiE,gBAAgB1B,GAAQ,IAAID,EAAe,EADtC,IAATC,EACkD,IAEpC,IAATA,EAC4C,IAGC,IANaA,EAAMC,gDAUrDD,EAAMmC,GACzB1E,KAAKiE,gBAAgB1B,GAAMC,OAASkC,iCAO/B5D,GACL,IAAI,IAAI/B,EAAI,EAAGA,EAAI,EAAGA,IACW,KAA5BiB,KAAKiE,gBAAgBlF,IACtBiB,KAAKiE,gBAAgBlF,GAAGsD,OAAOvB,GAGnCA,EAAIC,OACJD,EAAImB,YAAcjC,KAAKF,MACvBgB,EAAIE,YAEJF,EAAI6D,UAAU3E,KAAKpD,EAAGoD,KAAKnD,GAC3BiE,EAAI8D,OAAO5E,KAAKkD,MAAME,KAEtBtC,EAAII,OAAO,GAAIlB,KAAKsD,QACpBxC,EAAI+D,OAAO,GAAI7E,KAAKsD,QACpBxC,EAAI+D,OAAO,EAAG7E,KAAKsD,OAAS,KAC5BxC,EAAI+D,QAAQ,GAAI7E,KAAKsD,QACrBxC,EAAI+D,OAAO,GAAI7E,KAAKsD,QACpBxC,EAAIgE,SACJhE,EAAIO,UAEJrB,KAAKuD,eAAelB,OAAOvB,GAC3Bd,KAAKwD,gBAAgBnB,OAAOvB,GACzBd,KAAK4D,SAAS,IACf5D,KAAK+E,WAAWjE,GAElBd,KAAKkE,WAAW7B,OAAOvB,YCjONkE,aAOnB,SAAAA,EAAYpI,EAAGC,EAAGoI,EAAM7H,GAAYoB,EAAAwB,KAAAgF,GAClChF,KAAKpD,EAAIA,EACToD,KAAKnD,EAAIA,EACTmD,KAAKkF,MAAO,EACZlF,KAAKmF,WAAY,EAEdF,EAAO,IACRA,EAAO,GAETjF,KAAKiF,KAAOA,EACZjF,KAAKsD,OAAS2B,EACdjF,KAAKoF,YAAc,GACnBpF,KAAKqF,gBACLrF,KAAK5C,UAAYA,EACjB4C,KAAKqD,SAAW,CAACzG,EAAG,EAAKC,EAAG,GAC5BmD,KAAKqE,MAAQ,GAEU,IAApBrE,KAAK5C,UACN4C,KAAKsF,eAGLtF,KAAKuF,oEASP,IAAIpC,EAAMrH,KAAKO,UAAU,EAAG,IAAM2D,KAAKiF,KACpCjF,KAAKpD,EAAI,EACVoD,KAAKqD,SAASzG,EAAId,KAAKG,cAAc,EAAKkH,GAEpCnD,KAAKpD,EAAI,IAAOoD,KAAKsD,OAC3BtD,KAAKqD,SAASzG,GAAKd,KAAKG,cAAc,EAAKkH,GAG3CnD,KAAKqD,SAASzG,EAAId,KAAKG,eAAekH,EAAKA,GAE1CnD,KAAKnD,EAAI,EACVmD,KAAKqD,SAASxG,EAAIf,KAAKG,cAAc,EAAKkH,GAEnCnD,KAAKnD,EAAI,IAAOmD,KAAKsD,OAC5BtD,KAAKqD,SAASxG,GAAKf,KAAKG,cAAc,EAAKkH,GAG3CnD,KAAKqD,SAASxG,EAAIf,KAAKG,eAAekH,EAAKA,2CAc7C,IANA,IAIIvG,EACAC,EAHAwH,EAAQvI,KAAKC,IAFF,GAGXyJ,EAAexF,KAAKsD,OAGhBvE,EAAI,EAAGA,EANA,GAMcA,IACxBjD,KAAKO,UAAU,EAAG,KAAO,KAC1BmJ,EAAe1J,KAAKG,cAA4B,GAAd+D,KAAKsD,OAAetD,KAAKsD,SAE7D1G,EAAId,KAAK4E,IAAI3B,EAAIsF,GAASmB,EAC1B3I,GAAKf,KAAK0E,IAAIzB,EAAIsF,GAASmB,EAC3BxF,KAAKoF,YAAYK,KAAK,CAAC7I,EAAGA,EAAGC,EAAGA,+CASlC,IAAIsG,EAAMrH,KAAKO,UAAU,EAAG,IAAM2D,KAAKiF,KAEvCjF,KAAKqD,SAASzG,EAAId,KAAK4E,IAAIV,KAAK5C,WAAa+F,EAC7CnD,KAAKqD,SAASxG,GAAKf,KAAK0E,IAAIR,KAAK5C,WAAa+F,0CAO3CnD,KAAKpD,GAAK,IAAO,IAAMoD,KAAKsD,OAC7BtD,KAAKpD,GAAK,IAAMoD,KAAKsD,OAEftD,KAAKpD,IAAM,IAAMoD,KAAKsD,SAC5BtD,KAAKpD,EAAI,IAAO,IAAMoD,KAAKsD,QAE1BtD,KAAKnD,GAAK,IAAO,IAAMmD,KAAKsD,OAC7BtD,KAAKnD,GAAK,IAAMmD,KAAKsD,OAEftD,KAAKnD,IAAM,IAAMmD,KAAKsD,SAC5BtD,KAAKnD,EAAI,IAAO,IAAMmD,KAAKsD,yCAQ7BtD,KAAKsE,gBACFtE,KAAKqD,SAASzG,EAAI,EACnBoD,KAAKqE,OAAS,IAGdrE,KAAKqE,OAAS,IAEhBrE,KAAKpD,GAAKoD,KAAKqD,SAASzG,EACxBoD,KAAKnD,GAAKmD,KAAKqD,SAASxG,iCAOnB6I,GACLA,EAAQ3E,OACR2E,EAAQzD,YAAc,QACtByD,EAAQf,UAAU3E,KAAKpD,EAAGoD,KAAKnD,GAC/B6I,EAAQd,OAAO5E,KAAKqE,OACpBqB,EAAQ1E,YAER0E,EAAQxE,OAAOlB,KAAKoF,YAAY,GAAGxI,EAAEoD,KAAKoF,YAAY,GAAGvI,GACzD,IAAI,IAAIkC,EAAI,EAAGA,EAAIiB,KAAKoF,YAAYpG,OAAQD,IAC1C2G,EAAQb,OAAO7E,KAAKoF,YAAYrG,GAAGnC,EAAGoD,KAAKoF,YAAYrG,GAAGlC,GAE5D6I,EAAQjB,YACRiB,EAAQZ,SACRY,EAAQrE,mBC1ISsE,aACnB,SAAAA,EAAY/I,EAAGC,EAAGO,EAAW0C,GAAQtB,EAAAwB,KAAA2F,GACnC3F,KAAKpD,EAAIA,EACToD,KAAKnD,EAAIA,EACTmD,KAAKsD,OAAS,IACdtD,KAAKF,MAAQA,EACV1C,EAAY,IACbA,GAAatB,KAAKC,KAEpBiE,KAAKqD,SAAW,CAACF,IAAK,EAAKC,IAAKhG,GAChC4C,KAAKD,MAAQ,CAACnD,EAAG,EAAKC,EAAG,GACzBmD,KAAK4F,YACL5F,KAAK6F,aAAe,IAAIjG,EAAa,GAAII,KAAKF,MAAO,qDAOvC+B,GAId,IAFA,IAAIjF,EAAIoD,KAAKpD,EAAId,KAAK0E,IAAIR,KAAKqD,SAASD,KAAMpD,KAAKsD,OAC/CzG,EAAImD,KAAKnD,EAAIf,KAAK4E,IAAIV,KAAKqD,SAASD,KAAMpD,KAAKsD,OAC3CvE,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CAEpC,IAAI/B,EAAKJ,EAAId,KAAKG,eAAe+D,KAAKsD,OAAQtD,KAAKsD,QAC/CrG,EAAKJ,EAAIf,KAAKG,eAAe+D,KAAKsD,OAAQtD,KAAKsD,QACnDtD,KAAK6F,aAAa/D,IAAI9E,EAAIC,EAAInB,KAAKE,GAAKgE,KAAKqD,SAASD,KAAM,IAAM,wCAQpEpD,KAAKD,MAAMnD,EAAId,KAAK0E,IAAIR,KAAKqD,SAASD,KAAOpD,KAAKqD,SAASF,IAC3DnD,KAAKD,MAAMlD,GAAKf,KAAK4E,IAAIV,KAAKqD,SAASD,KAAOpD,KAAKqD,SAASF,4CAO5D,OAAGnD,KAAKpD,EAAIoD,KAAKsD,QAAU,KAAQtD,KAAKpD,EAAIoD,KAAKsD,QAAU,GAC3DtD,KAAKnD,EAAImD,KAAKsD,QAAU,KAAQtD,KAAKnD,EAAImD,KAAKsD,QAAU,iCASnDwC,GACL9F,KAAK+B,gBAAgBjG,KAAKO,UAAU,EAAG,IACvC2D,KAAKpD,GAAKoD,KAAKD,MAAMnD,EACrBoD,KAAKnD,GAAKmD,KAAKD,MAAMlD,EACrBmD,KAAK6F,aAAa7D,wCAOblB,GACLA,EAAIC,OACJD,EAAImB,YAAcjC,KAAKF,MACvBgB,EAAIE,YACJF,EAAIK,IAAInB,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAKsD,OAAQ,EAAGxH,KAAKC,KAC7C+E,EAAI2D,YACJ3D,EAAIgE,SACJhE,EAAIO,UACJrB,KAAK6F,aAAaxD,OAAOvB,YC7E7B,SAAAiF,EAAAC,GAA6U,OAA1OD,EAA3E,oBAAAE,QAAA,kBAAAA,OAAAC,SAA2E,SAAAF,GAAoC,cAAAA,GAA+B,SAAAA,GAAoC,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAtG,UAAA,gBAAAqG,IAAmIA,GAE9T,SAAAI,EAAAJ,GAWf,OATAI,EADA,oBAAAH,QAAA,WAAAF,EAAAE,OAAAC,UACA,SAAAF,GACA,OAAAD,EAAAC,IAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAtG,UAAA,SAAAoG,EAAAC,KAIAA,GCXe,SAAAK,EAAAC,EAAAC,GACf,OAAAA,GAAsB,WAAPH,EAAOG,IAAA,oBAAAA,ECHP,SAAAD,GACf,YAAAA,EACA,UAAAE,eAAA,6DAGA,OAAAF,EDESG,CAAqBH,GAH9BC,EEJe,SAAAG,EAAAC,GAIf,OAHAD,EAAArH,OAAAuH,eAAAvH,OAAAwH,eAAA,SAAAF,GACA,OAAAA,EAAAG,WAAAzH,OAAAwH,eAAAF,KAEAA,GCFe,SAASI,EAAIlI,EAAAmI,EAAAC,GAiB5B,OAfIF,EADJ,qBAAAG,iBAAAC,IACQD,QAAAC,IAEA,SAAAtI,EAAAmI,EAAAC,GACR,IAAAG,ECNe,SAAAC,EAAAL,GACf,MAAA3H,OAAAM,UAAA2H,eAAAf,KAAAc,EAAAL,IAEA,QADAK,EAAaX,EAAcW,MAI3B,OAAAA,EDAiBE,CAAa1I,EAAAmI,GAC9B,GAAAI,EAAA,CACA,IAAAI,EAAAnI,OAAAoI,yBAAAL,EAAAJ,GAEA,OAAAQ,EAAAL,IACAK,EAAAL,IAAAZ,KAAAU,GAGAO,EAAAE,SAIa7I,EAAAmI,EAAAC,GAAApI,GEnBE,SAAA8I,EAAAhB,EAAAiB,GAMf,OALAD,EAAAtI,OAAAuH,gBAAA,SAAAD,EAAAiB,GAEA,OADAjB,EAAAG,UAAAc,EACAjB,IAGAA,EAAAiB,GCLe,SAAAC,EAAAC,EAAAC,GACf,uBAAAA,GAAA,OAAAA,EACA,UAAApJ,UAAA,sDAGAmJ,EAAAnI,UAAAN,OAAA2I,OAAAD,KAAApI,UAAA,CACAwG,YAAA,CACAuB,MAAAI,EACA1I,UAAA,EACAD,cAAA,KAGA4I,GAAkBJ,EAAcG,EAAAC,OCVXE,cACnB,SAAAA,EAAYrL,EAAGC,EAAGO,EAAW0C,GAAO,IAAAoI,EAAA,OAAA1J,EAAAwB,KAAAiI,IAClCC,EAAA7B,EAAArG,KAAA0G,EAAAuB,GAAA1B,KAAAvG,KAAMpD,EAAGC,EAAGO,EAAW0C,KAElBqI,WAAa,SAAY,KAC9BD,EAAKrJ,OAAS,KACdqJ,EAAKE,KAAO,GACZF,EAAK1G,MAAQ,EANqB0G,aADFvC,yCAUvBG,GAET,IADA,IAAIuC,EAAW,IACPtJ,EAAI,EAAGA,EAAI+G,EAAQ9G,OAAQD,IAAK,CACtC,IAAIuJ,EAAW,EACZtI,KAAKnB,SAAWiH,EAAQ/G,KACzBuJ,EAAWtI,KAAKuI,aAAazC,EAAQ/G,KAEpCuJ,EAAWD,IACZrI,KAAKnB,OAASiH,EAAQ/G,GACtBsJ,EAAWC,GAGC,MAAbD,IACDrI,KAAKnB,OAAS,2CAILA,GACX,IAAI7B,EAAKgD,KAAKpD,EAAIiC,EAAOjC,EACrBK,EAAK+C,KAAKnD,EAAIgC,EAAOhC,EAEzB,OADef,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,yCAI5B4B,GACZ,IAAI7B,EAAKgD,KAAKpD,EAAIiC,EAAOjC,EACrBK,EAAK+C,KAAKnD,EAAIgC,EAAOhC,EACrByL,EAAWxM,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GACpCG,EAAYtB,KAAKuB,KAAKJ,EAAKqL,GAO/B,OANGtL,EAAK,IACNI,IAAc,GAEZA,EAAY,IACdA,GAAatB,KAAKC,KAEbqB,4CAIP,IAAIA,EAAY4C,KAAKwI,cAAcxI,KAAKnB,QACrCmB,KAAKqD,SAASD,IAAM,IACrBpD,KAAKqD,SAASD,KAAOtH,KAAKC,KAE5B,IAAI0M,EAAQzI,KAAKqD,SAASD,IAAMhG,EAC7BqL,EAAQ3M,KAAKE,KACdyM,GAAS3M,KAAKC,KAEb0M,GAAS3M,KAAKE,KACfyM,GAAS3M,KAAKC,KAEb0M,EAAQ,IACTzI,KAAKqD,SAASD,KAAOpD,KAAKmI,YAEzBM,EAAQ,IACTzI,KAAKqD,SAASD,KAAOpD,KAAKmI,gDAK5B,IAAIO,EAAQ,CAAC9L,EAAGoD,KAAKpD,EAAGC,EAAGmD,KAAKnD,GAChCmD,KAAKoI,KAAK3C,KAAKiD,GACZ1I,KAAKoI,KAAKpJ,OAAS,IAEpBgB,KAAKoI,KAAKO,OAAO,EAAG,uCAKtB3I,KAAKoI,KAAKQ,QAAQ,SAAAF,GAChBA,EAAM9L,GAAKd,KAAKG,eAAe,EAAG,GAClCyM,EAAM7L,GAAKf,KAAKG,eAAe,EAAG,oCAI/B6J,GACa,UAAf9F,KAAKF,MACHgG,EAAQ9G,OAAS,GAClBgB,KAAK6I,WAAW/C,GAIlB9F,KAAKnB,OAASiH,EAEb9F,KAAKnB,SACNmB,KAAK8I,kBACL/B,EAAAL,EAAAuB,EAAAtI,WAAA,YAAAK,MAAAuG,KAAAvG,OAEFA,KAAK+I,YACL/I,KAAKpD,GAAKoD,KAAKD,MAAMnD,EACrBoD,KAAKnD,GAAKmD,KAAKD,MAAMlD,EACrBmD,KAAKgJ,2CAGAlI,GACLiG,EAAAL,EAAAuB,EAAAtI,WAAA,SAAAK,MAAAuG,KAAAvG,KAAac,GACbA,EAAIC,OACJD,EAAImB,YAAcjC,KAAKF,MACvBgB,EAAImI,UAAYjJ,KAAKwB,MACrB,IAAI,IAAIzC,EAAI,EAAGA,EAAIiB,KAAKoI,KAAKpJ,OAAS,EAAGD,IACvC+B,EAAIE,YACJF,EAAII,OAAOlB,KAAKoI,KAAKrJ,GAAGnC,EAAGoD,KAAKoI,KAAKrJ,GAAGlC,GACxCiE,EAAI+D,OAAO7E,KAAKoI,KAAKrJ,EAAI,GAAGnC,EAAGoD,KAAKoI,KAAKrJ,EAAI,GAAGlC,GAChDiE,EAAIgE,SACJhE,EAAImI,WAAa,GAEnBnI,EAAIO,mBCjHa6H,cAInB,SAAAA,EAAYtM,EAAGC,GAAG,IAAAqL,EAAA,OAAA1J,EAAAwB,KAAAkJ,IAChBhB,EAAA7B,EAAArG,KAAA0G,EAAAwC,GAAA3C,KAAAvG,QACKuD,eAAiB,KACtB2E,EAAKtL,EAAIA,EACTsL,EAAKrL,EAAIA,EACTqL,EAAKiB,SAAW,EAChBjB,EAAKhF,MAAQ,CAACC,IAAK,EAAKC,IAAK,GAC7B8E,EAAK/D,aAAe,GACpB+D,EAAKkB,SAAW,GAEhBlB,EAAKmB,YAAc,GAEnBnB,EAAK5E,OAAS,GAEd4E,EAAKoB,aAAe,GAEpBpB,EAAKqB,SAAW,GAChBrB,EAAKpI,MAAQ,GACboI,EAAK3F,KAAO,GACZ2F,EAAKsB,MAAQ,EACbtB,EAAKuB,OAAS,EACdvB,EAAKwB,WACLxB,EAAK1E,gBAAgB1D,MAAQoI,EAAKpI,MAClCoI,EAAK1E,gBAAgBzD,MAAQ,EAC7BmI,EAAKyB,WACLzB,EAAKjF,WAAa,EAClBiF,EAAK0B,gBAEL1B,EAAK2B,aAAe,GACpB3B,EAAK4B,mBACL5B,EAAK6B,KAAO,GACZ7B,EAAK5C,eA/BW4C,aAJapF,yCAwC7B,IAAIhD,EACA1D,EAASN,KAAKO,UAAU,EAAG,KAE5BD,EAAS,IACV0D,EAAQ,UACRE,KAAKuC,KAAO,QACZvC,KAAKyJ,OAAS,KAERrN,EAAS,IACf0D,EAAQ,SACRE,KAAKuC,KAAO,SACZvC,KAAKyJ,OAAS,KAEPrN,EAAS,IAChB0D,EAAQ,OACRE,KAAKuC,KAAO,SACZvC,KAAKyJ,OAAS,MAGd3J,EAAQ,SACRE,KAAKyJ,OAAS,IACdzJ,KAAKuC,KAAO,SAEdvC,KAAKF,MAAQA,qCAIbE,KAAKgK,MAAQ,EACI,WAAdhK,KAAKuC,MAAoC,UAAfvC,KAAKF,OAChCE,KAAKgK,MAAQ,EACbhK,KAAKwJ,MAAQxJ,KAAKgK,OAEE,WAAdhK,KAAKuC,MACXvC,KAAKgK,MAAQ,GACbhK,KAAKwJ,MAAQxJ,KAAKgK,QAGlBhK,KAAKgK,MAAQ,GACbhK,KAAKwJ,MAAQxJ,KAAKgK,+CAKH,WAAdhK,KAAKuC,MAAmC,UAAdvC,KAAKuC,KAChCvC,KAAKiD,WAAanH,KAAKO,UAAU,IAAK,KAElB,WAAd2D,KAAKuC,KACXvC,KAAKiD,WAAanH,KAAKO,UAAU,IAAK,KAGtC2D,KAAKiD,WAAanH,KAAKO,UAAU,IAAK,KAErC2D,KAAK4D,SAAS,KACf5D,KAAKiD,WAAanH,KAAKY,MAAMsD,KAAKiD,WAAa,+CAcjD,IANA,IAAIgH,EACAC,EACAC,EACAC,EAGIrL,EAAI,EAAGA,EADG,EACcA,IAAK,CAEnC,IAAI2B,EAAM5E,KAAK4E,IAAI3B,EAAIjD,KAAKE,GAAK,GAC7BwE,EAAM1E,KAAK0E,IAAIzB,EAAIjD,KAAKE,GAAK,GAEjCiO,EAAKvJ,EAAMV,KAAKqJ,YAChBa,EAAKxJ,EAAMV,KAAKsD,OAEhB6G,GAAM3J,EAAMR,KAAKqJ,YACjBe,GAAM5J,EAAMR,KAAKsD,OACjBtD,KAAK6J,aAAapE,KAAK,CAAC4E,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,4CAQtDpK,KAAK+J,KAAO,CAACnN,EAAGd,KAAKG,cAAc,IAAK,KAAMY,EAAGf,KAAKG,cAAc,IAAK,4CAKzE+D,KAAKD,MAAMlD,IAAMf,KAAK4E,IAAIV,KAAKkD,MAAME,KAAOpD,KAAKkD,MAAMC,IACvDnD,KAAKD,MAAMnD,GAAKd,KAAK0E,IAAIR,KAAKkD,MAAME,KAAOpD,KAAKkD,MAAMC,IAEnDrH,KAAKwC,IAAI0B,KAAKD,MAAMnD,IAAM,MACxBoD,KAAKD,MAAMnD,EAAI,EAChBoD,KAAKD,MAAMnD,GAAK,IAGhBoD,KAAKD,MAAMnD,EAAI,KAIhBd,KAAKwC,IAAI0B,KAAKD,MAAMlD,IAAM,MACxBmD,KAAKD,MAAMlD,EAAI,EAChBmD,KAAKD,MAAMlD,GAAK,IAGhBmD,KAAKD,MAAMlD,EAAI,8CAUfmD,KAAKpD,EAAIoD,KAAKsJ,cAAgB,KAAQtJ,KAAKD,MAAMnD,EAAI,GAAOoD,KAAKpD,EAAIoD,KAAKsJ,cAAgB,GAAKtJ,KAAKD,MAAMnD,EAAI,KAChHoD,KAAKD,MAAMnD,IAAM,EACjBoD,KAAKkD,MAAME,KAAOtH,KAAKE,GAAK,EAC5BgE,KAAKkD,MAAMC,IAAM,IAEfnD,KAAKnD,EAAImD,KAAKsJ,cAAgB,KAAQtJ,KAAKD,MAAMlD,EAAI,GAAOmD,KAAKnD,EAAImD,KAAKsJ,cAAgB,GAAKtJ,KAAKD,MAAMlD,EAAI,KAChHmD,KAAKD,MAAMlD,IAAM,EACjBmD,KAAKkD,MAAME,KAAOtH,KAAKE,GAAK,EAC5BgE,KAAKkD,MAAMC,IAAM,2CAILsH,EAAW7N,EAAGC,GAC5B,IAAI,IAAI6N,EAAI,EAAGA,EAAID,EAAUzL,OAAQ0L,IACnC,GAAG5O,KAAK0B,yBAAyBZ,EAAGC,EAAGmD,KAAKuJ,SAAUkB,EAAUC,GAAG9N,EAAG6N,EAAUC,GAAG7N,EAAG4N,EAAUC,GAAGpH,QACjG,OAAO,EAGX,OAAO,qCAIP,IAAIgF,EAAWxM,KAAKyB,YAAYyC,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAK+J,KAAKnN,EAAGoD,KAAK+J,KAAKlN,GACvEmD,KAAKkD,MAAME,IAAMtH,KAAKwB,OAAOgL,EAAUtI,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAK+J,KAAKnN,EAAGoD,KAAK+J,KAAKlN,GAC9EmD,KAAKkD,MAAMC,IAAMnD,KAAKmE,aACnBmE,EAAWtI,KAAKsD,SACjBtD,KAAK+J,KAAO,sCAIN3M,GACR4C,KAAKkD,MAAMC,IAAMnD,KAAKmE,aACtBnE,KAAKkD,MAAME,IAAMhG,EACA,KAAd4C,KAAK+J,OAEN/J,KAAK2J,WACL3J,KAAKwJ,+CAIKJ,GACZpJ,KAAKoJ,SAAWA,EAChBpJ,KAAKoJ,SAASlE,MAAO,EACrBlF,KAAKoJ,SAAS/F,SAASzG,EAAIoD,KAAKD,MAAMnD,EACtCoD,KAAKoJ,SAAS/F,SAASxG,EAAImD,KAAKD,MAAMlD,0CAItC,IAAIyL,EAAWxM,KAAKyB,YAAYyC,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAKoJ,SAASxM,EAAGoD,KAAKoJ,SAASvM,GAC3EO,EAAYtB,KAAKwB,OAAOgL,EAAUtI,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAKoJ,SAASxM,EAAGoD,KAAKoJ,SAASvM,GAEjFD,EAAIoD,KAAKpD,EAAId,KAAK0E,IAAIpD,EADd,KACmCkL,EAC3CzL,EAAImD,KAAKnD,EAAIf,KAAK4E,IAAItD,EAFd,KAEmCkL,EAC/CtI,KAAKoJ,SAASxM,EAAIA,EAClBoD,KAAKoJ,SAASvM,EAAIA,iDAGG8N,GACrB,IAAIvN,EAAYtB,KAAKa,aAAaqD,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAKoJ,SAASxM,EAAGoD,KAAKoJ,SAASvM,GAE7E+N,EAAQxN,EADFtB,KAAKa,aAAaqD,KAAKpD,EAAGoD,KAAKnD,EAAG8N,EAAO/N,EAAG+N,EAAO9N,GAG7D,GAAGf,KAAKwC,IAAIsM,GAAS,EAAI9O,KAAKE,GAAK,IAAK,CACtC,IAAI6O,EAAY,GAAK7K,KAAKoJ,SAASnE,KACnCjF,KAAKD,MAAMlD,IAAMf,KAAK4E,IAAIV,KAAKkD,MAAME,KAAOpD,KAAKkD,MAAMC,IACvDnD,KAAKD,MAAMnD,GAAKd,KAAK0E,IAAIR,KAAKkD,MAAME,KAAOpD,KAAKkD,MAAMC,IACtDnD,KAAKoJ,SAAS/F,SAASzG,EAAId,KAAK0E,IAAIpD,GAAayN,EACjD7K,KAAKoJ,SAAS/F,SAASxG,GAAKf,KAAK4E,IAAItD,GAAayN,EAClD7K,KAAKoJ,SAASlE,MAAO,EACrBlF,KAAKoJ,SAAW,4CAQJvH,GACd,IAAI,IAAI9C,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CACpC,IAAIsF,EAAQrE,KAAKqD,SAASD,IAAMtH,KAAKG,eAAeH,KAAKE,GAAI,GACzDY,EAAIoD,KAAKpD,EAAId,KAAK4E,IAAI2D,GAASrE,KAAKsD,OACpCzG,EAAImD,KAAKnD,EAAIf,KAAK0E,IAAI6D,GAASrE,KAAKsD,OAExCtD,KAAKwD,gBAAgB1B,IAAIlF,EAAGC,EAAGmD,KAAKqD,SAASD,IAAMtH,KAAKE,IAAK,IAAM,8CAKrD6F,GAGhB,IAFA,IAAIjF,EAAIoD,KAAKoJ,SAASxM,EAClBC,EAAImD,KAAKoJ,SAASvM,EACdkC,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CACpC,IAAIsF,EAAQvI,KAAKG,cAAc,EAAGH,KAAKC,KAEnCiB,EAAKJ,EAAId,KAAK4E,IAAI2D,GAASrE,KAAKoJ,SAAS9F,OACzCrG,EAAKJ,EAAIf,KAAK0E,IAAI6D,GAASrE,KAAKoJ,SAAS9F,OAE7CtD,KAAKwD,gBAAgB1B,IAAI9E,EAAIC,EAAIoH,GAAQ,IAAM,4CAKjD,IAAI,IAAItF,EAAI,EAAGA,GAAK,EAAGA,IAClBiB,KAAK4D,SAAS7E,KACfiB,KAAKgE,cAAcjF,KAChBiB,KAAKgE,cAAcjF,IAAM,IAC1BiB,KAAK4D,SAAS7E,IAAK,qCAqCzB,GA3BAiB,KAAKsE,gBACLtE,KAAK8K,cACL9K,KAAKwE,gBACLuC,EAAAL,EAAAwC,EAAAvJ,WAAA,iBAAAK,MAAAuG,KAAAvG,MACGA,KAAKwJ,MAAQxJ,KAAKgK,QACnBhK,KAAKwJ,QACFxJ,KAAKwJ,OAAS,GACfxJ,KAAK2J,YAGN3J,KAAKwJ,QAAUxJ,KAAKgK,OAAuB,KAAdhK,KAAK+J,MACnC/J,KAAK+K,WAGJ/K,KAAKgD,YACNhD,KAAKiD,aACFjD,KAAKiD,YAAc,IACpBjD,KAAK4J,gBACL5J,KAAKgD,WAAY,IAGlBhD,KAAKD,MAAMnD,EAAI,EAChBoD,KAAKmJ,UAAY,IAGjBnJ,KAAKmJ,UAAY,IAEE,KAAlBnJ,KAAKoJ,SAAiB,CACvB,IAAIlM,EAAOpB,KAAKyB,YAAYyC,KAAKpD,EAAGoD,KAAKnD,EAAGmD,KAAKoJ,SAASxM,EAAGoD,KAAKoJ,SAASvM,GACxEmD,KAAKoJ,SAASjE,WAAajI,EAAO8C,KAAKsJ,aAAetJ,KAAKoJ,SAAS9F,QACrEtD,KAAKoJ,SAASlE,MAAO,EACrBlF,KAAKoJ,SAAW,KAGhBpJ,KAAKoJ,SAAS/F,SAASzG,EAAIoD,KAAKD,MAAMnD,EACtCoD,KAAKoJ,SAAS/F,SAASxG,EAAImD,KAAKD,MAAMlD,EACtCmD,KAAKgL,gBACLhL,KAAKiL,kBAAkB,IAG3BjL,KAAKpD,GAAKoD,KAAKD,MAAMnD,EACrBoD,KAAKnD,GAAKmD,KAAKD,MAAMlD,EAClBf,KAAKM,SAAW,IACjB4D,KAAK+B,gBAAgB,GAGvB/B,KAAKwD,gBAAgBxB,wCAMhBlB,GACLA,EAAIC,OACJD,EAAImB,YAAcjC,KAAKF,MACvBgB,EAAI6D,UAAU3E,KAAKpD,EAAGoD,KAAKnD,GAC3BiE,EAAI8D,OAAO5E,KAAKmJ,UAChBrI,EAAIE,YACJF,EAAIK,IAAI,EAAG,EAAGnB,KAAKqJ,YAAa,EAAGvN,KAAKC,KACxC+E,EAAI2D,YACJ3D,EAAIgE,SACJhE,EAAIE,YACJF,EAAIK,IAAI,EAAG,EAAGnB,KAAKsD,OAAQ,EAAGxH,KAAKC,KACnC+E,EAAI2D,YACJ3D,EAAIgE,SACJ9E,KAAK6J,aAAajB,QAAQ,SAAAsC,GACxBpK,EAAIE,YACJF,EAAII,OAAOgK,EAAQb,GAAIa,EAAQX,IAC/BzJ,EAAI+D,OAAOqG,EAAQZ,GAAIY,EAAQV,IAC/B1J,EAAIgE,WAENhE,EAAIO,UAEJrB,KAAKwD,gBAAgBnB,OAAOvB,GACzBd,KAAK4D,SAAS,IACfmD,EAAAL,EAAAwC,EAAAvJ,WAAA,aAAAK,MAAAuG,KAAAvG,KAAiBc,YC/VFqK,aACpB,SAAAA,EAAYvO,EAAGC,EAAG0F,GAAO/D,EAAAwB,KAAAmL,GACxBnL,KAAKoL,IAAM,CAACxO,EAAGA,EAAGC,EAAGA,GACrBmD,KAAKuC,KAAOA,EACZvC,KAAKsD,OAAS,GACdtD,KAAKF,MAAQ,MACbE,KAAKwC,MAAQ,EACbxC,KAAK6J,aAAe,GACpB7J,KAAKqL,YACLrL,KAAKsL,0DAIL,OAAQtL,KAAKuC,MAEX,KAAK,EAEJvC,KAAKwC,MAAQ,IACb,MAED,KAAK,EAEJxC,KAAKwC,MAAQ,KACb,MAED,KAAK,EAEJxC,KAAKwC,MAAQ,KACbxC,KAAKF,MAAQ,+CAOhB,OAAQE,KAAKuC,MACZ,KAAK,EACJvC,KAAK8J,+DAeP,IALA,IAAIG,EACAC,EACAC,EACAC,EAEIrL,EAAI,EAAGA,EADG,EACcA,IAAK,CAEpC,IAAI2B,EAAM5E,KAAK4E,IAAI3B,EAAIjD,KAAKE,GAAK,GAC7BwE,EAAM1E,KAAK0E,IAAIzB,EAAIjD,KAAKE,GAAK,GAEjCiO,EAAKvJ,EAAMV,KAAKsD,OAChB4G,GAAMxJ,EAAMV,KAAKsD,OAEjB6G,GAAM3J,EAAMR,KAAKsD,OACjB8G,EAAK5J,EAAMR,KAAKsD,OAChBtD,KAAK6J,aAAapE,KAAK,CAAC4E,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,oCAO/CtJ,GACLA,EAAIC,OACJD,EAAImB,YAAcjC,KAAKF,MACvBgB,EAAI6D,UAAU3E,KAAKoL,IAAIxO,EAAGoD,KAAKoL,IAAIvO,GACnCiE,EAAIE,YACJF,EAAIK,IAAI,EAAG,EAAGnB,KAAKsD,OAAQ,EAAGxH,KAAKC,KACnC+E,EAAI2D,YACJ3D,EAAIgE,SACLhE,EAAIE,YACJF,EAAIyK,KAAoB,KAAdvL,KAAKsD,OAA8B,KAAdtD,KAAKsD,OAA6B,IAAdtD,KAAKsD,OAA6B,IAAdtD,KAAKsD,QAC5ExC,EAAI2D,YACJ3D,EAAIgE,SACH9E,KAAK6J,aAAajB,QAAQ,SAAAsC,GACxBpK,EAAIE,YACJF,EAAII,OAAOgK,EAAQb,GAAIa,EAAQX,IAC/BzJ,EAAI+D,OAAOqG,EAAQZ,GAAIY,EAAQV,IAC/B1J,EAAIgE,WAENhE,EAAIO,mBCvFcmK,aACnB,SAAAA,EAAY5O,EAAGC,EAAG6F,EAAQH,GAAO/D,EAAAwB,KAAAwL,GAC/BxL,KAAKpD,EAAIA,EACToD,KAAKnD,EAAIA,EACTmD,KAAKuC,KAAOA,EACZvC,KAAK0C,OAAS,GACd1C,KAAKK,KAAO,EACZL,KAAKyL,KAAO,EACZzL,KAAK0L,aAAahJ,GAClB1C,KAAKF,MAAQ,wDAGF4C,GACX,OAAQ1C,KAAKuC,MACX,IAAK,OACHvC,KAAKK,KAAO,GACZL,KAAKyL,KAAO,GACZzL,KAAK0C,OAAS,KAAOA,EACrB,MACF,IAAK,cACH1C,KAAKK,KAAO,GACZL,KAAKyL,KAAO,GACZzL,KAAK0C,OAASA,oCASlB,GADA1C,KAAKK,OACFL,KAAKK,MAAQ,EACd,OAAO,iCAIJS,GACLA,EAAIC,OACJD,EAAIG,UAAYjB,KAAKF,MACrBgB,EAAI6B,KAAO3C,KAAKyL,KAAO,WACvB3K,EAAI8B,SAAS5C,KAAK0C,OAAQ1C,KAAKpD,EAAGoD,KAAKnD,GACvCiE,EAAIO,mBCzCasK,aACnB,SAAAA,EAAY/O,EAAGC,EAAG0F,EAAMqJ,GAAcpN,EAAAwB,KAAA2L,GACpC3L,KAAKpD,EAAIA,EACToD,KAAKnD,EAAIA,EACTmD,KAAKuC,KAAOA,EACZvC,KAAK6L,KAAOD,2CAGP9K,GACLA,EAAIC,OACJD,EAAIG,UAAY,SAChBH,EAAI6B,KAAO,aACX7B,EAAIoB,YAAc,GAClBpB,EAAI8B,SAAS5C,KAAKuC,KAAOvC,KAAK6L,KAAM7L,KAAKpD,EAAGoD,KAAKnD,GACjDiE,EAAIO,mBCDayK,mBAInB,SAAAA,EAAYC,EAAYC,EAAkBC,EAAeC,EAAaC,EAAiBC,GAAO5N,EAAAwB,KAAA8L,GAC5F9L,KAAKqM,WAAaH,EAClBlM,KAAKoM,KAAOA,EAEZpM,KAAKsM,OAAS,EACdtM,KAAKuM,aAAe,EACpBvM,KAAKwM,QAAU,IACfxM,KAAKyM,UAAY,IAEjBzM,KAAK0M,aAAe,EAEpB1M,KAAK2M,KAAO,IAAI7J,EAChB9C,KAAK4M,KAAO,GACZ5M,KAAK6M,MAAQ,EAEb7M,KAAK8M,SAAWhR,KAAKO,UAAU2D,KAAKwM,QAAwB,EAAfxM,KAAKwM,SAElDxM,KAAK+M,YAAa,EAClB/M,KAAKgN,aAAe,IACpBhN,KAAKiN,YAAc,GACnBjN,KAAKyK,UAAY,GACjBzK,KAAKkN,kBACLlN,KAAK2B,UAAY,GACjB3B,KAAKmN,oBAELnN,KAAKoN,MAAQ,EACbpN,KAAKqN,UAAY,EACjBrN,KAAKsN,MAAQ,EACbtN,KAAKuN,MAAQ,EACbvN,KAAKwN,OAAS,GACdxN,KAAKyN,WAAa,CAACL,MAAO,GAAIE,MAAO,GAAIC,MAAO,IAChDvN,KAAK0N,UAEL1N,KAAK2N,eAAiB3N,KAAKuN,MAAQvN,KAAK0M,aAExC1M,KAAK4N,UAAY,GACjB5N,KAAK6N,YAAc,GACnB7N,KAAK4D,SAAW,GAChB5D,KAAK8N,aAAehS,KAAKO,UAAU2D,KAAKyM,UAA4B,EAAjBzM,KAAKyM,WAExDzM,KAAK+N,UAAW,EAChB/N,KAAKgO,QAAS,EAEdhO,KAAKmM,gBAAkBA,EAGvBnM,KAAKiO,OAAS,CAACC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,GAEtH3O,KAAK4O,kBAAoB7C,EACzB/L,KAAKgM,iBAAmBA,EACxBhM,KAAK6O,oBAAsB5C,EAG3BjM,KAAK8O,KAAO9O,KAAK8O,KAAKC,KAAK/O,MAC3BA,KAAKgP,cAAgBhP,KAAKgP,cAAcD,KAAK/O,MAC7CA,KAAKiP,YAAcjP,KAAKiP,YAAYF,KAAK/O,MACzCkP,OAAOC,UAAYnP,KAAKgP,cACxBE,OAAOE,QAAUpP,KAAKiP,YAGtBjP,KAAKqP,SAAWC,YAAYtP,KAAK8O,KAAM,GAAG,mDAQ1C9O,KAAK2M,KAAO,IAAI7J,EAChB9C,KAAK4M,KAAO,GAEZ5M,KAAK8M,SAAWhR,KAAKO,UAAU2D,KAAKwM,QAAwB,EAAfxM,KAAKwM,SAClDxM,KAAK4D,SAAW,GAChB5D,KAAK8N,aAAehS,KAAKO,UAAU2D,KAAKyM,UAA4B,EAAjBzM,KAAKyM,WAExDzM,KAAK+M,YAAa,EAClB/M,KAAKgN,aAAe,IACpBhN,KAAKiN,YAAc,GACnBjN,KAAKyK,UAAY,GACjBzK,KAAK0M,aAAe,EACpB1M,KAAKkN,kBACLlN,KAAK2B,UAAY,GACjB3B,KAAKmN,oBAELnN,KAAKoN,MAAQ,EACbpN,KAAKsN,MAAQ,EACbtN,KAAKuN,MAAQ,EACbvN,KAAK2N,eAAiB3N,KAAKuN,MAAQvN,KAAK0M,aAExC1M,KAAK4N,UAAY,GACjB5N,KAAK6N,YAAc,GAEnB7N,KAAK+N,UAAW,EAChB/N,KAAKgO,QAAS,8CAQdhO,KAAK2B,UAAU8D,KAAK,IAAI7F,EADd,IACgC,QAF9B,IAGZI,KAAK2B,UAAU8D,KAAK,IAAI7F,EAFd,IAEgC,QAH9B,IAIZI,KAAK2B,UAAU8D,KAAK,IAAI7F,EAHd,IAGgC,OAJ9B,IAKZI,KAAK2B,UAAU8D,KAAK,IAAI7F,EAJd,IAIgC,MAL9B,IAMZI,KAAK2B,UAAU8D,KAAK,IAAI7F,EALd,IAKgC,UAN9B,IAOZI,KAAK2B,UAAU8D,KAAK,IAAI7F,EANd,IAMgC,SAP9B,IAQZI,KAAK2B,UAAU8D,KAAK,IAAI7F,EAPd,IAOgC,SAR9B,0CAcA2P,GACZA,EAAMC,iBACe,KAAlBD,EAAME,SAAoC,KAAlBF,EAAME,UAC/BzP,KAAKgO,QAAS,EACdhO,KAAKoM,KAAKsD,UAAY,SACtB1P,KAAKoM,KAAKuD,YAAY,GAAK,SAC3B3P,KAAKoM,KAAKuD,YAAY,GAAK,UAC3B3P,KAAKoM,KAAKuD,YAAY,GAAK,OAC3B3P,KAAKoM,KAAKwD,iBAEe,SAAxB5P,KAAKoM,KAAKsD,YAIb1P,KAAKiO,OAAOsB,EAAME,UAAW,uCAOnBF,GACVA,EAAMC,iBAENxP,KAAKiO,OAAOsB,EAAME,UAAW,oCAI7BzP,KAAKyN,WAAWL,MAAQ,IAAIzB,EAA4B,IAAlB3L,KAAKqM,WAAqC,IAAlBrM,KAAKqM,WAAmB,UAAWrM,KAAKoN,OACtGpN,KAAKyN,WAAWH,MAAQ,IAAI3B,EAA4B,IAAlB3L,KAAKqM,WAAqC,IAAlBrM,KAAKqM,WAAmB,UAAWrM,KAAKsN,OACtGtN,KAAKyN,WAAWF,MAAQ,IAAI5B,EAA4B,IAAlB3L,KAAKqM,WAAqC,IAAlBrM,KAAKqM,WAAmB,UAAWrM,KAAKuN,kDAQtG,IAAI3Q,EAAIoD,KAAK2M,KAAK/P,EAAId,KAAK0E,IAAIR,KAAK2M,KAAKzJ,MAAME,KAAMpD,KAAK2M,KAAKrJ,OAAS,IACpEzG,EAAImD,KAAK2M,KAAK9P,EAAIf,KAAK4E,IAAIV,KAAK2M,KAAKzJ,MAAME,KAAMpD,KAAK2M,KAAKrJ,OAAS,IACrEtD,KAAK2M,KAAK/I,SAAS,IACpB5D,KAAKiN,YAAYxH,KAAK,IAAIwC,EAAOrL,EAAGC,EAAGmD,KAAK2M,KAAKzJ,MAAME,IAAKpD,KAAK2M,KAAK7M,QACtEE,KAAKmM,gBAAgB0D,QAAQ,YAG7B7P,KAAKiN,YAAYxH,KAAK,IAAIE,EAAW/I,EAAGC,EAAGmD,KAAK2M,KAAKzJ,MAAME,IAAKpD,KAAK2M,KAAK7M,QAC1EE,KAAKmM,gBAAgB0D,QAAQ,UAE/B7P,KAAK2M,KAAK3J,WAAY,wCAQV8M,EAAKC,EAAIC,GACrB,IAAIhT,EAAK8S,EAAIlT,EAAImT,EACb9S,EAAK6S,EAAIjT,EAAImT,EAEb1H,EAAWxM,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GAEpCG,EAAYtB,KAAKuB,KAAKJ,EAAKqL,GAE5BtL,EAAK,IACNI,IAAc,GAGhB,IAAIR,EAAIkT,EAAIlT,EAAId,KAAK0E,IAAIpD,GAAY0S,EAAIxM,OAAS,IAC9CzG,EAAIiT,EAAIjT,EAAIf,KAAK4E,IAAItD,GAAY0S,EAAIxM,OAAS,IAC/CwM,EAAIlM,SAAS,IACd5D,KAAKiN,YAAYxH,KAAK,IAAIwC,EAAOrL,EAAGC,EAAGO,EAAW0S,EAAIhQ,QACtDE,KAAKmM,gBAAgB0D,QAAQ,YAG7B7P,KAAKiN,YAAYxH,KAAK,IAAIE,EAAW/I,EAAGC,EAAGO,EAAW0S,EAAIhQ,QAC1DE,KAAKmM,gBAAgB0D,QAAQ,UAE/BC,EAAI9M,WAAY,4CAOhB,KAAMhD,KAAKyK,UAAUzL,OAASgB,KAAK0M,cACjC1M,KAAKiQ,aAAa,uCAQV7S,GASV,IAPA,IAAIR,EACAC,EACAyG,EACA2B,EAEAiL,EAAalQ,KAAKyK,UAAUzL,OAEzBkR,IAAelQ,KAAKyK,UAAUzL,QAAQ,CAE3C,IAAImR,GAAY,EACZC,EAAYtU,KAAKO,UAAU,EAAG,GAElCiH,EADA2B,EAAOnJ,KAAKG,cAAc,GAAI,IAGb,IAAdmU,GACDxT,EAAId,KAAKG,eAAe,EAAIqH,EAAQtD,KAAKqM,WAAa,EAAI/I,GAC1DzG,GAAM,EAAIyG,GAGU,IAAd8M,GACNxT,EAAIoD,KAAKqM,WAAa,EAAI/I,EAC1BzG,EAAIf,KAAKG,eAAe,EAAIqH,EAAQtD,KAAKqM,WAAa,EAAI/I,IAGtC,IAAd8M,GACNxT,EAAId,KAAKG,eAAe,EAAIqH,EAAQtD,KAAKqM,WAAa,EAAI/I,GAC1DzG,EAAImD,KAAKqM,WAAa,EAAI/I,IAI1B1G,GAAM,EAAI0G,EACVzG,EAAIf,KAAKG,eAAe,EAAIqH,EAAQtD,KAAKqM,WAAa,EAAI/I,IAG5D,IAAI,IAAIvE,EAAI,EAAGA,EAAImR,EAAYnR,IAAK,CAClC,IAAIqK,EAAWpJ,KAAKyK,UAAU1L,GAC3BjD,KAAK0B,yBAAyB4L,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,OAAQ1G,EAAGC,EAAGyG,KAC9E6M,GAAY,GAGZA,GACFnQ,KAAKyK,UAAUhF,KAAK,IAAIT,EAASpI,EAAGC,EAAGoI,EAAM7H,sCAWjD,IALA,IAAIR,EACAC,EAEAqT,EAAalQ,KAAK4M,KAAK5N,OAErBkR,IAAelQ,KAAK4M,KAAK5N,QAAQ,CACrC,IAAImR,GAAY,EACZC,EAAYtU,KAAKO,UAAU,EAAG,GAEjB,IAAd+T,GACDxT,EAAId,KAAKG,eAAc,GAAa,MACpCY,GAAI,IAGgB,IAAduT,GACNxT,EAAI,KACJC,EAAIf,KAAKG,eAAc,GAAa,OAGhB,IAAdmU,GACNxT,EAAId,KAAKG,eAAc,GAAa,MACpCY,EAAI,OAIJD,GAAI,GACJC,EAAIf,KAAKG,eAAc,GAAa,OAEtC,IAAI,IAAI8C,EAAI,EAAGA,EAAImR,EAAYnR,IAAK,CAClC,IAAIqK,EAAWpJ,KAAKyK,UAAU1L,GAC3BjD,KAAK0B,yBAAyBZ,EAAGC,EAAGyG,GAAa8F,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,UACnF6M,GAAY,GAGZA,GACFnQ,KAAK4M,KAAKnH,KAAK,IAAIyD,EAAItM,EAAGC,6CAM9B,IAAID,EAAId,KAAKO,UAA4B,GAAlB2D,KAAKqM,WAAqC,GAAlBrM,KAAKqM,YAChDxP,EAAIf,KAAKO,UAA4B,GAAlB2D,KAAKqM,WAAqC,GAAlBrM,KAAKqM,YAChDjQ,EAASN,KAAKM,SACfA,EAAS,EACV4D,KAAK4D,SAAS6B,KAAK,IAAI0F,EAAQvO,EAAGC,EAAG,IAE9BT,EAAS,EAChB4D,KAAK4D,SAAS6B,KAAK,IAAI0F,EAAQvO,EAAGC,EAAG,IAGrCmD,KAAK4D,SAAS6B,KAAK,IAAI0F,EAAQvO,EAAGC,EAAG,mCAUlCwG,EAAUgB,GAKf,MAJ0B,CACtBzH,EAAGyG,EAASzG,EAAId,KAAK4E,IAAI2D,GAAShB,EAASxG,EAAIf,KAAK0E,IAAI6D,GACxDxH,EAAGwG,EAASzG,EAAId,KAAK0E,IAAI6D,GAAShB,EAASxG,EAAIf,KAAK4E,IAAI2D,8CAU5C+E,EAAUiH,GAE1B,IAAIC,EAAgBlH,EAAS/F,SAASzG,EAAIyT,EAAchN,SAASzG,EAC7D2T,EAAgBnH,EAAS/F,SAASxG,EAAIwT,EAAchN,SAASxG,EAMjE,GAAIyT,GAJQD,EAAczT,EAAIwM,EAASxM,GAIX2T,GAHhBF,EAAcxT,EAAIuM,EAASvM,IAGc,EAAG,CAGpD,IAAIwH,GAASvI,KAAK0U,MAAMH,EAAcxT,EAAIuM,EAASvM,EAAGwT,EAAczT,EAAIwM,EAASxM,GAG7E6T,EAAK,EACLC,EAAK,EAGPD,GADmB,IAAlBrH,EAASlE,KACW,EAAhBkE,EAASnE,KAGTmE,EAASnE,KAGdyL,GADwB,IAAvBL,EAAcnL,KACW,EAArBmL,EAAcpL,KAGdoL,EAAcpL,KAIrB,IAAI0L,EAAK3Q,KAAK4E,OAAOwE,EAAS/F,SAAUgB,GACpCuM,EAAK5Q,KAAK4E,OAAOyL,EAAchN,SAAUgB,GAGzCwM,EAAK,CAAEjU,GAAI+T,EAAG/T,GAAK6T,EAAKC,GAAM,EAAIA,EAAKE,EAAGhU,IAAM6T,EAAKC,GAAK7T,EAAG8T,EAAG9T,GAChEiU,EAAK,CAAElU,GAAIgU,EAAGhU,GAAK8T,EAAKD,GAAM,EAAIA,EAAKE,EAAG/T,IAAK6T,EAAKC,GAAK7T,EAAG+T,EAAG/T,GAG/DkU,EAAU/Q,KAAK4E,OAAOiM,GAAKxM,GAC3B2M,EAAUhR,KAAK4E,OAAOkM,GAAKzM,GAG/B+E,EAAS/F,SAASzG,EAAImU,EAAQnU,EAC9BwM,EAAS/F,SAASxG,EAAIkU,EAAQlU,EAC9BwT,EAAchN,SAASzG,EAAIoU,EAAQpU,EACnCyT,EAAchN,SAASxG,EAAImU,EAAQnU,4CAIxBiT,EAAKmB,GACpB,IAAI3I,EAAWxM,KAAKyB,YAAYuS,EAAIlT,EAAGkT,EAAIjT,EAAGoU,EAAWrU,EAAGqU,EAAWpU,GACvE,GAAGyL,EAA+B,EAAnBwH,EAAIxG,aAAmB2H,EAAW3N,OAAS,CACxD,IAAIlG,EAAYtB,KAAKwB,OAAOgL,EAAU2I,EAAWrU,EAAGqU,EAAWpU,EAAGiT,EAAIlT,EAAGkT,EAAIjT,GAC7EiT,EAAIoB,UAAU9T,GACd0S,EAAInG,WACJmG,EAAItG,QAEN,OAAGlB,EAAYwH,EAAIxM,OAAS2N,EAAW3N,2CAM7BoB,GACV1E,KAAKoN,OAAS1I,EACd1E,KAAKyN,WAAWL,MAAMvB,KAAO7L,KAAKoN,sDAOZ+D,GAEtB,IAAI/H,EAAWpJ,KAAKyK,UAAU0G,GAC1BlM,EAAOmE,EAASnE,KAChBrI,EAAIwM,EAASxM,EACbC,EAAIuM,EAASvM,EAEjBuM,EAASjE,WAAY,EACrBiE,EAASlE,MAAO,EAEhBlF,KAAKyK,UAAU9B,OAAOwI,EAAK,GAC3BnR,KAAKmM,gBAAgB0D,QAAQ,aAE7B,IAAIuB,EAAStV,KAAKS,MAAM,IAAM0I,GAI9B,GAHAjF,KAAKwN,OAAO/H,KAAK,IAAI+F,EAAM5O,EAAGC,EAAGuU,EAAQ,SACzCpR,KAAKqR,YAAYD,GAEdnM,GAAQ,GAAI,CAEb,IAAI7I,EAASN,KAAKO,UAAU,EAAG,GAE/B2D,KAAK0M,cAAgBtQ,EAAS,EAC9B6I,GAAQ7I,EAKR,IAHA,IAAIgB,EAAYtB,KAAKG,cAAc,EAAGH,KAAKC,KAEvCuV,EAAcxV,KAAKC,IAAMK,EACrB2C,EAAI,EAAGA,EAAI3C,EAAQ2C,IAAK,CAE9B,IAAIwS,EAAO3U,EAAId,KAAK4E,IAAItD,GAAa6H,EACjCuM,EAAO3U,EAAIf,KAAK0E,IAAIpD,GAAa6H,EAErCjF,KAAKyK,UAAUhF,KAAK,IAAIT,EAASuM,EAAMC,EAAMvM,EAAM7H,IACnDA,GAAakU,QAIftR,KAAK0M,uDASOC,EAAMvD,GACpB,IAAIpM,EAAK2P,EAAK/P,EAAIwM,EAASxM,EACvBK,EAAK0P,EAAK9P,EAAIuM,EAASvM,EACvByL,EAAWtL,EAAKA,EAAKC,EAAKA,EAC9B,GAAGqL,EAAWxM,KAAKyC,IAAI6K,EAAS9F,OAASqJ,EAAKrJ,OAAQ,GACpD,OAAO,EAET,GAAGqJ,EAAKvD,WAAaA,EAArB,CAGA,GAAGd,EAAWxM,KAAKyC,IAAIoO,EAAKrD,aAAeF,EAAS9F,OAAQ,GAAI,CAC9D,IAAIlG,EAAYtB,KAAKwB,OAAOgL,EAAUc,EAASxM,EAAGwM,EAASvM,EAAG8P,EAAK/P,EAAG+P,EAAK9P,GAC3E8P,EAAKuE,UAAU9T,IACG,WAAduP,EAAKpK,MAAmC,UAAdoK,EAAKpK,OAAqB6G,EAAS9F,OAASqJ,EAAKpD,UAA8B,KAAlBoD,EAAKvD,SAC9FuD,EAAK8E,cAAcrI,GAGZd,EAAWxM,KAAKyC,IAAIoO,EAAKpD,SAAWH,EAAS9F,OAAQ,KAExDqJ,EAAK3J,WACPhD,KAAK0R,cAAc/E,EAAMvD,EAASxM,EAAGwM,EAASvM,IAIpD,OAAO,mCAQDD,EAAGC,EAAGiD,GAIZ,IAHA,IAAI+B,EAAe/F,KAAKO,UAAU,GAAI,IAClC+G,EAAMtH,KAAKG,cAAc,EAAGH,KAAKC,KACjC4V,EAAQ,EACJjH,EAAI,EAAGA,EAAI1K,KAAK2B,UAAU3C,OAAQ0L,IACxC,GAAG1K,KAAK2B,UAAU+I,GAAG5K,QAAUA,EAAO,CACpC6R,EAAQjH,EACR,MAGJ,IAAI,IAAI3L,EAAI,EAAGA,EAAI8C,EAAc9C,IAC5BjD,KAAKM,SAAW,KACjBgH,EAAMtH,KAAKG,cAAc,EAAGH,KAAKC,MAEnCiE,KAAK2B,UAAUgQ,GAAO7P,IAAIlF,EAAGC,EAAGf,KAAKE,GAAKoH,GAAM,IAAM,wCAUxD,IAAIxG,EAAId,KAAKG,cAAc,IAAK,KAC5BY,EAAIf,KAAKG,cAAc,IAAK,KAG5BkU,GAAY,EACZyB,EAAM,EAEV,EAAG,CACEzB,IACDvT,EAAId,KAAKG,cAAc,IAAK,KAC5BY,EAAIf,KAAKG,cAAc,IAAK,KAC5BkU,GAAY,GAGdyB,EAAM5R,KAAK4M,KAAK5N,OAChB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAI+Q,EAAM9P,KAAK4M,KAAK7N,GACjBjD,KAAK0B,yBAAyBZ,EAAGC,EAAGmD,KAAK2M,KAAKrJ,OAAQwM,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIxM,OAAS,OAClF6M,GAAY,GAGhByB,EAAM5R,KAAKyK,UAAUzL,OACrB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAIqK,EAAWpJ,KAAKyK,UAAU1L,GAE3BjD,KAAK0B,yBAAyBZ,EAAGC,EAAGmD,KAAK2M,KAAKrJ,OAAQ8F,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,OAtBjF,MAuBP6M,GAAY,GAGhByB,EAAM5R,KAAKiN,YAAYjO,OACvB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAIkS,EAAajR,KAAKiN,YAAYlO,GAE/BjD,KAAK0B,yBAAyByT,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAW3N,OAAQ1G,EAAGC,EAAGmD,KAAK2M,KAAKrJ,OA9BvF,MA+BP6M,GAAY,UAGVA,GAERnQ,KAAK6R,QAAQ7R,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAK7M,OACjDE,KAAK6R,QAAQjV,EAAGC,EAAGmD,KAAK2M,KAAK7M,OAC7BE,KAAKmM,gBAAgB0D,QAAQ,YAC7B7P,KAAK2M,KAAK/P,EAAIA,EACdoD,KAAK2M,KAAK9P,EAAIA,EAEdmD,KAAK2M,KAAK5M,MAAMnD,EAAI,EACpBoD,KAAK2M,KAAK5M,MAAMlD,EAAI,oCAOpBmD,KAAK+M,YAAa,EAClB/M,KAAKwN,OAAO/H,KAAK,IAAI+F,EAAM,IAAK,IAAK,YAAa,gBAClDxL,KAAKsN,QACLtN,KAAKyN,WAAWH,MAAMzB,KAAO7L,KAAKsN,MAC/BtN,KAAKsN,OAAS,EACftN,KAAK2M,KAAO,IAAI7J,GAGhB9C,KAAK+N,UAAW,EAChB/N,KAAKmM,gBAAgB0D,QAAQ,iDAOtBiC,GACT,IAAIhC,EAAM9P,KAAK4M,KAAKkF,GACpB9R,KAAKqR,YAAYvB,EAAIrG,QACrBzJ,KAAKwN,OAAO/H,KAAK,IAAI+F,EAAMsE,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIrG,OAAQ,SACnC,MAAfqG,EAAIrG,SACLzJ,KAAKsN,QACLtN,KAAKyN,WAAWH,MAAMzB,KAAO7L,KAAKsN,MAClCtN,KAAK+R,WAAW,WAElB/R,KAAK6M,QACL7M,KAAK4M,KAAKjE,OAAOmJ,EAAO,GACxB9R,KAAKmM,gBAAgB0D,QAAQ,2DAI1B7P,KAAKoN,MAAQpN,KAAKqN,YACnBrN,KAAKqN,UAAYrN,KAAKoN,iDAIR7K,GAChB,IAAIG,EAAS,GACb,OAAQH,GACN,KAAK,EACHG,EAAS,gBACT,MACF,KAAK,EACHA,EAAS,aACT,MACF,KAAK,EACHA,EAAS,cAKb1C,KAAK+R,WAAWrP,sCAGPA,GACT,IAAItG,EAASN,KAAKO,UAAU,GAAI,IAC7B2D,KAAK2M,KAAK9P,EAAI,IACfmD,KAAKwN,OAAO/H,KAAK,IAAI+F,EAAMxL,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAIT,EAAQsG,EAAQ,SAGtE1C,KAAKwN,OAAO/H,KAAK,IAAI+F,EAAMxL,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAIT,EAAQsG,EAAQ,2CAQxE1C,KAAKgS,WAAW/Q,UAAY,QAC5BjB,KAAKgS,WAAW/P,YAAc,OAC9BjC,KAAKgS,WAAW5P,SAAS,EAAG,EAAGpC,KAAKqM,WAAY,KAChDrM,KAAKgS,WAAWrP,KAAO,uBACvB3C,KAAKgS,WAAWC,WAAW,UAAYjS,KAAKsN,MAAO,GAAI,IACvDtN,KAAKgS,WAAWC,WAAW,UAAYjS,KAAKuN,MAAO,IAAK,IACxDvN,KAAKgS,WAAWC,WAAW,UAAYjS,KAAKoN,MAAO,IAAK,IACxDpN,KAAKgS,WAAWC,WAAW,cAAgBjS,KAAK4N,UAAW,IAAK,IAChE5N,KAAKgS,WAAWC,WAAW,cAAgBjS,KAAKqN,UAAY,IAAK,IACjErN,KAAKgS,WAAWrP,KAAO,uBACvB3C,KAAKgS,WAAWC,WAAW,aAAc,GAAI,IAC7CjS,KAAKgS,WAAWC,WAAW,8FAA+F,IAAK,qCAQ/H,IAAI,IAAIlT,EAAI,EAAGA,EAAIiB,KAAKwN,OAAOxO,OAAQD,IAClCiB,KAAKwN,OAAOzO,GAAGiD,UAEhBhC,KAAKwN,OAAO7E,OAAO5J,EAAG,GAI1BiB,KAAK2M,KAAK3K,SAEV,IADA,IAAI4P,EAAM5R,KAAK4M,KAAK5N,OACZD,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAI+Q,EAAM9P,KAAK4M,KAAK7N,GACpB,IAAiB,UAAb+Q,EAAIvN,MAAiC,UAAbuN,EAAIvN,OAAkC,KAAbuN,EAAI/F,MACpD/J,KAAK4D,SAAS5E,OAAS,EAAG,CAC3B,IAAI5C,EAASN,KAAKO,UAAU,EAAG2D,KAAK4D,SAAS5E,OAAS,GACtD8Q,EAAI/F,KAAO,CAACnN,EAAGoD,KAAK4D,SAASxH,GAAQgP,IAAIxO,EAAGC,EAAGmD,KAAK4D,SAASxH,GAAQgP,IAAIvO,GAG7EiT,EAAI9N,SACgB,KAAjB8N,EAAI1G,UAAoBpJ,KAAK+M,YAC9B+C,EAAIoC,uBAAuBlS,KAAK2M,MAIjC3M,KAAKyK,UAAUzL,OAASgB,KAAK2N,iBAC9B3N,KAAKiQ,aAAa,GAClBjQ,KAAK0M,gBAIPkF,EAAM5R,KAAKyK,UAAUzL,OACrB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAKyK,UAAU1L,GAAGiD,SAIpB,GAAkB,IAAfhC,KAAK6M,OAAe7M,KAAK6M,OAAS/Q,KAAKW,KAAKuD,KAAKuN,MAAQvN,KAAKuN,MAAQ,GAAK,KAAO,EAAG,CACtFvN,KAAKuN,QACLvN,KAAKyN,WAAWF,MAAM1B,KAAO7L,KAAKuN,MAClCvN,KAAKwN,OAAO/H,KAAK,IAAI+F,EAAM,IAAK,IAAK,SAAWxL,KAAKuN,MAAO,gBAE5DvN,KAAKsN,QACLtN,KAAKyN,WAAWH,MAAMzB,KAAO7L,KAAKsN,MAClCtN,KAAK+R,WAAW,UAChB/R,KAAK4N,WAAa5N,KAAKuN,MACvB,IAAI4E,EAAgB,EAAInS,KAAKuN,MAC1B4E,EAAgBnS,KAAKuM,eACtB4F,EAAgBnS,KAAKuM,cAEvB,IAAI6F,EAAaD,EAAgBnS,KAAKyK,UAAUzL,OAChD,GAAGgB,KAAKyK,UAAUzL,OAASmT,EACzB,IAAI,IAAIpT,EAAI,EAAGA,EAAIqT,EAAYrT,IAC7BiB,KAAKiQ,aAAa,GAClBjQ,KAAK0M,eAGT1M,KAAK2N,eAAiB,EAAI3N,KAAKuN,MAC5BvN,KAAK2N,eAAiB3N,KAAKuM,eAC5BvM,KAAK2N,eAAiB3N,KAAKuM,cAK/B,GAAGvM,KAAK8M,SAAW,GAAK9M,KAAK4M,KAAK5N,OAASgB,KAAKsM,SAC9CtM,KAAK8M,WACF9M,KAAK8M,UAAY,GAAG,CACrB9M,KAAKqS,SACL,IAAIC,EAAWtS,KAAK4M,KAAK5N,OAASgB,KAAKuN,MACvCvN,KAAK8M,SAAWhR,KAAKO,UAAU2D,KAAKwM,QAAU8F,EAAwB,EAAftS,KAAKwM,QAAc8F,GAK9E,GADAtS,KAAK8N,eACF9N,KAAK8N,cAAgB,EAAG,CACzB9N,KAAKuS,gBACL,IAAIC,EAAgC,EAAvBxS,KAAK4D,SAAS5E,OAAagB,KAAKuN,MAC7CvN,KAAK8N,aAAehS,KAAKO,UAAU2D,KAAKyM,UAAY+F,EAAwB,EAAjBxS,KAAKyM,UAAgB+F,GAI/ExS,KAAK+M,aACN/M,KAAKgN,eACFhN,KAAKgN,cAAgB,IAEtBhN,KAAKgN,aAAe,IACpBhN,KAAK+M,YAAa,IAKtB6E,EAAM5R,KAAKyK,UAAUzL,OACrB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtB,IAAI,IAAI2L,EAAI3L,EAAI,EAAG2L,EAAIkH,EAAKlH,IAAK,CAC/B,IAAItB,EAAWpJ,KAAKyK,UAAU1L,GAC1BsR,EAAgBrQ,KAAKyK,UAAUC,GAChC5O,KAAK0B,yBAAyB4L,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,OAAQ+M,EAAczT,EAAGyT,EAAcxT,EAAGwT,EAAc/M,UACxHtD,KAAKyS,kBAAkBrJ,EAAUiH,GACjCrQ,KAAKmM,gBAAgB0D,QAAQ,cAMnC,IAAI,IAAI9Q,EAAI,EAAGA,EAAIiB,KAAKiN,YAAYjO,OAAQD,IAC1C,IAAI,IAAI2L,EAAI,EAAGA,EAAI1K,KAAKyK,UAAUzL,OAAQ0L,IAAK,CAC7C,IAAIuG,EAAajR,KAAKiN,YAAYlO,GAC9BqK,EAAWpJ,KAAKyK,UAAUC,GAC9B,GAAG5O,KAAK0B,yBAAyByT,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAW3N,OAAQ8F,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,QAAS,CACxHtD,KAAK6R,QAAQZ,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAWnR,OACpDE,KAAKiN,YAAYtE,OAAO5J,EAAG,GAC3BiB,KAAK6R,QAAQzI,EAASxM,EAAGwM,EAASvM,EAAG,SACrCmD,KAAK0S,wBAAwBhI,GAC7B,OAKN,IAAI1K,KAAK+M,WAAY,CAEnB6E,EAAM5R,KAAKyK,UAAUzL,OACrB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAIqK,EAAWpJ,KAAKyK,UAAU1L,GAC9B,GAAGjD,KAAK0B,yBAAyBwC,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAKrJ,OAAQ8F,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,QAAS,CACrH,GAAGtD,KAAK2M,KAAK/I,SAAS,IAAMwF,EAASnE,KAAO,GAAI,CAC9CjF,KAAK6R,QAAQzI,EAASxM,EAAGwM,EAASvM,EAAG,SACrCmD,KAAK0S,wBAAwB3T,GAC7B,MAGAiB,KAAK6R,QAAQ7R,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAK7M,OACjDE,KAAKmM,gBAAgB0D,QAAQ,kBAC7B7P,KAAK2S,YAObf,EAAM5R,KAAK4M,KAAK5N,OAChB,IAAI,IAAID,EAAI,EAAGA,EAAIiB,KAAK4D,SAAS5E,OAAQD,IAAK,CAC5C,IAAI6T,EAAU5S,KAAK4D,SAAS7E,GAC5B,GAAGjD,KAAK0B,yBAAyBwC,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAKrJ,OAAQsP,EAAQxH,IAAIxO,EAAGgW,EAAQxH,IAAIvO,EAAG+V,EAAQtP,QAAS,CAC1HtD,KAAK6R,QAAQ7R,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAK7M,OACjDE,KAAK2M,KAAK/I,SAASgP,EAAQrQ,OAAQ,EAChCvC,KAAK2M,KAAK3I,cAAc4O,EAAQrQ,MAAQ,EACzCvC,KAAK2M,KAAKkG,qBAAqBD,EAAQrQ,KAAMqQ,EAAQpQ,OAGrDxC,KAAK2M,KAAKmG,qBAAqBF,EAAQrQ,KAAMqQ,EAAQpQ,OAEvDxC,KAAK2M,KAAK3I,cAAc4O,EAAQrQ,OAASqQ,EAAQpQ,MACjDxC,KAAK+S,kBAAkBH,EAAQrQ,MACX,IAAjBqQ,EAAQrQ,OACTvC,KAAK2M,KAAK3J,WAAY,EACtBhD,KAAK2M,KAAK1J,WAAajD,KAAK2M,KAAK5J,KAAO,GAE1C/C,KAAKmM,gBAAgB0D,QAAQ,iBAC7B7P,KAAK4D,SAAS+E,OAAO5J,EAAG,GACxB,MAEF,IAAI,IAAI2L,EAAI,EAAGA,EAAIkH,EAAKlH,IAAK,CAC3B,IAAIoF,EAAM9P,KAAK4M,KAAKlC,GACpB,GAAG5O,KAAK0B,yBAAyBsS,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIxM,OAAQsP,EAAQxH,IAAIxO,EAAGgW,EAAQxH,IAAIvO,EAAG+V,EAAQtP,QAAS,CACxGtD,KAAK6R,QAAQ/B,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIhQ,OAC/BgQ,EAAIlM,SAASgP,EAAQrQ,OAAQ,EAC7BuN,EAAI9L,cAAc4O,EAAQrQ,OAASqQ,EAAQpQ,MACvB,IAAjBoQ,EAAQrQ,OACTuN,EAAI9M,WAAY,EAChB8M,EAAIlG,iBAEN5J,KAAKmM,gBAAgB0D,QAAQ,iBAC7B7P,KAAK4D,SAAS+E,OAAO5J,EAAG,GACxB,QAKN6S,EAAM5R,KAAKyK,UAAUzL,OACrB,IAAI,IAAID,EAAI,EAAGA,EAAIiB,KAAK4D,SAAS5E,OAAQD,IACvC,IAAI,IAAIiU,EAAI,EAAGA,EAAIpB,EAAKoB,IAAK,CAC3B,IAAIJ,EAAU5S,KAAK4D,SAAS7E,GACxBqK,EAAWpJ,KAAKyK,UAAUuI,GAC9B,GAAGlX,KAAK0B,yBAAyB4L,EAASxM,EAAGwM,EAASvM,EAAGuM,EAAS9F,OAAQsP,EAAQxH,IAAIxO,EAAGgW,EAAQxH,IAAIvO,EAAG+V,EAAQtP,QAAS,CACvHtD,KAAK6R,QAAQe,EAAQxH,IAAIxO,EAAGgW,EAAQxH,IAAIvO,EAAG+V,EAAQ9S,OACnDE,KAAK4D,SAAS+E,OAAO5J,EAAG,GACxB,OAKN,IAAI,IAAIA,EAAI,EAAGA,EAAIiB,KAAK4M,KAAK5N,OAAQD,IACnC,IAAI,IAAI2L,EAAI,EAAGA,EAAI1K,KAAKyK,UAAUzL,OAAQ0L,IAAK,CAC7C,IAAIoF,EAAM9P,KAAK4M,KAAK7N,GAChBqK,EAAWpJ,KAAKyK,UAAUC,GAC9B,GAAG1K,KAAKiT,gBAAgBnD,EAAK1G,GAAW,CACnC0G,EAAIlM,SAAS,IAAMwF,EAASnE,KAAO,IACpCjF,KAAK6R,QAAQzI,EAASxM,EAAGwM,EAASvM,EAAG,SACrCmD,KAAK0S,wBAAwBhI,KAG7B1K,KAAK6R,QAAQ/B,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIhQ,OAC/BE,KAAKkT,WAAWnU,IAElB,OAMN,IADA6S,EAAM5R,KAAK4M,KAAK5N,QACP,EACP,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAIoU,EAAOnT,KAAK4M,KAAK7N,GACrB,GAAG6S,EAAM,EACP,IAAI,IAAIlH,EAAI3L,EAAI,EAAG2L,EAAIkH,EAAKlH,IAAK,CAC/B,IAAI0I,EAAOpT,KAAK4M,KAAKlC,GACrB,GAAG5O,KAAK0B,yBAAyB2V,EAAKvW,EAAGuW,EAAKtW,EAAGsW,EAAK5J,SAAU6J,EAAKxW,EAAGwW,EAAKvW,EAAGuW,EAAK7J,UAAW,CAC5E,WAAd4J,EAAK5Q,MAAmC,UAAd4Q,EAAK5Q,MAAsB4Q,EAAKnQ,WAC5DhD,KAAK0R,cAAcyB,EAAMC,EAAKxW,EAAGwW,EAAKvW,GAEtB,WAAduW,EAAK7Q,MAAmC,UAAd6Q,EAAK7Q,MAAsB6Q,EAAKpQ,WAC5DhD,KAAK0R,cAAc0B,EAAMD,EAAKvW,EAAGuW,EAAKtW,GAGxC,IAAIuG,EAAMtH,KAAKa,aAAawW,EAAKvW,EAAGuW,EAAKtW,EAAGuW,EAAKxW,EAAGwW,EAAKvW,GAEzDsW,EAAKjC,UAAU9N,EAAMtH,KAAKE,IAE1BoX,EAAKlC,UAAU9N,IAIjBpD,KAAK+M,YACJjR,KAAK0B,yBAAyBwC,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAKrJ,OAAQ6P,EAAKvW,EAAGuW,EAAKtW,EAAGsW,EAAK7P,UAChGtD,KAAK6R,QAAQ7R,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAK7M,OACjDE,KAAKmM,gBAAgB0D,QAAQ,kBAC7B7P,KAAK2S,WAOb,IAAI,IAAI5T,EAAI,EAAGA,EAAIiB,KAAKiN,YAAYjO,OAAQD,IAAK,CAC/C,IAAIkS,EAAajR,KAAKiN,YAAYlO,GAClC,IAAIiB,KAAK+M,YAAcjR,KAAK0B,yBAAyByT,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAW3N,OAC1FtD,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAKrJ,QAAS,CAC1CtD,KAAK2M,KAAK/I,SAAS,IACpB5D,KAAK6R,QAAQ7R,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAG,WACvCmD,KAAKmM,gBAAgB0D,QAAQ,iBAC7B7P,KAAK2M,KAAK3I,cAAc,GAAK,IAG7BhE,KAAK6R,QAAQ7R,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,EAAGmD,KAAK2M,KAAK7M,OACjDE,KAAKmM,gBAAgB0D,QAAQ,kBAC7B7P,KAAK2S,WAEP3S,KAAK6R,QAAQZ,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAWnR,OACpDE,KAAKiN,YAAYtE,OAAO5J,EAAG,GAC3B,MAEF,IAAI,IAAI2L,EAAI,EAAGA,EAAI1K,KAAK4M,KAAK5N,OAAQ0L,IAAM,CACzC,IAAIoF,EAAM9P,KAAK4M,KAAKlC,GACpB,GAAiB,WAAboF,EAAIvN,MAAkC,UAAbuN,EAAIvN,MAAqBuN,EAAItG,QAAUsG,EAAI9F,OAkBnE,GAAIlO,KAAK0B,yBAAyByT,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAW3N,OAC5EwM,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIxM,QAAS,CACtBwM,EAAIlM,SAAS,IACd5D,KAAK6R,QAAQ/B,EAAIlT,EAAGkT,EAAIjT,EAAG,WAC3BmD,KAAKmM,gBAAgB0D,QAAQ,iBAC7BC,EAAIlM,SAAS,IAAK,EAClBkM,EAAI9L,cAAc,GAAK,IAGvBhE,KAAK6R,QAAQ/B,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIhQ,OAC/BE,KAAKkT,WAAWxI,GAChB1K,KAAKmM,gBAAgB0D,QAAQ,mBAE/B7P,KAAK6R,QAAQZ,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAWnR,OACpDE,KAAKiN,YAAYtE,OAAO5J,EAAG,GAC3B,YAhCF,GAAGiB,KAAKqT,iBAAiBvD,EAAKmB,GAAa,CACtCnB,EAAIlM,SAAS,IACd5D,KAAK6R,QAAQ/B,EAAIlT,EAAGkT,EAAIjT,EAAG,WAC3BmD,KAAKmM,gBAAgB0D,QAAQ,iBAC7BC,EAAIlM,SAAS,IAAK,EAClBkM,EAAI9L,cAAc,GAAK,IAGvBhE,KAAK6R,QAAQ/B,EAAIlT,EAAGkT,EAAIjT,EAAGiT,EAAIhQ,OAC/BE,KAAKkT,WAAWxI,GAChB1K,KAAKmM,gBAAgB0D,QAAQ,mBAE/B7P,KAAK6R,QAAQZ,EAAWrU,EAAGqU,EAAWpU,EAAGoU,EAAWnR,OACpDE,KAAKiN,YAAYtE,OAAO5J,EAAG,GAC3B,QAsCR,IAbGiB,KAAKiO,OAAO,KAAOjO,KAAKiO,OAAO,OAChCjO,KAAK2M,KAAKzJ,MAAME,KAAO,IACpBpD,KAAK2M,KAAKzJ,MAAME,MAAQtH,KAAKC,MAC9BiE,KAAK2M,KAAKzJ,MAAME,KAAOtH,KAAKC,OAI7BiE,KAAKiO,OAAO,KAAOjO,KAAKiO,OAAO,OAChCjO,KAAK2M,KAAKzJ,MAAME,KAAO,IACpBpD,KAAK2M,KAAKzJ,MAAME,KAAOtH,KAAKC,MAC7BiE,KAAK2M,KAAKzJ,MAAME,KAAOtH,KAAKC,MAG5BiE,KAAKgN,cAAgB,MAAQhN,KAAK+M,WAGpC,GAFA/M,KAAK2M,KAAKlJ,UAAW,EAElBzD,KAAKiO,OAAO,KAAOjO,KAAK2M,KAAKpL,OAAS,EAAG,CAC1CvB,KAAK2M,KAAKlJ,UAAW,EACrBzD,KAAK2M,KAAKpL,QACVvB,KAAK2M,KAAKzI,WAAW3C,MAAQvB,KAAK2M,KAAKpL,MACvCvB,KAAK2M,KAAK7B,YAAkC,EAAtB9K,KAAK2M,KAAKzJ,MAAMC,KACtC,IAAItB,EAAe/F,KAAKS,MAAMT,KAAKG,cAAc,EAAG,IACpD+D,KAAK2M,KAAK5K,gBAAgBF,QAGvB,GAAK7B,KAAKiO,OAAO,KAAOjO,KAAKiO,OAAO,IAAM,CAC7CjO,KAAK2M,KAAK7B,YAAY9K,KAAK2M,KAAKzJ,MAAMC,KACtC,IAAItB,EAAe/F,KAAKS,MAAMT,KAAKG,cAAc,EAAG,IACpD+D,KAAK2M,KAAK5K,gBAAgBF,GAc9B,IAVG7B,KAAKiO,OAAO,KAAQjO,KAAK2M,KAAK3J,WAAchD,KAAK+M,YAClD/M,KAAKsT,mBAGJtT,KAAKiO,OAAO,KAAOjO,KAAK4N,UAAY,IAAM5N,KAAK+M,YAAmC,KAArB/M,KAAK6N,cACnE7N,KAAKuT,WACLvT,KAAK4N,YACL5N,KAAK6N,gBAGH7N,KAAK+M,WAAY,CACnB6E,EAAM5R,KAAK4M,KAAK5N,OAChB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IAAK,CAC3B,IAAI+Q,EAAM9P,KAAK4M,KAAK7N,GACpB+Q,EAAI7M,aACD6M,EAAI7M,YAAc,IACnBjD,KAAK0R,cAAc5B,EAAK9P,KAAK2M,KAAK/P,EAAGoD,KAAK2M,KAAK9P,GAC/CiT,EAAIlG,kBAMP5J,KAAK6N,YAAc,KACpB7N,KAAK6N,cACF7N,KAAK6N,aAAe,IACrB7N,KAAK6N,YAAc,KAKvB,IAAI,IAAI9O,EAAI,EAAGA,EAAIiB,KAAKiN,YAAYjO,OAAQD,IAAK,CAC/C,IAAIkS,EAAajR,KAAKiN,YAAYlO,GACV,UAArBkS,EAAWnR,MACZmR,EAAWjP,OAAOhC,KAAK4M,MAGvBqE,EAAWjP,OAAOhC,KAAK2M,MAEtBsE,EAAW3M,iBACZtE,KAAKiN,YAAYtE,OAAO5J,EAAG,GAK/B,IAAI,IAAI2L,EAAI,EAAGA,EAAI1K,KAAK2B,UAAU3C,OAAQ0L,IACxC1K,KAAK2B,UAAU+I,GAAG1I,SAIpBhC,KAAKwT,kDAQLxT,KAAK4O,kBAAkB3N,UAAY,QACnCjB,KAAK4O,kBAAkB3M,YAAc,OACrCjC,KAAK4O,kBAAkBjM,KAAO,uBAE9B3C,KAAK4O,kBAAkBxM,SAAS,EAAE,EAAGpC,KAAKqM,WAAYrM,KAAKqM,YAI3D,IAFA,IAAIuF,EAAM5R,KAAK4M,KAAK5N,OAEZD,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAK4M,KAAK7N,GAAGsD,OAAOrC,KAAK4O,qBAGvB5O,KAAK+M,YAAc/M,KAAKgN,cAAgB,MAC1ChN,KAAK2M,KAAKtK,OAAOrC,KAAK4O,mBAExBgD,EAAM5R,KAAKyK,UAAUzL,OAErB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAKyK,UAAU1L,GAAGsD,OAAOrC,KAAK4O,mBAEhCgD,EAAM5R,KAAKiN,YAAYjO,OAEvB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAKiN,YAAYlO,GAAGsD,OAAOrC,KAAK4O,mBAGlCgD,EAAM5R,KAAK4D,SAAS5E,OACpB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAK4D,SAAS7E,GAAGsD,OAAOrC,KAAK4O,mBAG/BgD,EAAM5R,KAAK2B,UAAU3C,OACrB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAK2B,UAAU5C,GAAGsD,OAAOrC,KAAK4O,mBAGhCgD,EAAM5R,KAAKwN,OAAOxO,OAClB,IAAI,IAAID,EAAI,EAAGA,EAAI6S,EAAK7S,IACtBiB,KAAKwN,OAAOzO,GAAGsD,OAAOrC,KAAK4O,mBAG7B5O,KAAKyN,WAAWL,MAAM/K,OAAOrC,KAAK4O,mBAClC5O,KAAKyN,WAAWH,MAAMjL,OAAOrC,KAAK4O,mBAClC5O,KAAKyN,WAAWF,MAAMlL,OAAOrC,KAAK4O,mBAGlC5O,KAAK6O,oBAAoB4E,UAAUzT,KAAKgM,iBAAkB,EAAG,kCAOzDhM,KAAKgO,QAAWhO,KAAK+N,WACvB/N,KAAKgC,SACLhC,KAAKqC,oBCrlCUqR,mBACnB,SAAAA,IAAelV,EAAAwB,KAAA0T,GAEV5X,KAAKM,SAAW,GACjB4D,KAAK2T,MAAQ,IAAIC,MAAM,eAGvB5T,KAAK2T,MAAQ,IAAIC,MAAM,gBAEzB5T,KAAKoM,KAAO,IAAIwH,MAAM,eACtB5T,KAAKoM,KAAKyH,OAAQ,EAIlB7T,KAAK8T,OAAS,GACd9T,KAAK8T,OAAOrO,KAAKzF,KAAK2T,OACtB3T,KAAK8T,OAAOrO,KAAKzF,KAAKoM,MACtBpM,KAAK+T,KAAO,IAAIH,MAAM,kBACtB5T,KAAK8T,OAAOrO,KAAKzF,KAAK+T,MACtB/T,KAAKgU,eAAiB,IAAIJ,MAAM,iBAChC5T,KAAKgU,eAAeC,OAAS,GAC7BjU,KAAK8T,OAAOrO,KAAKzF,KAAKgU,gBACtBhU,KAAKkU,UAAY,IAAIN,MAAM,mBAC3B5T,KAAKkU,UAAUD,OAAS,GACxBjU,KAAK8T,OAAOrO,KAAKzF,KAAKkU,WACtBlU,KAAKmU,cAAgB,IAAIP,MAAM,uBAC/B5T,KAAK8T,OAAOrO,KAAKzF,KAAKmU,eAEtBnU,KAAKoU,SAAW,IAAIR,MAAM,iBAC1B5T,KAAK8T,OAAOrO,KAAKzF,KAAKoU,UACtBpU,KAAKqU,OAAS,IAAIT,MAAM,gBACxB5T,KAAK8T,OAAOrO,KAAKzF,KAAKqU,QACtBrU,KAAKsU,cAAgB,IAAIV,MAAM,kBAC/B5T,KAAK8T,OAAOrO,KAAKzF,KAAKsU,eACtBtU,KAAKuU,YAAc,IAAIX,MAAM,qBAC7B5T,KAAK8T,OAAOrO,KAAKzF,KAAKuU,aACtBvU,KAAKwU,aAAe,IAAIZ,MAAM,uBAC9B5T,KAAK8T,OAAOrO,KAAKzF,KAAKwU,4DAItBxU,KAAK2T,MAAMM,OAAS,GACpBjU,KAAK2T,MAAM7E,MAAO,EAClB9O,KAAK2T,MAAMc,2CAIXzU,KAAK2T,MAAMe,2CAIX1U,KAAKoM,KAAK6H,OAAS,GACnBjU,KAAKoM,KAAK0C,MAAO,EACjB9O,KAAKoM,KAAKqI,0CAIVzU,KAAKoM,KAAKsI,mDAGOC,GACjB3U,KAAK8T,OAAOlL,QAAQ,SAAAgM,GAClBA,EAAMX,QAAUU,EACbC,EAAMX,OAAS,IAChBW,EAAMX,OAAS,GAEdW,EAAMX,OAAS,IAChBW,EAAMX,OAAS,oCAMnBjU,KAAK8T,OAAOlL,QAAQ,SAAAgM,GAClBA,EAAMf,OAAQ,qCAKhB7T,KAAK8T,OAAOlL,QAAQ,SAAAgM,GAClBA,EAAMf,OAAQ,oCAIVe,GACN,OAAQA,GACN,IAAK,QACH5U,KAAKoU,SAASK,OACd,MACF,IAAK,SACHzU,KAAKqU,OAAOI,OACZ,MACF,IAAK,gBACHzU,KAAKwU,aAAaC,OAClB,MACF,IAAK,YACHzU,KAAKgU,eAAeS,OACpB,MACF,IAAK,YACHzU,KAAKkU,UAAUO,OACf,MACF,IAAK,gBACHzU,KAAKuU,YAAYE,OACjB,MACF,IAAK,iBACHzU,KAAKmU,cAAcM,OACnB,MACF,IAAK,WACHzU,KAAKsU,cAAcG,OACnB,MACF,IAAK,YACHzU,KAAK+T,KAAKU,4DC7GGI,aACpB,SAAAA,IAAerW,EAAAwB,KAAA6U,GACd7U,KAAKkM,YAAc,IACnBlM,KAAK0P,UAAY,YACjB1P,KAAK8U,KAAO,KACZ9U,KAAK+U,YAAc,EACnB/U,KAAKgV,QAAU,GACfhV,KAAK2P,YAAc,CAAC,QAAS,OAAQ,YACrC3P,KAAK6T,OAAQ,EACb7T,KAAKiV,cACLjV,KAAKmM,gBAAkB,IAAIuH,EAG3B1T,KAAKgM,iBAAmBkJ,SAASC,eAAe,UAChDnV,KAAKgM,iBAAiBxK,MAAQxB,KAAKkM,YACnClM,KAAKgM,iBAAiBvK,OAASzB,KAAKkM,YACpClM,KAAK4O,kBAAoB5O,KAAKgM,iBAAiBoJ,WAAW,MAG1DpV,KAAKqV,mBAAqBH,SAASC,eAAe,UAClDnV,KAAKqV,mBAAmB7T,MAAQxB,KAAKkM,YACrClM,KAAKqV,mBAAmB5T,OAASzB,KAAKkM,YACtCgJ,SAASI,KAAKC,YAAYvV,KAAKqV,oBAC/BrV,KAAK6O,oBAAsB7O,KAAKqV,mBAAmBD,WAAW,MAE9DpV,KAAKqC,OAASrC,KAAKqC,OAAO0M,KAAK/O,MAC/BA,KAAKgP,cAAgBhP,KAAKgP,cAAcD,KAAK/O,MAC7CA,KAAKwV,gBAAkBxV,KAAKwV,gBAAgBzG,KAAK/O,MACjDkP,OAAOuG,YAAczV,KAAKwV,gBAC1BtG,OAAOC,UAAYnP,KAAKgP,cAExBhP,KAAKmM,gBAAgBuJ,WAErB1V,KAAKqP,SAAWC,YAAYtP,KAAKqC,OAAQ,GAAK,mDAK9C,IADA,IAAIsT,EAAS,GACL5W,EAAI,EAAGA,EAAI,EAAGA,IACrBiB,KAAKgV,QAAQvP,KAAK,CAAC7I,EAAsB,IAAnBoD,KAAKkM,YAAoBrP,EAAGmD,KAAKkM,YAAcyJ,EAAQnU,MAA0B,GAAnBxB,KAAKkM,YAAmBzK,OAA2B,GAAnBzB,KAAKkM,cACzHyJ,GAAU,0CAIEpG,GACbA,EAAMC,iBACgB,cAAnBxP,KAAK0P,WAEc,KAAlBH,EAAME,SACRzP,KAAK4V,YAAY5V,KAAK2P,YAAY3P,KAAK+U,cAGnB,KAAlBxF,EAAME,SAAoC,KAAlBF,EAAME,UAChCzP,KAAK+U,cACF/U,KAAK+U,YAAc,IACrB/U,KAAK+U,YAAc/U,KAAKgV,QAAQhW,OAAS,IAItB,KAAlBuQ,EAAME,SAAoC,KAAlBF,EAAME,UAChCzP,KAAK+U,cACF/U,KAAK+U,aAAe/U,KAAKgV,QAAQhW,SACnCgB,KAAK+U,YAAc,KAIK,aAAnB/U,KAAK0P,YACZ1P,KAAK0P,UAAY,qDAIHH,GACfA,EAAMC,iBAGN,IAAI5S,EAAoB,EAAhB2S,EAAMsG,QAAc,EACxBhZ,EAAoB,EAAhB0S,EAAMuG,QAAc,EAC5B,GAAsB,cAAnB9V,KAAK0P,WAAgD,WAAnB1P,KAAK0P,UACzC,IAAI,IAAI3Q,EAAI,EAAGA,EAAIiB,KAAKgV,QAAQhW,OAAQD,IAAK,CAChCjD,KAAK+B,yBAAyBjB,EAAGC,EAAG,GAAImD,KAAKgV,QAAQjW,GAAGnC,EAAGoD,KAAKgV,QAAQjW,GAAGlC,EAAGmD,KAAKgV,QAAQjW,GAAGyC,MAAOxB,KAAKgV,QAAQjW,GAAG0C,SAEhIzB,KAAK4V,YAAY5V,KAAK2P,YAAY5Q,QAIV,aAAnBiB,KAAK0P,YACZ1P,KAAK0P,UAAY,iDAIPqG,GACX,OAAQA,GACP,IAAK,QACL,IAAK,UACL,KAAK,EACJ/V,KAAK8U,KAAO,IAAIhJ,EAAK9L,KAAK4O,kBAAmB5O,KAAKgM,iBAAkBhM,KAAK6O,oBAAqB7O,KAAKkM,YAAalM,KAAKmM,gBAAiBnM,MACtIA,KAAK0P,UAAY,OACjB1P,KAAKmM,gBAAgB6J,YACrBhW,KAAKmM,gBAAgB8J,WACrBC,cAAclW,KAAKqP,UACnB,MACD,IAAK,OACL,KAAK,EACDrP,KAAK6T,OACP7T,KAAKmM,gBAAgBgK,SACrBnW,KAAK6T,OAAQ,IAGb7T,KAAKmM,gBAAgBiK,OACrBpW,KAAK6T,OAAQ,GAEd,MACD,IAAK,WACL,KAAK,EACH7T,KAAK0P,UAAY,WAClB,MACD,IAAK,SACJ1P,KAAK0P,UAAY,OACjB1P,KAAK8U,KAAK9G,QAAS,sCAQrBhO,KAAK4O,kBAAkB7N,OACvBf,KAAK4O,kBAAkB3N,UAAY,OACnC,IAAI,IAAIlC,EAAI,EAAGA,EAAIiB,KAAKgV,QAAQhW,OAAQD,IACpCiB,KAAK+U,cAAgBhW,EACvBiB,KAAK4O,kBAAkB3M,YAAc,OAGrCjC,KAAK4O,kBAAkB3M,YAAc,OAEtCjC,KAAK4O,kBAAkBzM,WAAWnC,KAAKgV,QAAQjW,GAAGnC,EAAGoD,KAAKgV,QAAQjW,GAAGlC,EAAGmD,KAAKgV,QAAQjW,GAAGyC,MAAOxB,KAAKgV,QAAQjW,GAAG0C,QAGhHzB,KAAK4O,kBAAkBhM,SAAS,QAA4B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACvElM,KAAK4O,kBAAkBhM,SAAS,OAA2B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACtElM,KAAK4O,kBAAkBhM,SAAS,WAA+B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aAC1ElM,KAAK4O,kBAAkBjM,KAAO,wBAC9B3C,KAAK4O,kBAAkBhM,SAAS,YAAgC,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aAC3ElM,KAAK4O,kBAAkBhM,SAAS,MAA0B,GAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACrElM,KAAK4O,kBAAkBhM,SAAS,SAA6B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACxElM,KAAK4O,kBAAkBvN,UAEvBrB,KAAK6O,oBAAoB4E,UAAUzT,KAAKgM,iBAAkB,EAAG,0CAI7DhM,KAAK4O,kBAAkB7N,OACvBf,KAAK4O,kBAAkB3N,UAAY,OACnCjB,KAAK4O,kBAAkBhM,SAAS,0BAA8C,GAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACzFlM,KAAK4O,kBAAkBhM,SAAS,+BAAmD,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aAC9FlM,KAAK4O,kBAAkBhM,SAAS,iCAAqD,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aAChGlM,KAAK4O,kBAAkBhM,SAAS,kBAAsC,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACjFlM,KAAK4O,kBAAkBhM,SAAS,eAAmC,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aAC9ElM,KAAK4O,kBAAkBhM,SAAS,cAAkC,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aAC7ElM,KAAK4O,kBAAkBhM,SAAS,qBAAyC,IAAnB5C,KAAKkM,YAAuC,GAAnBlM,KAAKkM,aACpFlM,KAAK4O,kBAAkBvN,UACvBrB,KAAK6O,oBAAoB4E,UAAUzT,KAAKgM,iBAAkB,EAAG,2CAI7DhM,KAAK4O,kBAAkB7N,OACvBf,KAAK4O,kBAAkB3M,YAAc,OACrC,IAAI,IAAIlD,EAAI,EAAGA,EAAIiB,KAAKgV,QAAQhW,OAAQD,IACvCiB,KAAK4O,kBAAkBzM,WAAWnC,KAAKgV,QAAQjW,GAAGnC,EAAGoD,KAAKgV,QAAQjW,GAAGlC,EAAGmD,KAAKgV,QAAQjW,GAAGyC,MAAOxB,KAAKgV,QAAQjW,GAAG0C,QAEhHzB,KAAK4O,kBAAkB3N,UAAY,OACnCjB,KAAK4O,kBAAkBhM,SAAS,SAA6B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACxElM,KAAK4O,kBAAkBhM,SAAS,UAA8B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACzElM,KAAK4O,kBAAkBhM,SAAS,OAA2B,IAAnB5C,KAAKkM,YAAuC,IAAnBlM,KAAKkM,aACtElM,KAAK4O,kBAAkBvN,UACvBrB,KAAK6O,oBAAoB4E,UAAUzT,KAAKgM,iBAAkB,EAAG,oCAK7DhM,KAAK4O,kBAAkB3N,UAAY,QACnCjB,KAAK4O,kBAAkBjM,KAAO,aAE9B3C,KAAK4O,kBAAkBxM,SAAS,EAAE,EAAGpC,KAAKkM,YAAalM,KAAKkM,aACtC,cAAnBlM,KAAK0P,UACP1P,KAAKqW,WAEqB,aAAnBrW,KAAK0P,WACZ1P,KAAKsW,wBAKR,IAAIzB","file":"static/js/main.6186f285.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  let dx = x1 - x2;\r\n  let dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n\r\nexport default class ParticlePool {\r\n  // 6 floats -> x, y, vx, vy, decay, life\r\n  constructor(maxSize, color, speed) {\r\n    this.pool = new Float32Array(6 * maxSize);\r\n    this.end = 0;\r\n    this.max = maxSize;\r\n    this.color = color;\r\n    this.speed = speed;\r\n  }\r\n\r\n  add(x, y, direction, decay, life) {\r\n    let randSpeed = Math.randomInt(1, this.speed);\r\n    let vx = Math.sin(direction) * randSpeed;\r\n    let vy = -Math.cos(direction) * randSpeed;\r\n    let lifeNoise = life + Math.randomBetween(-0.5, 0.5);\r\n    if(this.end < this.max) {\r\n      this.pool[6*this.end] = x;\r\n      this.pool[6*this.end + 1] = y;\r\n      this.pool[6*this.end + 2] = vx;\r\n      this.pool[6*this.end + 3] = vy;\r\n      this.pool[6*this.end + 4] = decay;\r\n      this.pool[6*this.end + 5] = lifeNoise;\r\n      this.end++;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    for(let i = 0; i < this.end; i++) {\r\n      let I = 6 * i;\r\n      //Update X\r\n      this.pool[I] += this.pool[I + 2];\r\n      //Update Y\r\n      this.pool[I + 1] += this.pool[I + 3];\r\n      //Decay X & Y velocities\r\n      if(Math.abs(this.pool[I + 2]) > 0) {\r\n        if(this.pool[I + 2] > 0) {\r\n          this.pool[I + 2] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 2] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      if(Math.abs(this.pool[I + 3]) > 0) {\r\n        if(this.pool[I + 3] > 0) {\r\n          this.pool[I + 3] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 3] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      //Decrement life\r\n      this.pool[I + 5] -= 0.1;\r\n\r\n      if(this.pool[I + 5] <= 0) {\r\n        let last = 6 * (this.end - 1);\r\n        this.pool[I] = this.pool[last];\r\n        this.pool[I + 1] = this.pool[last + 1];\r\n        this.pool[I + 2] = this.pool[last + 2];\r\n        this.pool[I + 3] = this.pool[last + 3];\r\n        this.pool[I + 4] = this.pool[last + 4];\r\n        this.pool[I + 5] = this.pool[last + 5];\r\n        this.end--;\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    for(let i = 0; i < this.end; i ++) {\r\n      ctx.moveTo(this.pool[6 * i], this.pool[6 * i + 1])\r\n      ctx.arc(this.pool[6 * i], this.pool[6 * i + 1], 1, 0, Math.tau);\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = new ParticlePool(200, 'green', 5.0);\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.add(x, y, Math.PI / 2, 0.0, 7.5);\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(3);\r\n    //Particle effect for the thruster\r\n    this.particles.update();\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    ctx.restore();\r\n    this.particles.render(ctx);\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUpDisplay {\r\n  constructor(x, y, type, timer) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.timer = timer;\r\n    this.type = type;\r\n    this.initColor();\r\n  }\r\n\r\n  initColor() {\r\n    switch (this.type) {\r\n      case 1:\r\n        this.color = 'red';\r\n        this.string = 'Homing: ';\r\n        break;\r\n      case 2:\r\n        this.color = 'red';\r\n        this.string = 'Rapid: '\r\n        break;\r\n      case 3:\r\n        this.color = 'magenta';\r\n        this.string = 'Shield: ';\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = \"25px Arial\";\r\n    ctx.globalAlpha = 0.60;\r\n    ctx.fillText(this.string + (this.timer / 60).toFixed(1), this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\nimport ParticlePool from './particlePool.js';\r\nimport BoostBar from './boostBar.js';\r\nimport PowerUpDisplay from './powerUpTimer.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //size, color, speed\r\n    this.boostParticles = new ParticlePool(210, 'blue', 3.0);\r\n    this.normalParticles = new ParticlePool(80, 'red', 2.0);\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.powerUpDisplays = {1: '', 2: '', 3: ''};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    let x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    let y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      let dx = x + Math.randomBetween(-3, 3);\r\n      let dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      let angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.boostParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 3.5);\r\n      }\r\n      else {\r\n        this.normalParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 2.0);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        this.powerUpDisplays[i].timer--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n          this.powerUpDisplays[i] = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    this.boostParticles.update();\r\n    this.normalParticles.update();\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  createPowerUpDisplay(type, timer) {\r\n    if(type === 1) {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.40, type, timer);\r\n    }\r\n    else if(type === 2) {\r\n      this.powerUpDisplays[type]= new PowerUpDisplay(5, 1000 * 0.50, type, timer);\r\n    }\r\n    else {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.60, type, timer);\r\n    }\r\n  }\r\n\r\n  updatePowerUpDisplay(type, amount) {\r\n    this.powerUpDisplays[type].timer += amount;\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    for(let i = 1; i < 4; i ++) {\r\n      if(this.powerUpDisplays[i] !== '') {\r\n        this.powerUpDisplays[i].render(ctx);\r\n      }\r\n    }\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    this.boostParticles.render(ctx);\r\n    this.normalParticles.render(ctx);\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.held = false;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    let segments = 24;\r\n    //15 degree increments\r\n    let angle = Math.tau / segments;\r\n    let randomRadius = this.radius;\r\n    let x;\r\n    let y;\r\n    for(let i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(let i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    this.particlePool = new ParticlePool(50, this.color, 1.0);\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    let x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    let y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      let dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      let dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particlePool.add(dx, dy, Math.PI * this.velocity.dir, -0.05, 1.0)\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000 || this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(2, 4));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.particlePool.update();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particlePool.render(ctx);\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.25;\r\n    this.target = null;\r\n    this.past = [];\r\n    this.width = 1;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  storePast() {\r\n    let point = {x: this.x, y: this.y};\r\n    this.past.push(point);\r\n    if(this.past.length > 30) {\r\n      //delete this.past[0];\r\n      this.past.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  alterPast() {\r\n    this.past.forEach(point => {\r\n      point.x += Math.randomBetween(-1, 1);\r\n      point.y += Math.randomBetween(-1, 1);\r\n    });\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    this.storePast();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.alterPast();\r\n  }\r\n\r\n  render(ctx) {\r\n    super.render(ctx);\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    for(let i = 0; i < this.past.length - 1; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.past[i].x, this.past[i].y);\r\n      ctx.lineTo(this.past[i + 1].x, this.past[i + 1].y);\r\n      ctx.stroke();\r\n      ctx.lineWidth += 0.1;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.boostParticles = null;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.normalParticles.color = this.color;\r\n    this.normalParticles.speed = 1.0;\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    let color;\r\n    let random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger' || this.color === 'Elite') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger' || this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    let xi;\r\n    let xf;\r\n    let yi;\r\n    let yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    let numSegments = 6;\r\n    for(let i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      let cos = Math.cos(i * Math.PI / 3);\r\n      let sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.held = true;\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid.held = false;\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      let x = this.x - Math.cos(angle) * this.radius;\r\n      let y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.normalParticles.add(x, y, this.velocity.dir + Math.PI, -0.05, 3.0);\r\n      //this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.normalParticles.add(dx, dy, angle, -0.05, 3.0);\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    this.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      let dist = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n      if(this.asteroid.destroyed || dist > this.bufferRadius + this.asteroid.radius) {\r\n        this.asteroid.held = false;\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    this.normalParticles.update();\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.normalParticles.render(ctx);\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//16.6 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1000;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//45 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 2700;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tlet xi;\r\n\t\tlet xf;\r\n\t\tlet yi;\r\n\t\tlet yf;\r\n\t\tlet numSegments = 2;\r\n\t\tfor(let i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tlet cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tlet sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        this.life = 80;\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class HUDObject {\r\n  constructor(x, y, type, information) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.info = information;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.font = \"30px Arial\";\r\n    ctx.globalAlpha = 0.70;\r\n    ctx.fillText(this.type + this.info, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport ParticlePool from './particlePool.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport HUDObject from './hud.js';\r\nimport './math.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth, audioController, menu) {\r\n    this.screenSide = screenWidth;\r\n    this.menu = menu;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 6;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 3;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = audioController;\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 3;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  initParticlePools() {\r\n    let speed = 5.0;\r\n    let max = 140;\r\n    this.particles.push(new ParticlePool(max, 'green', speed));\r\n    this.particles.push(new ParticlePool(max, 'white', speed));\r\n    this.particles.push(new ParticlePool(max, 'blue', speed));\r\n    this.particles.push(new ParticlePool(max, 'red', speed));\r\n    this.particles.push(new ParticlePool(max, 'fuchsia', speed));\r\n    this.particles.push(new ParticlePool(max, 'orange', speed));\r\n    this.particles.push(new ParticlePool(max, 'purple', speed));\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    if(event.keyCode === 80 || event.keyCode === 27) {\r\n      this.paused = true;\r\n      this.menu.gameState = 'paused';\r\n      this.menu.buttonNames[0] = 'resume';\r\n      this.menu.buttonNames[1] = 'restart';\r\n      this.menu.buttonNames[2] = 'mute';\r\n      this.menu.drawPauseMenu();\r\n    }\r\n    if(this.menu.gameState !== 'game') {\r\n      return;\r\n    }\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  initHUD() {\r\n    this.hudObjects.score = new HUDObject(this.screenSide * 0.45, this.screenSide * 0.05, 'Score: ', this.score);\r\n    this.hudObjects.lives = new HUDObject(this.screenSide * 0.03, this.screenSide * 0.97, 'Lives: ', this.lives);\r\n    this.hudObjects.level = new HUDObject(this.screenSide * 0.87, this.screenSide * 0.97, 'Level: ', this.level);\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    let x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.3;\r\n    let y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.3;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n      this.audioController.trigger('homing');\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    let dx = ufo.x - tx;\r\n    let dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    let direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    let x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    let y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n      this.audioController.trigger('homing');\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    let x;\r\n    let y;\r\n    let radius;\r\n    let mass;\r\n    //Var to control the while loop\r\n    let currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    let x;\r\n    let y;\r\n    let radius = 25;\r\n    let currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      let collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 1) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 1) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    let xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    let yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    let xDist = otherAsteroid.x - asteroid.x;\r\n    let yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        let angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        let m1 = 0;\r\n        let m2 = 0;\r\n        //If UFOs are holding the asteroid, treat them as if they were more massive\r\n        if(asteroid.held === true) {\r\n          m1 = asteroid.mass * 3;\r\n        }\r\n        else {\r\n          m1 = asteroid.mass;\r\n        }\r\n        if(otherAsteroid.held === true) {\r\n          m2 = otherAsteroid.mass * 3;\r\n        }\r\n        else {\r\n          m2 = otherAsteroid.mass;\r\n        }\r\n\r\n        // Velocity before equation\r\n        let u1 = this.rotate(asteroid.velocity, angle);\r\n        let u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        let v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        let v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        let vFinal1 = this.rotate(v1, -angle);\r\n        let vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    let distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      let direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateScore(amount) {\r\n    this.score += amount;\r\n    this.hudObjects.score.info = this.score;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    let asteroid = this.asteroids[aID];\r\n    let mass = asteroid.mass;\r\n    let x = asteroid.x;\r\n    let y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    asteroid.held = false;\r\n    //delete this.asteroids[aID];\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.updateScore(points);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      let random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      let direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      let angleChange = Math.tau / random;\r\n      for(let i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        let newX = x + Math.cos(direction) * mass;\r\n        let newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    let dx = ship.x - asteroid.x;\r\n    let dy = ship.y - asteroid.y;\r\n    let distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid);\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    let numParticles = Math.randomInt(30, 70);\r\n    let dir = Math.randomBetween(0, Math.tau);\r\n    let index = 0;\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      if(this.particles[j].color === color) {\r\n        index = j;\r\n        break;\r\n      }\r\n    }\r\n    for(let i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles[index].add(x, y, Math.PI + dir, -0.05, 3.5)\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    let x = Math.randomBetween(100, 900);\r\n    let y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    let buffer = 50;\r\n    let collision = false;\r\n    let len = 0;;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.projectiles.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let projectile = this.projectiles[i];\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.popups.push(new PopUp(400, 500, \"REPAWNING\", 'annoucement'));\r\n    this.lives--;\r\n    this.hudObjects.lives.info = this.lives;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    let ufo = this.ufos[ufoID];\r\n    this.updateScore(ufo.bounty);\r\n    this.popups.push(new PopUp(ufo.x, ufo.y, ufo.bounty, 'blip'));\r\n    if(ufo.bounty === 500) {\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    let random = Math.randomInt(20, 50);\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - random, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + random, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        //delete this.popups[i];\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    let len = this.ufos.length;\r\n    for(let i = 0; i < len; i++) {\r\n      let ufo = this.ufos[i];\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    }\r\n\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n\r\n    //Update each asteroid\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].update();\r\n    }\r\n\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (Math.ceil(this.level * this.level / 2) + 1) === 0) {\r\n      this.level++;\r\n      this.hudObjects.level.info = this.level;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 3 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = 3 + this.level;\r\n      if(this.constAsteroids > this.MAXASTEROIDS) {\r\n        this.constAsteroids = this.MAXASTEROIDS;\r\n      }\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        let scaling = (this.ufos.length / this.level);\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * scaling, this.UFOTIME * 2 * scaling);\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      let ratio = (this.powerups.length * 2 / this.level)\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * ratio, this.POWERTIME * 2 * ratio)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      for(let j = i + 1; j < len; j++) {\r\n        let asteroid = this.asteroids[i];\r\n        let otherAsteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, otherAsteroid.x, otherAsteroid.y, otherAsteroid.radius)) {\r\n          this.particleCollision(asteroid, otherAsteroid);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let projectile = this.projectiles[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(projectile.x, projectile.y, projectile.color);\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(asteroid.x, asteroid.y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for player crashing\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          if(this.ship.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(i);\r\n            break;\r\n          }\r\n          else {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    len = this.ufos.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      let powerUp = this.powerups[i];\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[powerUp.type] = true;\r\n        if(this.ship.powerupTimers[powerUp.type] > 0) {\r\n          this.ship.updatePowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        else {\r\n          this.ship.createPowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        this.ship.powerupTimers[powerUp.type] += powerUp.timer;\r\n        this.createPowerUpBlip(powerUp.type);\r\n        if(powerUp.type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        this.audioController.trigger('homing pickup');\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < len; j++) {\r\n        let ufo = this.ufos[j];\r\n        if(Math.circleCollisionDetection(ufo.x, ufo.y, ufo.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(ufo.x, ufo.y, ufo.color);\r\n          ufo.powerups[powerUp.type] = true;\r\n          ufo.powerupTimers[powerUp.type] += powerUp.timer;\r\n          if(powerUp.type === 2) {\r\n            ufo.reloading = false;\r\n            ufo.setRateOfFire();\r\n          }\r\n          this.audioController.trigger('homing pickup');\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < len; k++) {\r\n        let powerUp = this.powerups[i];\r\n        let asteroid = this.asteroids[k];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(powerUp.pos.x, powerUp.pos.y, powerUp.color);\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let ufo = this.ufos[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(this.detectShipCrash(ufo, asteroid)) {\r\n          if(ufo.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(j);\r\n          }\r\n          else {\r\n            this.explode(ufo.x, ufo.y, ufo.color);\r\n            this.destoryUFO(i);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.ufos.length;\r\n    if(len > 0) {\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo1 = this.ufos[i];\r\n        if(len > 1) {\r\n          for(let j = i + 1; j < len; j++) {\r\n            let ufo2 = this.ufos[j];\r\n            if(Math.circleCollisionDetection(ufo1.x, ufo1.y, ufo1.critical, ufo2.x, ufo2.y, ufo2.critical)) {\r\n              if((ufo1.type === 'Dodger' || ufo1.type === 'Elite') && !ufo1.reloading) {\r\n                this.ufoProjectile(ufo1, ufo2.x, ufo2.y);\r\n              }\r\n              if((ufo2.type === 'Dodger' || ufo2.type === 'Elite') && !ufo2.reloading) {\r\n                this.ufoProjectile(ufo2, ufo1.x, ufo1.y);\r\n              }\r\n              //Get the direction from the first ufo to the second.\r\n              let dir = Math.getDirection(ufo1.x, ufo1.y, ufo2.x, ufo2.y)\r\n              //Point the direction the other way\r\n              ufo1.alterPath(dir + Math.PI);\r\n              //From the second ufo's perspective, this is pointing away from ufo 1\r\n              ufo2.alterPath(dir);\r\n            }\r\n          }\r\n        }\r\n        if(!this.respawning) {\r\n          if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo1.x, ufo1.y, ufo1.radius)) {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(!this.respawning && Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'fuchsia');\r\n          this.audioController.trigger('shield broken');\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(projectile.x, projectile.y, projectile.color);\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        let ufo = this.ufos[j];\r\n        if((ufo.type === 'Dodger' || ufo.type === 'Elite') && ufo.clock === ufo.CLOCK) {\r\n          if(this.projectileDodger(ufo, projectile)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'fuchsia');\r\n              this.audioController.trigger('shield broken');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n          ufo.x, ufo.y, ufo.radius)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'fuchsia');\r\n              this.audioController.trigger('shield broken');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(3, 6));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 3));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(projectile.color === 'green') {\r\n        projectile.update(this.ufos);\r\n      }\r\n      else {\r\n        projectile.update(this.ship);\r\n      }\r\n      if(projectile.edgeDetection()) {\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n\r\n    let len = this.ufos.length;\r\n    //Draw UFOs\r\n    for(let i = 0; i < len; i++) {\r\n      this.ufos[i].render(this.backBufferContext);\r\n    }\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    len = this.asteroids.length;\r\n    //Draw asteroids\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].render(this.backBufferContext);\r\n    }\r\n    len = this.projectiles.length;\r\n    //draw projectiles\r\n    for(let i = 0; i < len; i++) {\r\n      this.projectiles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.powerups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.powerups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.particles.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.particles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.popups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.popups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    this.hudObjects.score.render(this.backBufferContext);\r\n    this.hudObjects.lives.render(this.backBufferContext);\r\n    this.hudObjects.level.render(this.backBufferContext);\r\n\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    /*\r\n    if(this.gameOver) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"GAME OVER\", 350, 500);\r\n      this.backBufferContext.fillText(\"Retry? Press ~\", 360, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n    if(this.paused) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"Paused\", 425, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }*/\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    if(Math.random() > 0.5) {\r\n      this.theme = new Audio('./theme.wav');\r\n    }\r\n    else {\r\n      this.theme = new Audio('./theme2.wav');\r\n    }\r\n    this.menu = new Audio('./menu2.wav');\r\n    this.menu.muted = false;\r\n\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.sounds.push(this.theme);\r\n    this.sounds.push(this.menu);\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.homing = new Audio('./homing.wav');\r\n    this.sounds.push(this.homing);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n    this.shieldBreak = new Audio('./shieldbreak.wav');\r\n    this.sounds.push(this.shieldBreak);\r\n    this.homingPickUp = new Audio('./homingpowerup.wav');\r\n    this.sounds.push(this.homingPickUp);\r\n  }\r\n\r\n  playTheme() {\r\n    this.theme.volume = 0.1;\r\n    this.theme.loop = true;\r\n    this.theme.play();\r\n  }\r\n\r\n  stopTheme() {\r\n    this.theme.pause();\r\n  }\r\n\r\n  playMenu() {\r\n    this.menu.volume = 0.30;\r\n    this.menu.loop = true;\r\n    this.menu.play();\r\n  }\r\n\r\n  stopMenu() {\r\n    this.menu.pause();\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'homing':\r\n        this.homing.play();\r\n        break;\r\n      case 'homing pickup':\r\n        this.homingPickUp.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'shield broken':\r\n        this.shieldBreak.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\nimport AudioController from './audiocontroller.js';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.game = null;\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = [];\r\n\t\tthis.buttonNames = ['start', 'mute', 'controls'];\r\n\t\tthis.muted = false;\r\n\t\tthis.initButtons();\r\n\t\tthis.audioController = new AudioController();\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.audioController.playMenu();\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\tinitButtons() {\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < 3; i++) {\r\n\t\t\tthis.buttons.push({x: this.screenWidth * 0.35, y: this.screenWidth * scaleY, width: this.screenWidth * 0.3, height: this.screenWidth * 0.1})\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttonNames[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\thandleMouseDown(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t//Adjust the client click position to the canvas position. Drawing with 1000px / 800px canvas (1000 / 800) = 5 / 4\r\n\t\tlet x = event.clientX * 5 / 4;\r\n\t\tlet y = event.clientY * 5 / 4;\r\n\t\tif(this.gameState === 'main menu' || this.gameState === 'paused') {\r\n\t\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\t\tlet check = Math.circleRectangleCollision(x, y, 10, this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tthis.clickButton(this.buttonNames[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"restart\":\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.game = new Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth, this.audioController, this);\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tthis.audioController.playTheme();\r\n\t\t\t\tthis.audioController.stopMenu();\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mute\":\r\n\t\t\tcase 1:\r\n\t\t\t\tif(this.muted) {\r\n\t\t\t\t\tthis.audioController.unmute();\r\n\t\t\t\t\tthis.muted = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.audioController.mute();\r\n\t\t\t\t\tthis.muted = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\tcase 2:\r\n\t\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"resume\":\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tthis.game.paused = false;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Mute\", this.screenWidth * 0.44, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.font = '120px Times New Roman';\r\n\t\tthis.backBufferContext.fillText(\"Asteroids\", this.screenWidth * 0.05, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\" & \", this.screenWidth * 0.50, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"Aliens\", this.screenWidth * 0.65, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawPauseMenu() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"Resume\", this.screenWidth * 0.42, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Restart\", this.screenWidth * 0.43, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Mute\", this.screenWidth * 0.44, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n"],"sourceRoot":""}