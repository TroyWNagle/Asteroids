{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particlePool.js","boostBar.js","powerUpTimer.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","hud.js","audiocontroller.js","game.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","ParticlePool","maxSize","color","speed","this","pool","Float32Array","end","decay","life","randSpeed","vx","sin","vy","cos","lifeNoise","I","last","ctx","save","beginPath","fillStyle","moveTo","arc","fill","restore","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","add","createParticles","update","strokeStyle","globalAlpha","strokeRect","fillRect","render","PowerUpDisplay","type","timer","initColor","string","font","fillText","toFixed","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boostParticles","normalParticles","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","powerUpDisplays","boostGauge","acceleration","angleNoise","angle","edgeDetection","updateVelocity","checkPowerUps","closePath","amount","translate","rotate","lineTo","stroke","drawShield","Asteroid","mass","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","push","context","Projectile","initSpeed","particlePool","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","past","shortest","distance","findDistance","findDirection","delta","point","splice","forEach","findTarget","adjustDirection","storePast","alterPast","lineWidth","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","clock","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","j","player","error","magnitude","updateSpeed","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","initTimer","initShape","rect","PopUp","size","initSettings","HUDObject","information","info","AudioController","sounds","over","Audio","collisionSound","volume","explosion","shipExplosion","ufoLaser","teleportSound","change","sound","muted","play","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","initParticlePools","score","highscore","lives","level","popups","hudObjects","initHUD","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","audioController","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","masterReset","ufo","tx","ty","trigger","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","updateScore","angleChange","newX","newY","catchAsteroid","ufoProjectile","index","len","explode","ufoID","createBlip","HUDcontext","strokeText","checkAsteroidAlignment","initAsteroids","difference","addUFO","scaling","createPowerUp","ratio","particleCollision","handleAsteriodExplosion","respawn","powerUp","updatePowerUpDisplay","createPowerUpDisplay","createPowerUpBlip","k","detectShipCrash","destoryUFO","ufo1","ufo2","projectileDodger","createProjectile","teleport","checkHighScore","drawImage","Menu","gameState","highlighted","buttons","buttonNames","initButtons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","handleMouseDown","onmousedown","scaleY","clickButton","clientX","clientY","button","clearInterval","drawMenu","drawControls"],"mappings":"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","file":"static/js/main.c576571a.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  let dx = x1 - x2;\r\n  let dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n\r\nexport default class ParticlePool {\r\n  // 6 floats -> x, y, vx, vy, decay, life\r\n  constructor(maxSize, color, speed) {\r\n    this.pool = new Float32Array(6 * maxSize);\r\n    this.end = 0;\r\n    this.max = maxSize;\r\n    this.color = color;\r\n    this.speed = speed;\r\n  }\r\n\r\n  add(x, y, direction, decay, life) {\r\n    let randSpeed = Math.randomInt(1, this.speed);\r\n    let vx = Math.sin(direction) * randSpeed;\r\n    let vy = -Math.cos(direction) * randSpeed;\r\n    let lifeNoise = life + Math.randomBetween(-0.5, 0.5);\r\n    if(this.end < this.max) {\r\n      this.pool[6*this.end] = x;\r\n      this.pool[6*this.end + 1] = y;\r\n      this.pool[6*this.end + 2] = vx;\r\n      this.pool[6*this.end + 3] = vy;\r\n      this.pool[6*this.end + 4] = decay;\r\n      this.pool[6*this.end + 5] = lifeNoise;\r\n      this.end++;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    for(let i = 0; i < this.end; i++) {\r\n      let I = 6 * i;\r\n      //Update X\r\n      this.pool[I] += this.pool[I + 2];\r\n      //Update Y\r\n      this.pool[I + 1] += this.pool[I + 3];\r\n      //Decay X & Y velocities\r\n      if(Math.abs(this.pool[I + 2]) > 0) {\r\n        if(this.pool[I + 2] > 0) {\r\n          this.pool[I + 2] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 2] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      if(Math.abs(this.pool[I + 3]) > 0) {\r\n        if(this.pool[I + 3] > 0) {\r\n          this.pool[I + 3] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 3] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      //Decrement life\r\n      this.pool[I + 5] -= 0.1;\r\n\r\n      if(this.pool[I + 5] <= 0) {\r\n        let last = 6 * (this.end - 1);\r\n        this.pool[I] = this.pool[last];\r\n        this.pool[I + 1] = this.pool[last + 1];\r\n        this.pool[I + 2] = this.pool[last + 2];\r\n        this.pool[I + 3] = this.pool[last + 3];\r\n        this.pool[I + 4] = this.pool[last + 4];\r\n        this.pool[I + 5] = this.pool[last + 5];\r\n        this.end--;\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    for(let i = 0; i < this.end; i ++) {\r\n      ctx.moveTo(this.pool[6 * i], this.pool[6 * i + 1])\r\n      ctx.arc(this.pool[6 * i], this.pool[6 * i + 1], 1, 0, Math.tau);\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = new ParticlePool(200, 'green', 5.0);\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.add(x, y, Math.PI / 2, 0.0, 7.5);\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(3);\r\n    //Particle effect for the thruster\r\n    this.particles.update();\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    ctx.restore();\r\n    this.particles.render(ctx);\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUpDisplay {\r\n  constructor(x, y, type, timer) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.timer = timer;\r\n    this.type = type;\r\n    this.initColor();\r\n  }\r\n\r\n  initColor() {\r\n    switch (this.type) {\r\n      case 1:\r\n        this.color = 'red';\r\n        this.string = 'Homing: ';\r\n        break;\r\n      case 2:\r\n        this.color = 'red';\r\n        this.string = 'Rapid: '\r\n        break;\r\n      case 3:\r\n        this.color = 'magenta';\r\n        this.string = 'Shield: ';\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = \"25px Arial\";\r\n    ctx.globalAlpha = 0.60;\r\n    ctx.fillText(this.string + (this.timer / 60).toFixed(1), this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\nimport ParticlePool from './particlePool.js';\r\nimport BoostBar from './boostBar.js';\r\nimport PowerUpDisplay from './powerUpTimer.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //size, color, speed\r\n    this.boostParticles = new ParticlePool(210, 'blue', 3.0);\r\n    this.normalParticles = new ParticlePool(80, 'red', 2.0);\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.powerUpDisplays = {1: '', 2: '', 3: ''};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    let x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    let y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      let dx = x + Math.randomBetween(-3, 3);\r\n      let dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      let angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.boostParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 3.5);\r\n      }\r\n      else {\r\n        this.normalParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 2.0);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        this.powerUpDisplays[i].timer--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n          this.powerUpDisplays[i] = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    this.boostParticles.update();\r\n    this.normalParticles.update();\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  createPowerUpDisplay(type, timer) {\r\n    if(type === 1) {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.40, type, timer);\r\n    }\r\n    else if(type === 2) {\r\n      this.powerUpDisplays[type]= new PowerUpDisplay(5, 1000 * 0.50, type, timer);\r\n    }\r\n    else {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.60, type, timer);\r\n    }\r\n  }\r\n\r\n  updatePowerUpDisplay(type, amount) {\r\n    this.powerUpDisplays[type].timer += amount;\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    for(let i = 1; i < 4; i ++) {\r\n      if(this.powerUpDisplays[i] !== '') {\r\n        this.powerUpDisplays[i].render(ctx);\r\n      }\r\n    }\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    this.boostParticles.render(ctx);\r\n    this.normalParticles.render(ctx);\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    let segments = 24;\r\n    //15 degree increments\r\n    let angle = Math.tau / segments;\r\n    let randomRadius = this.radius;\r\n    let x;\r\n    let y;\r\n    for(let i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(let i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    this.particlePool = new ParticlePool(50, this.color, 1.0);\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    let x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    let y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      let dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      let dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particlePool.add(dx, dy, Math.PI * this.velocity.dir, -0.05, 1.0)\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000 || this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(2, 4));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.particlePool.update();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particlePool.render(ctx);\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.25;\r\n    this.target = null;\r\n    this.past = [];\r\n    this.width = 1;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  storePast() {\r\n    let point = {x: this.x, y: this.y};\r\n    this.past.push(point);\r\n    if(this.past.length > 30) {\r\n      //delete this.past[0];\r\n      this.past.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  alterPast() {\r\n    this.past.forEach(point => {\r\n      point.x += Math.randomBetween(-1, 1);\r\n      point.y += Math.randomBetween(-1, 1);\r\n    });\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    this.storePast();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.alterPast();\r\n  }\r\n\r\n  render(ctx) {\r\n    super.render(ctx);\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    for(let i = 0; i < this.past.length - 1; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.past[i].x, this.past[i].y);\r\n      ctx.lineTo(this.past[i + 1].x, this.past[i + 1].y);\r\n      ctx.stroke();\r\n      ctx.lineWidth += 0.1;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.boostParticles = null;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.normalParticles.color = this.color;\r\n    this.normalParticles.speed = 1.0;\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    let color;\r\n    let random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger' || this.color === 'Elite') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger' || this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    let xi;\r\n    let xf;\r\n    let yi;\r\n    let yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    let numSegments = 6;\r\n    for(let i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      let cos = Math.cos(i * Math.PI / 3);\r\n      let sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      let x = this.x - Math.cos(angle) * this.radius;\r\n      let y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.normalParticles.add(x, y, this.velocity.dir + Math.PI, -0.05, 3.0);\r\n      //this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.normalParticles.add(dx, dy, angle, -0.05, 3.0);\r\n      //this.particles.push(new Particle(dx, dy, angle + Math.PI / 6, 2.0, this.color, 20, true));\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    this.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      let dist = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n      if(this.asteroid.destroyed || dist > this.bufferRadius + this.asteroid.radius) {\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    this.normalParticles.update();\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.normalParticles.render(ctx);\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//16.6 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1000;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//45 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 2700;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tlet xi;\r\n\t\tlet xf;\r\n\t\tlet yi;\r\n\t\tlet yf;\r\n\t\tlet numSegments = 2;\r\n\t\tfor(let i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tlet cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tlet sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        this.life = 80;\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class HUDObject {\r\n  constructor(x, y, type, information) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.info = information;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.font = \"30px Arial\";\r\n    ctx.globalAlpha = 0.70;\r\n    ctx.fillText(this.type + this.info, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    /*this.theme = new Audio('./theme.wav');\r\n    this.theme.volume = 0.01;\r\n    this.theme.loop = true;\r\n    this.theme.play();*/\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport ParticlePool from './particlePool.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport HUDObject from './hud.js';\r\nimport './math.js';\r\nimport AudioController from './audiocontroller.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth) {\r\n    this.screenSide = screenWidth;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 6;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 3;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = new AudioController();\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 3;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  initParticlePools() {\r\n    let speed = 5.0;\r\n    let max = 140;\r\n    this.particles.push(new ParticlePool(max, 'green', speed));\r\n    this.particles.push(new ParticlePool(max, 'white', speed));\r\n    this.particles.push(new ParticlePool(max, 'blue', speed));\r\n    this.particles.push(new ParticlePool(max, 'red', speed));\r\n    this.particles.push(new ParticlePool(max, 'fuchsia', speed));\r\n    this.particles.push(new ParticlePool(max, 'orange', speed));\r\n    this.particles.push(new ParticlePool(max, 'purple', speed));\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n    if(event.keyCode === 80) {\r\n      if(this.paused) {\r\n        this.paused = false;\r\n      }\r\n      else {\r\n        this.paused = true;\r\n      }\r\n    }\r\n    if(event.keyCode === 192) {\r\n      this.masterReset();\r\n    }\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  initHUD() {\r\n    this.hudObjects.score = new HUDObject(this.screenSide * 0.45, this.screenSide * 0.05, 'Score: ', this.score);\r\n    this.hudObjects.lives = new HUDObject(this.screenSide * 0.03, this.screenSide * 0.97, 'Lives: ', this.lives);\r\n    this.hudObjects.level = new HUDObject(this.screenSide * 0.87, this.screenSide * 0.97, 'Level: ', this.level);\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    let x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.3;\r\n    let y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.3;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    let dx = ufo.x - tx;\r\n    let dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    let direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    let x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    let y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n    }\r\n    this.audioController.trigger('shoot');\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    let x;\r\n    let y;\r\n    let radius;\r\n    let mass;\r\n    //Var to control the while loop\r\n    let currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    let x;\r\n    let y;\r\n    let radius = 25;\r\n    let currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      let collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    let xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    let yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    let xDist = otherAsteroid.x - asteroid.x;\r\n    let yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        let angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        let m1 = asteroid.mass;\r\n        let m2 = otherAsteroid.mass;\r\n\r\n        // Velocity before equation\r\n        let u1 = this.rotate(asteroid.velocity, angle);\r\n        let u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        let v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        let v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        let vFinal1 = this.rotate(v1, -angle);\r\n        let vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    let distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      let direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateScore(amount) {\r\n    this.score += amount;\r\n    this.hudObjects.score.info = this.score;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    let asteroid = this.asteroids[aID];\r\n    let mass = asteroid.mass;\r\n    let x = asteroid.x;\r\n    let y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    //delete this.asteroids[aID];\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.updateScore(points);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      let random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      let direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      let angleChange = Math.tau / random;\r\n      for(let i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        let newX = x + Math.cos(direction) * mass;\r\n        let newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    let dx = ship.x - asteroid.x;\r\n    let dy = ship.y - asteroid.y;\r\n    let distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid)\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    let numParticles = Math.randomInt(30, 70);\r\n    let dir = Math.randomBetween(0, Math.tau);\r\n    let index = 0;\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      if(this.particles[j].color === color) {\r\n        index = j;\r\n        break;\r\n      }\r\n    }\r\n    for(let i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles[index].add(x, y, Math.PI + dir, -0.05, 3.5)\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    let x = Math.randomBetween(100, 900);\r\n    let y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    let buffer = 50;\r\n    let collision = false;\r\n    let len = 0;;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.projectiles.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let projectile = this.projectiles[i];\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.lives--;\r\n    this.hudObjects.lives.info = this.lives;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      /*this.theme.loop = false;\r\n      this.theme.pause();*/\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    let ufo = this.ufos[ufoID];\r\n    this.updateScore(ufo.bounty);\r\n    this.popups.push(new PopUp(ufo.x, ufo.y, ufo.bounty, 'blip'));\r\n    if(ufo.bounty === 500) {\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    let random = Math.randomInt(20, 50);\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - random, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + random, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        //delete this.popups[i];\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    let len = this.ufos.length;\r\n    for(let i = 0; i < len; i++) {\r\n      let ufo = this.ufos[i];\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    }\r\n\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n\r\n    //Update each asteroid\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].update();\r\n    }\r\n\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (Math.ceil(this.level * this.level / 2) + 1) === 0) {\r\n      this.level++;\r\n      this.hudObjects.level.info = this.level;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 3 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = 3 + this.level;\r\n      if(this.constAsteroids > this.MAXASTEROIDS) {\r\n        this.constAsteroids = this.MAXASTEROIDS;\r\n      }\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        let scaling = (this.ufos.length / this.level);\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * scaling, this.UFOTIME * 2 * scaling);\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      let ratio = (this.powerups.length * 2 / this.level)\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * ratio, this.POWERTIME * 2 * ratio)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      for(let j = i + 1; j < len; j++) {\r\n        let asteroid = this.asteroids[i];\r\n        let otherAsteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, otherAsteroid.x, otherAsteroid.y, otherAsteroid.radius)) {\r\n          this.particleCollision(asteroid, otherAsteroid);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let projectile = this.projectiles[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(projectile.x, projectile.y, projectile.color);\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(asteroid.x, asteroid.y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for player crashing\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          if(this.ship.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(i);\r\n            break;\r\n          }\r\n          else {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    len = this.ufos.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      let powerUp = this.powerups[i];\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[powerUp.type] = true;\r\n        if(this.ship.powerupTimers[powerUp.type] > 0) {\r\n          this.ship.updatePowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        else {\r\n          this.ship.createPowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        this.ship.powerupTimers[powerUp.type] += powerUp.timer;\r\n        this.createPowerUpBlip(powerUp.type);\r\n        if(powerUp.type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < len; j++) {\r\n        let ufo = this.ufos[j];\r\n        if(Math.circleCollisionDetection(ufo.x, ufo.y, ufo.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(ufo.x, ufo.y, ufo.color);\r\n          ufo.powerups[powerUp.type] = true;\r\n          ufo.powerupTimers[powerUp.type] += powerUp.timer;\r\n          if(powerUp.type === 2) {\r\n            ufo.reloading = false;\r\n            ufo.setRateOfFire();\r\n          }\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < len; k++) {\r\n        let powerUp = this.powerups[i];\r\n        let asteroid = this.asteroids[k];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(powerUp.pos.x, powerUp.pos.y, powerUp.color);\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let ufo = this.ufos[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(this.detectShipCrash(ufo, asteroid)) {\r\n          if(ufo.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(j);\r\n          }\r\n          else {\r\n            this.explode(ufo.x, ufo.y, ufo.color);\r\n            this.destoryUFO(i);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.ufos.length;\r\n    if(len > 0) {\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo1 = this.ufos[i];\r\n        if(len > 1) {\r\n          for(let j = i + 1; j < len; j++) {\r\n            let ufo2 = this.ufos[j];\r\n            if(Math.circleCollisionDetection(ufo1.x, ufo1.y, ufo1.critical, ufo2.x, ufo2.y, ufo2.critical)) {\r\n              if((ufo1.type === 'Dodger' || ufo1.type === 'Elite') && !ufo1.reloading) {\r\n                this.ufoProjectile(ufo1, ufo2.x, ufo2.y);\r\n              }\r\n              if((ufo2.type === 'Dodger' || ufo2.type === 'Elite') && !ufo2.reloading) {\r\n                this.ufoProjectile(ufo2, ufo1.x, ufo1.y);\r\n              }\r\n              //Get the direction from the first ufo to the second.\r\n              let dir = Math.getDirection(ufo1.x, ufo1.y, ufo2.x, ufo2.y)\r\n              //Point the direction the other way\r\n              ufo1.alterPath(dir + Math.PI);\r\n              //From the second ufo's perspective, this is pointing away from ufo 1\r\n              ufo2.alterPath(dir);\r\n            }\r\n          }\r\n        }\r\n        if(!this.respawning) {\r\n          if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo1.x, ufo1.y, ufo1.radius)) {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(!this.respawning && Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'magenta');\r\n          this.ship.powerups[3] = false;\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(projectile.x, projectile.y, projectile.color);\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        let ufo = this.ufos[j];\r\n        if((ufo.type === 'Dodger' || ufo.type === 'Elite') && ufo.clock === ufo.CLOCK) {\r\n          if(this.projectileDodger(ufo, projectile)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'magenta');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n          ufo.x, ufo.y, ufo.radius)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'magenta');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(3, 6));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 3));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(projectile.color === 'green') {\r\n        projectile.update(this.ufos);\r\n      }\r\n      else {\r\n        projectile.update(this.ship);\r\n      }\r\n      if(projectile.edgeDetection()) {\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n    //Display respawning if needed\r\n    if(this.respawning && !this.gameOver) {\r\n      this.backBufferContext.save();\r\n      this.backBufferContext.globalAlpha = 0.5;\r\n      this.backBufferContext.strokeText(\"RESPAWNING\", 350, 500);\r\n      this.backBufferContext.restore();\r\n    }\r\n    let len = this.ufos.length;\r\n    //Draw UFOs\r\n    for(let i = 0; i < len; i++) {\r\n      this.ufos[i].render(this.backBufferContext);\r\n    }\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    len = this.asteroids.length;\r\n    //Draw asteroids\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].render(this.backBufferContext);\r\n    }\r\n    len = this.projectiles.length;\r\n    //draw projectiles\r\n    for(let i = 0; i < len; i++) {\r\n      this.projectiles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.powerups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.powerups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.particles.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.particles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.popups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.popups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    this.hudObjects.score.render(this.backBufferContext);\r\n    this.hudObjects.lives.render(this.backBufferContext);\r\n    this.hudObjects.level.render(this.backBufferContext);\r\n\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"GAME OVER\", 350, 500);\r\n      this.backBufferContext.fillText(\"Retry? Press ~\", 360, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n    if(this.paused) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"Paused\", 425, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = [];\r\n\t\tthis.buttonNames = ['start', 'options', 'controls'];\r\n\t\tthis.initButtons();\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\tinitButtons() {\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < 3; i++) {\r\n\t\t\tthis.buttons.push({x: this.screenWidth * 0.35, y: this.screenWidth * scaleY, width: this.screenWidth * 0.3, height: this.screenWidth * 0.1})\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\t//console.log(event.keyCode);\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttonNames[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\thandleMouseDown(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t//Adjust the client click position to the canvas position. Drawing with 1000px / 800px canvas (1000 / 800) = 5 / 4\r\n\t\tlet x = event.clientX * 5 / 4;\r\n\t\tlet y = event.clientY * 5 / 4;\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\t\tlet check = Math.circleRectangleCollision(x, y, 10, this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tthis.clickButton(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.gameState === 'options') {\r\n\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase 0:\r\n\t\t\t\tnew Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth);\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"options\":\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Options\", this.screenWidth * 0.42, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n//new Game();\r\n"],"sourceRoot":""}