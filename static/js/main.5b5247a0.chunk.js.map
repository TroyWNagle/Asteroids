{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particles.js","boostBar.js","powerUpTimer.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","hud.js","audiocontroller.js","game.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Particle","speed","color","life","decay","this","speedX","cos","speedY","sin","updateSpeed","ctx","save","fillStyle","beginPath","arc","closePath","fill","restore","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","push","createParticles","j","update","splice","strokeStyle","globalAlpha","strokeRect","fillRect","forEach","particle","render","PowerUpDisplay","type","timer","initColor","string","font","fillText","toFixed","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","powerUpDisplays","boostGauge","acceleration","angleNoise","angle","edgeDetection","updateVelocity","checkPowerUps","amount","translate","rotate","moveTo","lineTo","stroke","drawShield","Asteroid","mass","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","context","Projectile","initSpeed","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","past","shortest","distance","findDistance","findDirection","delta","point","findTarget","adjustDirection","storePast","alterPast","lineWidth","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","clock","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","player","error","magnitude","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","initTimer","initShape","rect","PopUp","size","initSettings","HUDObject","information","info","AudioController","sounds","over","Audio","collisionSound","volume","explosion","shipExplosion","ufoLaser","teleportSound","change","sound","muted","play","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","score","highscore","lives","level","popups","hudObjects","initHUD","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","audioController","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","masterReset","ufo","tx","ty","trigger","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","updateScore","angleChange","newX","newY","catchAsteroid","ufoProjectile","explode","ufoID","createBlip","HUDcontext","strokeText","_this2","checkAsteroidAlignment","test","initAsteroids","difference","addUFO","scaling","createPowerUp","ratio","particleCollision","handleAsteriodExplosion","respawn","powerUp","updatePowerUpDisplay","createPowerUpDisplay","createPowerUpBlip","k","detectShipCrash","destoryUFO","ufo1","ufo2","projectileDodger","createProjectile","teleport","checkHighScore","_this3","powerup","popup","drawImage","Menu","gameState","highlighted","buttons","buttonNames","initButtons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","handleMouseDown","onmousedown","scaleY","clickButton","clientX","clientY","button","clearInterval","drawMenu","drawControls"],"mappings":"uGACAA,KAAKC,IAAgB,EAAVD,KAAKE,GAOhBF,KAAKG,cAAgB,SAAUC,EAAKC,GAClC,OAAOL,KAAKM,UAAYD,EAAMD,GAAOA,GASvCJ,KAAKO,UAAY,SAAUH,EAAKC,GAC9B,IAAIG,EAASR,KAAKS,MAAML,GACpBM,EAAUV,KAAKW,KAAKN,GACxB,OAAOL,KAAKY,MAAMZ,KAAKM,UAAYI,EAAUF,IAAWA,GAU1DR,KAAKa,aAAe,SAASC,EAAGC,EAAGC,EAAIC,GAErC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EAETG,EAAOpB,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GAEhCG,EAAYtB,KAAKuB,KAAKJ,EAAGC,GAQ7B,OANGF,EAAK,IACNI,IAAc,GAEZA,EAAY,IACdA,GAAatB,KAAKC,KAEbqB,GAGTtB,KAAKwB,OAAS,SAASJ,EAAMN,EAAGC,EAAIC,EAAIC,GAEtC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EACTK,EAAYtB,KAAKuB,KAAKJ,EAAKC,GAQ/B,OANGF,EAAK,IACNI,IAAc,GAEbA,EAAY,IACbA,GAAatB,KAAKC,KAEbqB,GAGTtB,KAAKyB,YAAc,SAASX,EAAGC,EAAGC,EAAIC,GAEpC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EAGb,OADWjB,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,IActCnB,KAAK0B,yBAA2B,SAASC,EAAIC,EAAIC,EAAIb,EAAIC,EAAIa,GAC3D,IAAIZ,EAAKS,EAAKX,EACVG,EAAKS,EAAKX,EAEd,QAAGC,EAAKW,EAAKC,GAAMX,EAAKU,EAAKC,MAI1BZ,EAAKA,EAAKC,EAAKA,IAAOU,EAAKC,IAAOD,EAAKC,KAiB5C9B,KAAK+B,yBAA2B,SAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAE/D,IAAIC,EAAUJ,EAAKE,EAAK,EAApBE,EAA0BH,EAAKE,EAAK,EAEpCpB,EAAKlB,KAAKwC,IAAIR,EAAKO,GACnBpB,EAAKnB,KAAKwC,IAAIP,EAAKM,GAGvB,QAAIrB,EAAMmB,EAAK,EAAIH,OACff,EAAMmB,EAAK,EAAIJ,KAGfhB,GAAOmB,EAAK,IACZlB,GAAOmB,EAAK,GAGLtC,KAAKyC,IAAKvB,EAAKmB,EAAK,EAAK,GAAKrC,KAAKyC,IAAKtB,EAAKmB,EAAK,EAAI,IAChDJ,EAAKA,uDC7HT,SAAAQ,EAAAC,EAAAC,GACf,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCCFA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAD,EAAAE,OAAkBD,IAAA,CACnC,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIe,SAAAO,EAAAd,EAAAe,EAAAC,GAGf,OAFAD,GAAAb,EAAAF,EAAAiB,UAAAF,GACAC,GAAAd,EAAAF,EAAAgB,GACAhB,aCTqBkB,aASnB,SAAAA,EAAYhD,EAAGC,EAAGO,EAAWyC,EAAOC,EAAOC,EAAMC,GAAQxB,EAAAyB,KAAAL,GACvDK,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKF,KAAOA,EACZE,KAAKD,MAAQA,EACbC,KAAKH,MAAQA,EACbG,KAAKJ,MAAQ/D,KAAKO,UAAU,EAAGwD,GAC/BI,KAAK7C,UAAYA,EACjB6C,KAAKC,OAASpE,KAAKqE,IAAI/C,GAAa6C,KAAKJ,MACzCI,KAAKG,QAAUtE,KAAKuE,IAAIjD,GAAa6C,KAAKJ,sDAI1CI,KAAKC,OAASpE,KAAKqE,IAAIF,KAAK7C,WAAa6C,KAAKJ,MAC9CI,KAAKG,QAAUtE,KAAKuE,IAAIJ,KAAK7C,WAAa6C,KAAKJ,uCAO/CI,KAAKF,OACFE,KAAKD,OAASC,KAAKJ,MAAQ,IAC5BI,KAAKJ,OAAS,IACdI,KAAKK,eAEPL,KAAKrD,GAAKqD,KAAKC,OACfD,KAAKpD,GAAKoD,KAAKG,sCAKVG,GACLA,EAAIC,OACJD,EAAIE,UAAYR,KAAKH,MACrBS,EAAIG,YACJH,EAAII,IAAIV,KAAKrD,EAAGqD,KAAKpD,EAAG,EAAG,EAAGf,KAAKC,KACnCwE,EAAIK,YACJL,EAAIM,OACJN,EAAIO,mBClDaC,aACnB,SAAAA,EAAYC,EAAO7E,GAAMqC,EAAAyB,KAAAc,GACvBd,KAAKrD,EAAI,IACTqD,KAAKpD,EAAI,IACToD,KAAKgB,MAAQ,IACbhB,KAAKiB,OAAS,GACdjB,KAAKkB,SAAWhF,EAChB8D,KAAKe,MAAQA,EACbf,KAAKmB,UAAY,GACjBnB,KAAKoB,WAAapB,KAAKgB,OAAShB,KAAKe,MAAQf,KAAKkB,4DAGpCG,GAEd,IADA,IAAI1E,EAAI,EAAIqD,KAAKrD,EAAIqD,KAAKgB,MAAQ,EACzBlC,EAAI,EAAGA,EAAIuC,EAAcvC,IAAK,CACrC,IAAIlC,EAAIf,KAAKG,cAAcgE,KAAKpD,EAAIoD,KAAKiB,OAAS,EAAGjB,KAAKpD,EAAIoD,KAAKiB,OAAS,GAC5EjB,KAAKmB,UAAUG,KAAK,IAAI3B,EAAShD,EAAGC,EAAG,EAAG,EAAK,QAAS,IAAI,sCAK9DoD,KAAKoB,WAAapB,KAAKgB,OAAShB,KAAKe,MAAQf,KAAKkB,UAClDlB,KAAKuB,gBAAgB,GAErB,IAAI,IAAIC,EAAI,EAAGA,EAAIxB,KAAKmB,UAAUpC,OAAQyC,IACxCxB,KAAKmB,UAAUK,GAAGC,UACfzB,KAAKmB,UAAUK,GAAG1B,MAAQ,GAAKE,KAAKmB,UAAUK,GAAG7E,EAAIqD,KAAKrD,EAAIqD,KAAKgB,MAAQ,EAAIhB,KAAKoB,aAErFpB,KAAKmB,UAAUO,OAAOF,EAAG,kCAKxBlB,GACLA,EAAIC,OACJD,EAAIqB,YAAc,OAClBrB,EAAIE,UAAY,OAChBF,EAAIsB,YAAc,GAClBtB,EAAIuB,WAAW7B,KAAKrD,EAAIqD,KAAKgB,MAAQ,EAAGhB,KAAKpD,EAAIoD,KAAKiB,OAAS,EAAGjB,KAAKgB,MAAOhB,KAAKiB,QACnFX,EAAIwB,SAAS9B,KAAKrD,EAAIqD,KAAKgB,MAAQ,EAAGhB,KAAKpD,EAAIoD,KAAKiB,OAAS,EAAGjB,KAAKoB,WAAYpB,KAAKiB,QACtFjB,KAAKmB,UAAUY,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,KAElBA,EAAIO,mBC3CaqB,aACnB,SAAAA,EAAYvF,EAAGC,EAAGuF,EAAMC,GAAQ7D,EAAAyB,KAAAkC,GAC9BlC,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKoC,MAAQA,EACbpC,KAAKmC,KAAOA,EACZnC,KAAKqC,0DAIL,OAAQrC,KAAKmC,MACX,KAAK,EACHnC,KAAKH,MAAQ,MACbG,KAAKsC,OAAS,WACd,MACF,KAAK,EACHtC,KAAKH,MAAQ,MACbG,KAAKsC,OAAS,UACd,MACF,KAAK,EACHtC,KAAKH,MAAQ,UACbG,KAAKsC,OAAS,2CAObhC,GACLA,EAAIC,OACJD,EAAIE,UAAYR,KAAKH,MACrBS,EAAIiC,KAAO,aACXjC,EAAIsB,YAAc,GAClBtB,EAAIkC,SAASxC,KAAKsC,QAAUtC,KAAKoC,MAAQ,IAAIK,QAAQ,GAAIzC,KAAKrD,EAAGqD,KAAKpD,GACtE0D,EAAIO,mBC5Ba6B,aAInB,SAAAA,IAAenE,EAAAyB,KAAA0C,GAEb1C,KAAKrD,EAAI,IACTqD,KAAKpD,EAAI,IACToD,KAAK2C,KAAO,GACZ3C,KAAK4C,WAAY,EACjB5C,KAAK6C,WAAa7C,KAAK2C,KAGvB3C,KAAK8C,MAAQ,CAACC,IAAK,GAAKC,IAAK,GAC7BhD,KAAKiD,SAAW,CAACF,IAAK,EAAKC,IAAK,GAChChD,KAAKJ,MAAQ,CAACjD,EAAG,EAAKC,EAAG,GACzBoD,KAAKkD,OAAS,GAEdlD,KAAKmB,UAAY,GACjBnB,KAAKH,MAAQ,QACbG,KAAKkB,SAAW,IAChBlB,KAAKmD,UAAW,EAChBnD,KAAKe,MAAQ,IACbf,KAAKoD,cAAgB,EACrBpD,KAAKqD,SAAW,EAEhBrD,KAAKsD,SAAW,CAACC,GAAG,EAAOC,GAAG,EAAOC,GAAG,GACxCzD,KAAK0D,cAAgB,CAACH,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACrCzD,KAAK2D,gBAAkB,CAACJ,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACzCzD,KAAK4D,WAAa,IAAI9C,EAASd,KAAKe,MAAOf,KAAKkB,wDAMtC2C,GAEV7D,KAAKJ,MAAMhD,IAAMf,KAAKqE,IAAIF,KAAK8C,MAAME,KAAOa,EAC5C7D,KAAKJ,MAAMjD,GAAKd,KAAKuE,IAAIJ,KAAK8C,MAAME,KAAOa,EAExChI,KAAKwC,IAAI2B,KAAKJ,MAAMjD,IAAMqD,KAAKqD,WAC7BrD,KAAKJ,MAAMjD,EAAI,EAChBqD,KAAKJ,MAAMjD,GAAKqD,KAAKqD,SAGrBrD,KAAKJ,MAAMjD,EAAIqD,KAAKqD,UAIrBxH,KAAKwC,IAAI2B,KAAKJ,MAAMhD,IAAMoD,KAAKqD,WAC7BrD,KAAKJ,MAAMhD,EAAI,EAChBoD,KAAKJ,MAAMhD,GAAKoD,KAAKqD,SAGrBrD,KAAKJ,MAAMhD,EAAIoD,KAAKqD,kDASrBrD,KAAKrD,IAAMqD,KAAKkD,SACjBlD,KAAKrD,EAAI,KAERqD,KAAKpD,IAAMoD,KAAKkD,SACjBlD,KAAKpD,EAAI,KAERoD,KAAKrD,GAAK,IAAOqD,KAAKkD,SACvBlD,KAAKrD,EAAI,GAERqD,KAAKpD,GAAK,IAAOoD,KAAKkD,SACvBlD,KAAKpD,EAAI,2CAQGyE,GAId,IAFA,IAAI1E,EAAIqD,KAAKrD,EAAId,KAAKuE,IAAIJ,KAAK8C,MAAME,KAAOhD,KAAKkD,OAC7CtG,EAAIoD,KAAKpD,EAAIf,KAAKqE,IAAIF,KAAK8C,MAAME,KAAOhD,KAAKkD,OACzCpE,EAAI,EAAGA,EAAIuC,EAAcvC,IAAK,CAEpC,IAAI/B,EAAKJ,EAAId,KAAKG,eAAe,EAAG,GAChCgB,EAAKJ,EAAIf,KAAKG,eAAe,EAAG,GAEhC8H,EAAa9D,KAAK8C,MAAME,IAAMnH,KAAKG,eAAc,QAAgB,SAElEgE,KAAKmD,UAAYnD,KAAKe,MAAQ,EAC/Bf,KAAKmB,UAAUG,KAAK,IAAI3B,EAAS5C,EAAIC,EAAInB,KAAKE,GAAK+H,EAAY,EAAK,OAAQ,IAAI,IAGhF9D,KAAKmB,UAAUG,KAAK,IAAI3B,EAAS5C,EAAIC,EAAInB,KAAKE,GAAK+H,EAAY,EAAK,MAAO,IAAI,6CAMnF,IAAI,IAAIhF,EAAI,EAAGA,GAAK,EAAGA,IAClBkB,KAAKsD,SAASxE,KACfkB,KAAK0D,cAAc5E,KACnBkB,KAAK2D,gBAAgB7E,GAAGsD,QACrBpC,KAAK0D,cAAc5E,IAAM,IAC1BkB,KAAKsD,SAASxE,IAAK,EACnBkB,KAAK2D,gBAAgB7E,GAAK,8CAOhC,IAAIiE,EAAMlH,KAAKqB,KAAK8C,KAAKJ,MAAMjD,EAAIqD,KAAKJ,MAAMjD,EAAIqD,KAAKJ,MAAMhD,EAAIoD,KAAKJ,MAAMhD,GACxEmH,EAAQlI,KAAKuB,KAAK4C,KAAKJ,MAAMhD,EAAImG,GAClC/C,KAAKJ,MAAMjD,EAAI,IAChBoH,IAAU,GAETA,EAAQ,IACTA,GAASlI,KAAKC,KAEhBkE,KAAKiD,SAASF,IAAMA,EACpB/C,KAAKiD,SAASD,IAAMe,mCAOpB/D,KAAKgE,gBACLhE,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EACrBoD,KAAKiE,iBACLjE,KAAKkE,gBAEFlE,KAAK4C,YACN5C,KAAK6C,aACF7C,KAAK6C,YAAc,IACjB7C,KAAKsD,SAAS,GACftD,KAAK6C,WAAa7C,KAAK2C,KAAO,EAG9B3C,KAAK6C,WAAa7C,KAAK2C,KAEzB3C,KAAK4C,WAAY,KAIjB5C,KAAKmD,UAAYnD,KAAKe,MAAQf,KAAKkB,WACrClB,KAAKoD,gBAAkB,EAEG,IAAvBpD,KAAKoD,gBACNpD,KAAKe,QACLf,KAAK4D,WAAW7C,MAAQf,KAAKe,QAKjC,IAAI,IAAIS,EAAI,EAAGA,EAAIxB,KAAKmB,UAAUpC,OAAQyC,IACxCxB,KAAKmB,UAAUK,GAAGC,SACfzB,KAAKmB,UAAUK,GAAG1B,MAAQ,GAE3BE,KAAKmB,UAAUO,OAAOF,EAAG,GAG7BxB,KAAK4D,WAAWnC,4CAGPnB,GACTA,EAAIC,OACJD,EAAIE,UAAY,UAChBF,EAAIsB,YAAc,GAClBtB,EAAIG,YACJH,EAAII,IAAIV,KAAKrD,EAAGqD,KAAKpD,EAAiB,IAAdoD,KAAKkD,OAAc,EAAGrH,KAAKC,KACnDwE,EAAIK,YACJL,EAAIM,OACJN,EAAIO,uDAGesB,EAAMC,GAEvBpC,KAAK2D,gBAAgBxB,GAAQ,IAAID,EAAe,EADtC,IAATC,EACkD,IAEpC,IAATA,EAC4C,IAGC,IANaA,EAAMC,gDAUrDD,EAAMgC,GACzBnE,KAAK2D,gBAAgBxB,GAAMC,OAAS+B,iCAO/B7D,GACL,IAAI,IAAIxB,EAAI,EAAGA,EAAI,EAAGA,IACW,KAA5BkB,KAAK2D,gBAAgB7E,IACtBkB,KAAK2D,gBAAgB7E,GAAGmD,OAAO3B,GAGnCA,EAAIC,OACJD,EAAIqB,YAAc3B,KAAKH,MACvBS,EAAIG,YAEJH,EAAI8D,UAAUpE,KAAKrD,EAAGqD,KAAKpD,GAC3B0D,EAAI+D,OAAOrE,KAAK8C,MAAME,KAEtB1C,EAAIgE,OAAO,GAAItE,KAAKkD,QACpB5C,EAAIiE,OAAO,GAAIvE,KAAKkD,QACpB5C,EAAIiE,OAAO,EAAGvE,KAAKkD,OAAS,KAC5B5C,EAAIiE,QAAQ,GAAIvE,KAAKkD,QACrB5C,EAAIiE,OAAO,GAAIvE,KAAKkD,QACpB5C,EAAIkE,SACJlE,EAAIO,UAEJb,KAAKmB,UAAUY,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,KAEfN,KAAKsD,SAAS,IACftD,KAAKyE,WAAWnE,GAElBN,KAAK4D,WAAW3B,OAAO3B,YCxONoE,aAOnB,SAAAA,EAAY/H,EAAGC,EAAG+H,EAAMxH,GAAYoB,EAAAyB,KAAA0E,GAClC1E,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAK4E,WAAY,EAEdD,EAAO,IACRA,EAAO,GAET3E,KAAK2E,KAAOA,EACZ3E,KAAKkD,OAASyB,EACd3E,KAAK6E,YAAc,GACnB7E,KAAK8E,gBACL9E,KAAK7C,UAAYA,EACjB6C,KAAKiD,SAAW,CAACtG,EAAG,EAAKC,EAAG,GAC5BoD,KAAK+D,MAAQ,GAEU,IAApB/D,KAAK7C,UACN6C,KAAK+E,eAGL/E,KAAKgF,oEASP,IAAIjC,EAAMlH,KAAKO,UAAU,EAAG,IAAM4D,KAAK2E,KACpC3E,KAAKrD,EAAI,EACVqD,KAAKiD,SAAStG,EAAId,KAAKG,cAAc,EAAK+G,GAEpC/C,KAAKrD,EAAI,IAAOqD,KAAKkD,OAC3BlD,KAAKiD,SAAStG,GAAKd,KAAKG,cAAc,EAAK+G,GAG3C/C,KAAKiD,SAAStG,EAAId,KAAKG,eAAe+G,EAAKA,GAE1C/C,KAAKpD,EAAI,EACVoD,KAAKiD,SAASrG,EAAIf,KAAKG,cAAc,EAAK+G,GAEnC/C,KAAKpD,EAAI,IAAOoD,KAAKkD,OAC5BlD,KAAKiD,SAASrG,GAAKf,KAAKG,cAAc,EAAK+G,GAG3C/C,KAAKiD,SAASrG,EAAIf,KAAKG,eAAe+G,EAAKA,2CAc7C,IANA,IAIIpG,EACAC,EAHAmH,EAAQlI,KAAKC,IAFF,GAGXmJ,EAAejF,KAAKkD,OAGhBpE,EAAI,EAAGA,EANA,GAMcA,IACxBjD,KAAKO,UAAU,EAAG,KAAO,KAC1B6I,EAAepJ,KAAKG,cAA4B,GAAdgE,KAAKkD,OAAelD,KAAKkD,SAE7DvG,EAAId,KAAKqE,IAAIpB,EAAIiF,GAASkB,EAC1BrI,GAAKf,KAAKuE,IAAItB,EAAIiF,GAASkB,EAC3BjF,KAAK6E,YAAYvD,KAAK,CAAC3E,EAAGA,EAAGC,EAAGA,+CASlC,IAAImG,EAAMlH,KAAKO,UAAU,EAAG,IAAM4D,KAAK2E,KAEvC3E,KAAKiD,SAAStG,EAAId,KAAKqE,IAAIF,KAAK7C,WAAa4F,EAC7C/C,KAAKiD,SAASrG,GAAKf,KAAKuE,IAAIJ,KAAK7C,WAAa4F,0CAO3C/C,KAAKrD,GAAK,IAAO,IAAMqD,KAAKkD,OAC7BlD,KAAKrD,GAAK,IAAMqD,KAAKkD,OAEflD,KAAKrD,IAAM,IAAMqD,KAAKkD,SAC5BlD,KAAKrD,EAAI,IAAO,IAAMqD,KAAKkD,QAE1BlD,KAAKpD,GAAK,IAAO,IAAMoD,KAAKkD,OAC7BlD,KAAKpD,GAAK,IAAMoD,KAAKkD,OAEflD,KAAKpD,IAAM,IAAMoD,KAAKkD,SAC5BlD,KAAKpD,EAAI,IAAO,IAAMoD,KAAKkD,yCAQ7BlD,KAAKgE,gBACFhE,KAAKiD,SAAStG,EAAI,EACnBqD,KAAK+D,OAAS,IAGd/D,KAAK+D,OAAS,IAEhB/D,KAAKrD,GAAKqD,KAAKiD,SAAStG,EACxBqD,KAAKpD,GAAKoD,KAAKiD,SAASrG,iCAOnBsI,GACLA,EAAQ3E,OACR2E,EAAQvD,YAAc,QACtBuD,EAAQd,UAAUpE,KAAKrD,EAAGqD,KAAKpD,GAC/BsI,EAAQb,OAAOrE,KAAK+D,OACpBmB,EAAQzE,YAERyE,EAAQZ,OAAOtE,KAAK6E,YAAY,GAAGlI,EAAEqD,KAAK6E,YAAY,GAAGjI,GACzD,IAAI,IAAIkC,EAAI,EAAGA,EAAIkB,KAAK6E,YAAY9F,OAAQD,IAC1CoG,EAAQX,OAAOvE,KAAK6E,YAAY/F,GAAGnC,EAAGqD,KAAK6E,YAAY/F,GAAGlC,GAE5DsI,EAAQvE,YACRuE,EAAQV,SACRU,EAAQrE,mBCzISsE,aACnB,SAAAA,EAAYxI,EAAGC,EAAGO,EAAW0C,GAAQtB,EAAAyB,KAAAmF,GACnCnF,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKkD,OAAS,IACdlD,KAAKH,MAAQA,EACV1C,EAAY,IACbA,GAAatB,KAAKC,KAEpBkE,KAAKiD,SAAW,CAACF,IAAK,EAAKC,IAAK7F,GAChC6C,KAAKJ,MAAQ,CAACjD,EAAG,EAAKC,EAAG,GACzBoD,KAAKoF,YAELpF,KAAKmB,UAAY,qDAOHE,GAId,IAFA,IAAI1E,EAAIqD,KAAKrD,EAAId,KAAKuE,IAAIJ,KAAKiD,SAASD,KAAMhD,KAAKkD,OAC/CtG,EAAIoD,KAAKpD,EAAIf,KAAKqE,IAAIF,KAAKiD,SAASD,KAAMhD,KAAKkD,OAC3CpE,EAAI,EAAGA,EAAIuC,EAAcvC,IAAK,CAEpC,IAAI/B,EAAKJ,EAAId,KAAKG,eAAegE,KAAKkD,OAAQlD,KAAKkD,QAC/ClG,EAAKJ,EAAIf,KAAKG,eAAegE,KAAKkD,OAAQlD,KAAKkD,QACnDlD,KAAKmB,UAAUG,KAAK,IAAI3B,EAAS5C,EAAIC,EAAInB,KAAKE,GAAKiE,KAAKiD,SAASD,IAAK,EAAKhD,KAAKH,MAAO,IAAI,yCAQ7FG,KAAKJ,MAAMjD,EAAId,KAAKuE,IAAIJ,KAAKiD,SAASD,KAAOhD,KAAKiD,SAASF,IAC3D/C,KAAKJ,MAAMhD,GAAKf,KAAKqE,IAAIF,KAAKiD,SAASD,KAAOhD,KAAKiD,SAASF,4CAO5D,OAAG/C,KAAKrD,EAAIqD,KAAKkD,QAAU,KAAQlD,KAAKrD,EAAIqD,KAAKkD,QAAU,GAC3DlD,KAAKpD,EAAIoD,KAAKkD,QAAU,KAAQlD,KAAKpD,EAAIoD,KAAKkD,QAAU,iCASnDmC,GACLrF,KAAKuB,gBAAgB1F,KAAKO,UAAU,EAAG,IACvC4D,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EAErB,IAAI,IAAI4E,EAAI,EAAGA,EAAIxB,KAAKmB,UAAUpC,OAAQyC,IACxCxB,KAAKmB,UAAUK,GAAGC,SACfzB,KAAKmB,UAAUK,GAAG1B,MAAQ,GAE3BE,KAAKmB,UAAUO,OAAOF,EAAG,kCASxBlB,GACLA,EAAIC,OACJD,EAAIqB,YAAc3B,KAAKH,MACvBS,EAAIG,YACJH,EAAII,IAAIV,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKkD,OAAQ,EAAGrH,KAAKC,KAC7CwE,EAAIK,YACJL,EAAIkE,SACJlE,EAAIO,UACJb,KAAKmB,UAAUY,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,cCtFtB,SAAAgF,EAAAC,GAA6U,OAA1OD,EAA3E,oBAAAE,QAAA,kBAAAA,OAAAC,SAA2E,SAAAF,GAAoC,cAAAA,GAA+B,SAAAA,GAAoC,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAA9F,UAAA,gBAAA6F,IAAmIA,GAE9T,SAAAI,EAAAJ,GAWf,OATAI,EADA,oBAAAH,QAAA,WAAAF,EAAAE,OAAAC,UACA,SAAAF,GACA,OAAAD,EAAAC,IAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAA9F,UAAA,SAAA4F,EAAAC,KAIAA,GCXe,SAAAK,EAAAC,EAAAC,GACf,OAAAA,GAAsB,WAAPH,EAAOG,IAAA,oBAAAA,ECHP,SAAAD,GACf,YAAAA,EACA,UAAAE,eAAA,6DAGA,OAAAF,EDESG,CAAqBH,GAH9BC,EEJe,SAAAG,EAAAC,GAIf,OAHAD,EAAA7G,OAAA+G,eAAA/G,OAAAgH,eAAA,SAAAF,GACA,OAAAA,EAAAG,WAAAjH,OAAAgH,eAAAF,KAEAA,GCFe,SAASI,EAAI1H,EAAA2H,EAAAC,GAiB5B,OAfIF,EADJ,qBAAAG,iBAAAC,IACQD,QAAAC,IAEA,SAAA9H,EAAA2H,EAAAC,GACR,IAAAG,ECNe,SAAAC,EAAAL,GACf,MAAAnH,OAAAM,UAAAmH,eAAAf,KAAAc,EAAAL,IAEA,QADAK,EAAaX,EAAcW,MAI3B,OAAAA,EDAiBE,CAAalI,EAAA2H,GAC9B,GAAAI,EAAA,CACA,IAAAI,EAAA3H,OAAA4H,yBAAAL,EAAAJ,GAEA,OAAAQ,EAAAL,IACAK,EAAAL,IAAAZ,KAAAU,GAGAO,EAAAE,SAIarI,EAAA2H,EAAAC,GAAA5H,GEnBE,SAAAsI,EAAAhB,EAAAiB,GAMf,OALAD,EAAA9H,OAAA+G,gBAAA,SAAAD,EAAAiB,GAEA,OADAjB,EAAAG,UAAAc,EACAjB,IAGAA,EAAAiB,GCLe,SAAAC,EAAAC,EAAAC,GACf,uBAAAA,GAAA,OAAAA,EACA,UAAA5I,UAAA,sDAGA2I,EAAA3H,UAAAN,OAAAmI,OAAAD,KAAA5H,UAAA,CACAgG,YAAA,CACAuB,MAAAI,EACAlI,UAAA,EACAD,cAAA,KAGAoI,GAAkBJ,EAAcG,EAAAC,OCVXE,cACnB,SAAAA,EAAY7K,EAAGC,EAAGO,EAAW0C,GAAO,IAAA4H,EAAA,OAAAlJ,EAAAyB,KAAAwH,IAClCC,EAAA7B,EAAA5F,KAAAiG,EAAAuB,GAAA1B,KAAA9F,KAAMrD,EAAGC,EAAGO,EAAW0C,KAElB6H,WAAa,UAClBD,EAAK7I,OAAS,KACd6I,EAAKE,KAAO,GACZF,EAAKzG,MAAQ,EANqByG,aADFtC,yCAUvBE,GAET,IADA,IAAIuC,EAAW,IACP9I,EAAI,EAAGA,EAAIuG,EAAQtG,OAAQD,IAAK,CACtC,IAAI+I,EAAW,EACZ7H,KAAKpB,SAAWyG,EAAQvG,KACzB+I,EAAW7H,KAAK8H,aAAazC,EAAQvG,KAEpC+I,EAAWD,IACZ5H,KAAKpB,OAASyG,EAAQvG,GACtB8I,EAAWC,GAGC,MAAbD,IACD5H,KAAKpB,OAAS,2CAILA,GACX,IAAI7B,EAAKiD,KAAKrD,EAAIiC,EAAOjC,EACrBK,EAAKgD,KAAKpD,EAAIgC,EAAOhC,EAEzB,OADef,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,yCAI5B4B,GACZ,IAAI7B,EAAKiD,KAAKrD,EAAIiC,EAAOjC,EACrBK,EAAKgD,KAAKpD,EAAIgC,EAAOhC,EACrBiL,EAAWhM,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GACpCG,EAAYtB,KAAKuB,KAAKJ,EAAK6K,GAO/B,OANG9K,EAAK,IACNI,IAAc,GAEZA,EAAY,IACdA,GAAatB,KAAKC,KAEbqB,4CAIP,IAAIA,EAAY6C,KAAK+H,cAAc/H,KAAKpB,QACrCoB,KAAKiD,SAASD,IAAM,IACrBhD,KAAKiD,SAASD,KAAOnH,KAAKC,KAE5B,IAAIkM,EAAQhI,KAAKiD,SAASD,IAAM7F,EAC7B6K,EAAQnM,KAAKE,KACdiM,GAASnM,KAAKC,KAEbkM,GAASnM,KAAKE,KACfiM,GAASnM,KAAKC,KAEbkM,EAAQ,IACThI,KAAKiD,SAASD,KAAOhD,KAAK0H,YAEzBM,EAAQ,IACThI,KAAKiD,SAASD,KAAOhD,KAAK0H,gDAK5B,IAAIO,EAAQ,CAACtL,EAAGqD,KAAKrD,EAAGC,EAAGoD,KAAKpD,GAChCoD,KAAK2H,KAAKrG,KAAK2G,GACZjI,KAAK2H,KAAK5I,OAAS,IAEpBiB,KAAK2H,KAAKjG,OAAO,EAAG,uCAKtB1B,KAAK2H,KAAK5F,QAAQ,SAAAkG,GAChBA,EAAMtL,GAAKd,KAAKG,eAAe,EAAG,GAClCiM,EAAMrL,GAAKf,KAAKG,eAAe,EAAG,oCAI/BqJ,GACa,UAAfrF,KAAKH,MACHwF,EAAQtG,OAAS,GAClBiB,KAAKkI,WAAW7C,GAIlBrF,KAAKpB,OAASyG,EAEbrF,KAAKpB,SACNoB,KAAKmI,kBACL7B,EAAAL,EAAAuB,EAAA9H,WAAA,YAAAM,MAAA8F,KAAA9F,OAEFA,KAAKoI,YACLpI,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EACrBoD,KAAKqI,2CAGA/H,GACLgG,EAAAL,EAAAuB,EAAA9H,WAAA,SAAAM,MAAA8F,KAAA9F,KAAaM,GACbA,EAAIC,OACJD,EAAIqB,YAAc3B,KAAKH,MACvBS,EAAIgI,UAAYtI,KAAKgB,MACrB,IAAI,IAAIlC,EAAI,EAAGA,EAAIkB,KAAK2H,KAAK5I,OAAS,EAAGD,IACvCwB,EAAIG,YACJH,EAAIgE,OAAOtE,KAAK2H,KAAK7I,GAAGnC,EAAGqD,KAAK2H,KAAK7I,GAAGlC,GACxC0D,EAAIiE,OAAOvE,KAAK2H,KAAK7I,EAAI,GAAGnC,EAAGqD,KAAK2H,KAAK7I,EAAI,GAAGlC,GAChD0D,EAAIkE,SACJlE,EAAIgI,WAAa,GAEnBhI,EAAIO,mBChHa0H,cAInB,SAAAA,EAAY5L,EAAGC,GAAG,IAAA6K,EAAA,OAAAlJ,EAAAyB,KAAAuI,IAChBd,EAAA7B,EAAA5F,KAAAiG,EAAAsC,GAAAzC,KAAA9F,QACKrD,EAAIA,EACT8K,EAAK7K,EAAIA,EACT6K,EAAKe,SAAW,EAChBf,EAAK3E,MAAQ,CAACC,IAAK,EAAKC,IAAK,GAC7ByE,EAAK5D,aAAe,GACpB4D,EAAKgB,SAAW,GAEhBhB,EAAKiB,YAAc,GAEnBjB,EAAKvE,OAAS,GAEduE,EAAKkB,aAAe,GAEpBlB,EAAKmB,SAAW,GAChBnB,EAAK5H,MAAQ,GACb4H,EAAKtF,KAAO,GACZsF,EAAKoB,MAAQ,EACbpB,EAAKqB,OAAS,EACdrB,EAAKsB,WACLtB,EAAKuB,WACLvB,EAAK5E,WAAa,EAClB4E,EAAKwB,gBAELxB,EAAKyB,aAAe,GACpBzB,EAAK0B,mBACL1B,EAAK2B,KAAO,GACZ3B,EAAK1C,eA5BW0C,aAJa/E,yCAqC7B,IAAI7C,EACA1D,EAASN,KAAKO,UAAU,EAAG,KAE5BD,EAAS,IACV0D,EAAQ,UACRG,KAAKmC,KAAO,QACZnC,KAAK8I,OAAS,KAER3M,EAAS,IACf0D,EAAQ,SACRG,KAAKmC,KAAO,SACZnC,KAAK8I,OAAS,KAEP3M,EAAS,IAChB0D,EAAQ,OACRG,KAAKmC,KAAO,SACZnC,KAAK8I,OAAS,MAGdjJ,EAAQ,SACRG,KAAK8I,OAAS,IACd9I,KAAKmC,KAAO,SAEdnC,KAAKH,MAAQA,qCAIbG,KAAKqJ,MAAQ,EACI,WAAdrJ,KAAKmC,MAAoC,UAAfnC,KAAKH,OAChCG,KAAKqJ,MAAQ,EACbrJ,KAAK6I,MAAQ7I,KAAKqJ,OAEE,WAAdrJ,KAAKmC,MACXnC,KAAKqJ,MAAQ,GACbrJ,KAAK6I,MAAQ7I,KAAKqJ,QAGlBrJ,KAAKqJ,MAAQ,GACbrJ,KAAK6I,MAAQ7I,KAAKqJ,+CAKH,WAAdrJ,KAAKmC,MAAmC,UAAdnC,KAAKmC,KAChCnC,KAAK6C,WAAahH,KAAKO,UAAU,IAAK,KAElB,WAAd4D,KAAKmC,KACXnC,KAAK6C,WAAahH,KAAKO,UAAU,IAAK,KAGtC4D,KAAK6C,WAAahH,KAAKO,UAAU,IAAK,KAErC4D,KAAKsD,SAAS,KACftD,KAAK6C,WAAahH,KAAKY,MAAMuD,KAAK6C,WAAa,+CAcjD,IANA,IAAIyG,EACAC,EACAC,EACAC,EAGI3K,EAAI,EAAGA,EADG,EACcA,IAAK,CAEnC,IAAIoB,EAAMrE,KAAKqE,IAAIpB,EAAIjD,KAAKE,GAAK,GAC7BqE,EAAMvE,KAAKuE,IAAItB,EAAIjD,KAAKE,GAAK,GAEjCuN,EAAKpJ,EAAMF,KAAK0I,YAChBa,EAAKrJ,EAAMF,KAAKkD,OAEhBsG,GAAMpJ,EAAMJ,KAAK0I,YACjBe,GAAMrJ,EAAMJ,KAAKkD,OACjBlD,KAAKkJ,aAAa5H,KAAK,CAACoI,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,4CAQtDzJ,KAAKoJ,KAAO,CAACzM,EAAGd,KAAKG,cAAc,IAAK,KAAMY,EAAGf,KAAKG,cAAc,IAAK,4CAKzEgE,KAAKJ,MAAMhD,IAAMf,KAAKqE,IAAIF,KAAK8C,MAAME,KAAOhD,KAAK8C,MAAMC,IACvD/C,KAAKJ,MAAMjD,GAAKd,KAAKuE,IAAIJ,KAAK8C,MAAME,KAAOhD,KAAK8C,MAAMC,IAEnDlH,KAAKwC,IAAI2B,KAAKJ,MAAMjD,IAAM,MACxBqD,KAAKJ,MAAMjD,EAAI,EAChBqD,KAAKJ,MAAMjD,GAAK,IAGhBqD,KAAKJ,MAAMjD,EAAI,KAIhBd,KAAKwC,IAAI2B,KAAKJ,MAAMhD,IAAM,MACxBoD,KAAKJ,MAAMhD,EAAI,EAChBoD,KAAKJ,MAAMhD,GAAK,IAGhBoD,KAAKJ,MAAMhD,EAAI,8CAUfoD,KAAKrD,EAAIqD,KAAK2I,cAAgB,KAAQ3I,KAAKJ,MAAMjD,EAAI,GAAOqD,KAAKrD,EAAIqD,KAAK2I,cAAgB,GAAK3I,KAAKJ,MAAMjD,EAAI,KAChHqD,KAAKJ,MAAMjD,IAAM,EACjBqD,KAAK8C,MAAME,KAAOnH,KAAKE,GAAK,EAC5BiE,KAAK8C,MAAMC,IAAM,IAEf/C,KAAKpD,EAAIoD,KAAK2I,cAAgB,KAAQ3I,KAAKJ,MAAMhD,EAAI,GAAOoD,KAAKpD,EAAIoD,KAAK2I,cAAgB,GAAK3I,KAAKJ,MAAMhD,EAAI,KAChHoD,KAAKJ,MAAMhD,IAAM,EACjBoD,KAAK8C,MAAME,KAAOnH,KAAKE,GAAK,EAC5BiE,KAAK8C,MAAMC,IAAM,2CAIL+G,EAAWnN,EAAGC,GAC5B,IAAI,IAAI4E,EAAI,EAAGA,EAAIsI,EAAU/K,OAAQyC,IACnC,GAAG3F,KAAK0B,yBAAyBZ,EAAGC,EAAGoD,KAAK4I,SAAUkB,EAAUtI,GAAG7E,EAAGmN,EAAUtI,GAAG5E,EAAGkN,EAAUtI,GAAG0B,QACjG,OAAO,EAGX,OAAO,qCAIP,IAAI2E,EAAWhM,KAAKyB,YAAY0C,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKoJ,KAAKzM,EAAGqD,KAAKoJ,KAAKxM,GACvEoD,KAAK8C,MAAME,IAAMnH,KAAKwB,OAAOwK,EAAU7H,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKoJ,KAAKzM,EAAGqD,KAAKoJ,KAAKxM,GAC9EoD,KAAK8C,MAAMC,IAAM/C,KAAK6D,aACnBgE,EAAW7H,KAAKkD,SACjBlD,KAAKoJ,KAAO,sCAINjM,GACR6C,KAAK8C,MAAMC,IAAM/C,KAAK6D,aACtB7D,KAAK8C,MAAME,IAAM7F,EACA,KAAd6C,KAAKoJ,OAENpJ,KAAKgJ,WACLhJ,KAAK6I,+CAIKJ,GACZzI,KAAKyI,SAAWA,EAChBzI,KAAKyI,SAASxF,SAAStG,EAAIqD,KAAKJ,MAAMjD,EACtCqD,KAAKyI,SAASxF,SAASrG,EAAIoD,KAAKJ,MAAMhD,0CAItC,IAAIiL,EAAWhM,KAAKyB,YAAY0C,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKyI,SAAS9L,EAAGqD,KAAKyI,SAAS7L,GAC3EO,EAAYtB,KAAKwB,OAAOwK,EAAU7H,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKyI,SAAS9L,EAAGqD,KAAKyI,SAAS7L,GAEjFD,EAAIqD,KAAKrD,EAAId,KAAKuE,IAAIjD,EADd,KACmC0K,EAC3CjL,EAAIoD,KAAKpD,EAAIf,KAAKqE,IAAI/C,EAFd,KAEmC0K,EAC/C7H,KAAKyI,SAAS9L,EAAIA,EAClBqD,KAAKyI,SAAS7L,EAAIA,iDAGGmN,GACrB,IAAI5M,EAAYtB,KAAKa,aAAasD,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKyI,SAAS9L,EAAGqD,KAAKyI,SAAS7L,GAE7EoN,EAAQ7M,EADFtB,KAAKa,aAAasD,KAAKrD,EAAGqD,KAAKpD,EAAGmN,EAAOpN,EAAGoN,EAAOnN,GAG7D,GAAGf,KAAKwC,IAAI2L,GAAS,EAAInO,KAAKE,GAAK,IAAK,CACtC,IAAIkO,EAAY,GAAKjK,KAAKyI,SAAS9D,KACnC3E,KAAKJ,MAAMhD,IAAMf,KAAKqE,IAAIF,KAAK8C,MAAME,KAAOhD,KAAK8C,MAAMC,IACvD/C,KAAKJ,MAAMjD,GAAKd,KAAKuE,IAAIJ,KAAK8C,MAAME,KAAOhD,KAAK8C,MAAMC,IACtD/C,KAAKyI,SAASxF,SAAStG,EAAId,KAAKuE,IAAIjD,GAAa8M,EACjDjK,KAAKyI,SAASxF,SAASrG,GAAKf,KAAKqE,IAAI/C,GAAa8M,EAClDjK,KAAKyI,SAAW,4CAQJpH,GACd,IAAI,IAAIvC,EAAI,EAAGA,EAAIuC,EAAcvC,IAAK,CACpC,IAAIiF,EAAQ/D,KAAKiD,SAASD,IAAMnH,KAAKG,eAAeH,KAAKE,GAAI,GACzDY,EAAIqD,KAAKrD,EAAId,KAAKqE,IAAI6D,GAAS/D,KAAKkD,OACpCtG,EAAIoD,KAAKpD,EAAIf,KAAKuE,IAAI2D,GAAS/D,KAAKkD,OAExClD,KAAKmB,UAAUG,KAAK,IAAI3B,EAAShD,EAAGC,EAAGf,KAAKE,GAAKiE,KAAKiD,SAASD,IAAK,GAAOhD,KAAKiD,SAASF,IAAK/C,KAAKH,MAAO,IAAI,+CAIhGwB,GAGhB,IAFA,IAAI1E,EAAIqD,KAAKyI,SAAS9L,EAClBC,EAAIoD,KAAKyI,SAAS7L,EACdkC,EAAI,EAAGA,EAAIuC,EAAcvC,IAAK,CACpC,IAAIiF,EAAQlI,KAAKG,cAAc,EAAGH,KAAKC,KAEnCiB,EAAKJ,EAAId,KAAKqE,IAAI6D,GAAS/D,KAAKyI,SAASvF,OACzClG,EAAKJ,EAAIf,KAAKuE,IAAI2D,GAAS/D,KAAKyI,SAASvF,OAE7ClD,KAAKmB,UAAUG,KAAK,IAAI3B,EAAS5C,EAAIC,EAAI+G,EAAQlI,KAAKE,GAAK,EAAG,EAAKiE,KAAKH,MAAO,IAAI,6CAKrF,IAAI,IAAIf,EAAI,EAAGA,GAAK,EAAGA,IAClBkB,KAAKsD,SAASxE,KACfkB,KAAK0D,cAAc5E,KAChBkB,KAAK0D,cAAc5E,IAAM,IAC1BkB,KAAKsD,SAASxE,IAAK,qCAUzBkB,KAAKgE,gBACLhE,KAAKK,cACLL,KAAKkE,gBACLoC,EAAAL,EAAAsC,EAAA7I,WAAA,iBAAAM,MAAA8F,KAAA9F,MACGA,KAAK6I,MAAQ7I,KAAKqJ,QACnBrJ,KAAK6I,QACF7I,KAAK6I,OAAS,GACf7I,KAAKgJ,YAGNhJ,KAAK6I,QAAU7I,KAAKqJ,OAAuB,KAAdrJ,KAAKoJ,MACnCpJ,KAAKkK,WAGJlK,KAAK4C,YACN5C,KAAK6C,aACF7C,KAAK6C,YAAc,IACpB7C,KAAKiJ,gBACLjJ,KAAK4C,WAAY,IAGlB5C,KAAKJ,MAAMjD,EAAI,EAChBqD,KAAKwI,UAAY,IAGjBxI,KAAKwI,UAAY,IAEE,KAAlBxI,KAAKyI,WACHzI,KAAKyI,SAAS7D,UACf5E,KAAKyI,SAAW,IAGhBzI,KAAKyI,SAASxF,SAAStG,EAAIqD,KAAKJ,MAAMjD,EACtCqD,KAAKyI,SAASxF,SAASrG,EAAIoD,KAAKJ,MAAMhD,EACtCoD,KAAKmK,gBACLnK,KAAKoK,kBAAkB,KAG3BpK,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EAClBf,KAAKM,SAAW,IACjB6D,KAAKuB,gBAAgB,GAGvB,IAAI,IAAIC,EAAI,EAAGA,EAAIxB,KAAKmB,UAAUpC,OAAQyC,IACxCxB,KAAKmB,UAAUK,GAAGC,SACfzB,KAAKmB,UAAUK,GAAG1B,MAAQ,GAE3BE,KAAKmB,UAAUO,OAAOF,EAAG,kCAQxBlB,GACLA,EAAIC,OACJD,EAAIqB,YAAc3B,KAAKH,MACvBS,EAAI8D,UAAUpE,KAAKrD,EAAGqD,KAAKpD,GAC3B0D,EAAI+D,OAAOrE,KAAKwI,UAChBlI,EAAIG,YACJH,EAAII,IAAI,EAAG,EAAGV,KAAK0I,YAAa,EAAG7M,KAAKC,KACxCwE,EAAIK,YACJL,EAAIkE,SACJlE,EAAIG,YACJH,EAAII,IAAI,EAAG,EAAGV,KAAKkD,OAAQ,EAAGrH,KAAKC,KACnCwE,EAAIK,YACJL,EAAIkE,SACJxE,KAAKkJ,aAAanH,QAAQ,SAAAsI,GACxB/J,EAAIG,YACJH,EAAIgE,OAAO+F,EAAQX,GAAIW,EAAQT,IAC/BtJ,EAAIiE,OAAO8F,EAAQV,GAAIU,EAAQR,IAC/BvJ,EAAIkE,WAENlE,EAAIO,UAEJb,KAAKmB,UAAUY,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,KAEfN,KAAKsD,SAAS,IACfgD,EAAAL,EAAAsC,EAAA7I,WAAA,aAAAM,MAAA8F,KAAA9F,KAAiBM,YChWFgK,aACpB,SAAAA,EAAY3N,EAAGC,EAAGuF,GAAO5D,EAAAyB,KAAAsK,GACxBtK,KAAKuK,IAAM,CAAC5N,EAAGA,EAAGC,EAAGA,GACrBoD,KAAKmC,KAAOA,EACZnC,KAAKkD,OAAS,GACdlD,KAAKH,MAAQ,MACbG,KAAKoC,MAAQ,EACbpC,KAAKkJ,aAAe,GACpBlJ,KAAKwK,YACLxK,KAAKyK,0DAIL,OAAQzK,KAAKmC,MAEX,KAAK,EAEJnC,KAAKoC,MAAQ,IACb,MAED,KAAK,EAEJpC,KAAKoC,MAAQ,KACb,MAED,KAAK,EAEJpC,KAAKoC,MAAQ,KACbpC,KAAKH,MAAQ,+CAOhB,OAAQG,KAAKmC,MACZ,KAAK,EACJnC,KAAKmJ,+DAeP,IALA,IAAIG,EACAC,EACAC,EACAC,EAEI3K,EAAI,EAAGA,EADG,EACcA,IAAK,CAEpC,IAAIoB,EAAMrE,KAAKqE,IAAIpB,EAAIjD,KAAKE,GAAK,GAC7BqE,EAAMvE,KAAKuE,IAAItB,EAAIjD,KAAKE,GAAK,GAEjCuN,EAAKpJ,EAAMF,KAAKkD,OAChBqG,GAAMrJ,EAAMF,KAAKkD,OAEjBsG,GAAMpJ,EAAMJ,KAAKkD,OACjBuG,EAAKrJ,EAAMJ,KAAKkD,OAChBlD,KAAKkJ,aAAa5H,KAAK,CAACoI,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,oCAO/CnJ,GACLA,EAAIC,OACJD,EAAIqB,YAAc3B,KAAKH,MACvBS,EAAI8D,UAAUpE,KAAKuK,IAAI5N,EAAGqD,KAAKuK,IAAI3N,GACnC0D,EAAIG,YACJH,EAAII,IAAI,EAAG,EAAGV,KAAKkD,OAAQ,EAAGrH,KAAKC,KACnCwE,EAAIK,YACJL,EAAIkE,SACLlE,EAAIG,YACJH,EAAIoK,KAAoB,KAAd1K,KAAKkD,OAA8B,KAAdlD,KAAKkD,OAA6B,IAAdlD,KAAKkD,OAA6B,IAAdlD,KAAKkD,QAC5E5C,EAAIK,YACJL,EAAIkE,SACHxE,KAAKkJ,aAAanH,QAAQ,SAAAsI,GACxB/J,EAAIG,YACJH,EAAIgE,OAAO+F,EAAQX,GAAIW,EAAQT,IAC/BtJ,EAAIiE,OAAO8F,EAAQV,GAAIU,EAAQR,IAC/BvJ,EAAIkE,WAENlE,EAAIO,mBCvFc8J,aACnB,SAAAA,EAAYhO,EAAGC,EAAG0F,EAAQH,GAAO5D,EAAAyB,KAAA2K,GAC/B3K,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKmC,KAAOA,EACZnC,KAAKsC,OAAS,GACdtC,KAAKF,KAAO,EACZE,KAAK4K,KAAO,EACZ5K,KAAK6K,aAAavI,GAClBtC,KAAKH,MAAQ,wDAGFyC,GACX,OAAQtC,KAAKmC,MACX,IAAK,OACHnC,KAAKF,KAAO,GACZE,KAAK4K,KAAO,GACZ5K,KAAKsC,OAAS,KAAOA,EACrB,MACF,IAAK,cACHtC,KAAKF,KAAO,GACZE,KAAK4K,KAAO,GACZ5K,KAAKsC,OAASA,oCASlB,GADAtC,KAAKF,OACFE,KAAKF,MAAQ,EACd,OAAO,iCAIJQ,GACLA,EAAIC,OACJD,EAAIE,UAAYR,KAAKH,MACrBS,EAAIiC,KAAOvC,KAAK4K,KAAO,WACvBtK,EAAIkC,SAASxC,KAAKsC,OAAQtC,KAAKrD,EAAGqD,KAAKpD,GACvC0D,EAAIO,mBCzCaiK,aACnB,SAAAA,EAAYnO,EAAGC,EAAGuF,EAAM4I,GAAcxM,EAAAyB,KAAA8K,GACpC9K,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKmC,KAAOA,EACZnC,KAAKgL,KAAOD,2CAGPzK,GACLA,EAAIC,OACJD,EAAIE,UAAY,SAChBF,EAAIiC,KAAO,aACXjC,EAAIsB,YAAc,GAClBtB,EAAIkC,SAASxC,KAAKmC,KAAOnC,KAAKgL,KAAMhL,KAAKrD,EAAGqD,KAAKpD,GACjD0D,EAAIO,mBCdaoK,mBACnB,SAAAA,IAAe1M,EAAAyB,KAAAiL,GAQbjL,KAAKkL,OAAS,GACdlL,KAAKmL,KAAO,IAAIC,MAAM,kBACtBpL,KAAKkL,OAAO5J,KAAKtB,KAAKmL,MACtBnL,KAAKqL,eAAiB,IAAID,MAAM,iBAChCpL,KAAKqL,eAAeC,OAAS,GAC7BtL,KAAKkL,OAAO5J,KAAKtB,KAAKqL,gBACtBrL,KAAKuL,UAAY,IAAIH,MAAM,mBAC3BpL,KAAKuL,UAAUD,OAAS,GACxBtL,KAAKkL,OAAO5J,KAAKtB,KAAKuL,WACtBvL,KAAKwL,cAAgB,IAAIJ,MAAM,uBAC/BpL,KAAKkL,OAAO5J,KAAKtB,KAAKwL,eAEtBxL,KAAKyL,SAAW,IAAIL,MAAM,iBAC1BpL,KAAKkL,OAAO5J,KAAKtB,KAAKyL,UACtBzL,KAAK0L,cAAgB,IAAIN,MAAM,kBAC/BpL,KAAKkL,OAAO5J,KAAKtB,KAAK0L,oEAGLC,GACjB3L,KAAKkL,OAAOnJ,QAAQ,SAAA6J,GAClBA,EAAMN,QAAUK,EACbC,EAAMN,OAAS,IAChBM,EAAMN,OAAS,GAEdM,EAAMN,OAAS,IAChBM,EAAMN,OAAS,oCAMnBtL,KAAKkL,OAAOnJ,QAAQ,SAAA6J,GAClBA,EAAMC,OAAQ,qCAKhB7L,KAAKkL,OAAOnJ,QAAQ,SAAA6J,GAClBA,EAAMC,OAAQ,oCAIVD,GACN,OAAQA,GACN,IAAK,QACH5L,KAAKyL,SAASK,OACd,MACF,IAAK,YACH9L,KAAKqL,eAAeS,OACpB,MACF,IAAK,YACH9L,KAAKuL,UAAUO,OACf,MACF,IAAK,iBACH9L,KAAKwL,cAAcM,OACnB,MACF,IAAK,WACH9L,KAAK0L,cAAcI,OACnB,MACF,IAAK,YACH9L,KAAKmL,KAAKW,kBCvDGC,aAInB,SAAAA,EAAYC,EAAYC,EAAkBC,EAAeC,GAAc5N,EAAAyB,KAAA+L,GACrE/L,KAAKoM,WAAaD,EAElBnM,KAAKqM,OAAS,EACdrM,KAAKsM,aAAe,EACpBtM,KAAKuM,QAAU,IACfvM,KAAKwM,UAAY,IAEjBxM,KAAKyM,aAAe,EAEpBzM,KAAK0M,KAAO,IAAIhK,EAChB1C,KAAK2M,KAAO,GACZ3M,KAAK4M,MAAQ,EAEb5M,KAAK6M,SAAWhR,KAAKO,UAAU4D,KAAKuM,QAAwB,EAAfvM,KAAKuM,SAIlDvM,KAAK8M,YAAa,EAClB9M,KAAK+M,aAAe,IACpB/M,KAAKgN,YAAc,GACnBhN,KAAK8J,UAAY,GACjB9J,KAAKiN,kBACLjN,KAAKmB,UAAY,GAEjBnB,KAAKkN,MAAQ,EACblN,KAAKmN,UAAY,EACjBnN,KAAKoN,MAAQ,EACbpN,KAAKqN,MAAQ,EACbrN,KAAKsN,OAAS,GACdtN,KAAKuN,WAAa,CAACL,MAAO,GAAIE,MAAO,GAAIC,MAAO,IAChDrN,KAAKwN,UAELxN,KAAKyN,eAAiBzN,KAAKqN,MAAQrN,KAAKyM,aAExCzM,KAAK0N,UAAY,GACjB1N,KAAK2N,YAAc,GACnB3N,KAAKsD,SAAW,GAChBtD,KAAK4N,aAAe/R,KAAKO,UAAU4D,KAAKwM,UAA4B,EAAjBxM,KAAKwM,WAExDxM,KAAK6N,UAAW,EAChB7N,KAAK8N,QAAS,EAEd9N,KAAK+N,gBAAkB,IAAI9C,EAG3BjL,KAAKgO,OAAS,CAACC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,GAStH1O,KAAK2O,kBAAoB3C,EACzBhM,KAAKiM,iBAAmBA,EACxBjM,KAAK4O,oBAAsB1C,EAG3BlM,KAAK6O,KAAO7O,KAAK6O,KAAKC,KAAK9O,MAC3BA,KAAK+O,cAAgB/O,KAAK+O,cAAcD,KAAK9O,MAC7CA,KAAKgP,YAAchP,KAAKgP,YAAYF,KAAK9O,MACzCiP,OAAOC,UAAYlP,KAAK+O,cACxBE,OAAOE,QAAUnP,KAAKgP,YAGtBhP,KAAKoP,SAAWC,YAAYrP,KAAK6O,KAAM,GAAG,mDAQ1C7O,KAAK0M,KAAO,IAAIhK,EAChB1C,KAAK2M,KAAO,GAEZ3M,KAAK6M,SAAWhR,KAAKO,UAAU4D,KAAKuM,QAAwB,EAAfvM,KAAKuM,SAClDvM,KAAKsD,SAAW,GAChBtD,KAAK4N,aAAe/R,KAAKO,UAAU4D,KAAKwM,UAA4B,EAAjBxM,KAAKwM,WAIxDxM,KAAK8M,YAAa,EAClB9M,KAAK+M,aAAe,IACpB/M,KAAKgN,YAAc,GACnBhN,KAAK8J,UAAY,GACjB9J,KAAKyM,aAAe,EACpBzM,KAAKiN,kBACLjN,KAAKmB,UAAY,GAEjBnB,KAAKkN,MAAQ,EACblN,KAAKoN,MAAQ,EACbpN,KAAKqN,MAAQ,EACbrN,KAAKyN,eAAiBzN,KAAKqN,MAAQrN,KAAKyM,aAExCzM,KAAK0N,UAAY,GACjB1N,KAAK2N,YAAc,GAEnB3N,KAAK6N,UAAW,EAChB7N,KAAK8N,QAAS,wCAQFwB,GACZA,EAAMC,iBAENvP,KAAKgO,OAAOsB,EAAME,UAAW,EAER,KAAlBF,EAAME,UACJxP,KAAK8N,OACN9N,KAAK8N,QAAS,EAGd9N,KAAK8N,QAAS,GAGG,MAAlBwB,EAAME,SACPxP,KAAKyP,kDAOGH,GACVA,EAAMC,iBAENvP,KAAKgO,OAAOsB,EAAME,UAAW,oCAI7BxP,KAAKuN,WAAWL,MAAQ,IAAIpC,EAA4B,IAAlB9K,KAAKoM,WAAqC,IAAlBpM,KAAKoM,WAAmB,UAAWpM,KAAKkN,OACtGlN,KAAKuN,WAAWH,MAAQ,IAAItC,EAA4B,IAAlB9K,KAAKoM,WAAqC,IAAlBpM,KAAKoM,WAAmB,UAAWpM,KAAKoN,OACtGpN,KAAKuN,WAAWF,MAAQ,IAAIvC,EAA4B,IAAlB9K,KAAKoM,WAAqC,IAAlBpM,KAAKoM,WAAmB,UAAWpM,KAAKqN,kDAQtG,IAAI1Q,EAAIqD,KAAK0M,KAAK/P,EAAId,KAAKuE,IAAIJ,KAAK0M,KAAK5J,MAAME,KAAMhD,KAAK0M,KAAKxJ,OAAS,IACpEtG,EAAIoD,KAAK0M,KAAK9P,EAAIf,KAAKqE,IAAIF,KAAK0M,KAAK5J,MAAME,KAAMhD,KAAK0M,KAAKxJ,OAAS,IACrElD,KAAK0M,KAAKpJ,SAAS,GACpBtD,KAAKgN,YAAY1L,KAAK,IAAIkG,EAAO7K,EAAGC,EAAGoD,KAAK0M,KAAK5J,MAAME,IAAKhD,KAAK0M,KAAK7M,QAGtEG,KAAKgN,YAAY1L,KAAK,IAAI6D,EAAWxI,EAAGC,EAAGoD,KAAK0M,KAAK5J,MAAME,IAAKhD,KAAK0M,KAAK7M,QAE5EG,KAAK0M,KAAK9J,WAAY,wCAQV8M,EAAKC,EAAIC,GACrB,IAAI7S,EAAK2S,EAAI/S,EAAIgT,EACb3S,EAAK0S,EAAI9S,EAAIgT,EAEb/H,EAAWhM,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GAEpCG,EAAYtB,KAAKuB,KAAKJ,EAAK6K,GAE5B9K,EAAK,IACNI,IAAc,GAGhB,IAAIR,EAAI+S,EAAI/S,EAAId,KAAKuE,IAAIjD,GAAYuS,EAAIxM,OAAS,IAC9CtG,EAAI8S,EAAI9S,EAAIf,KAAKqE,IAAI/C,GAAYuS,EAAIxM,OAAS,IAC/CwM,EAAIpM,SAAS,GACdtD,KAAKgN,YAAY1L,KAAK,IAAIkG,EAAO7K,EAAGC,EAAGO,EAAWuS,EAAI7P,QAGtDG,KAAKgN,YAAY1L,KAAK,IAAI6D,EAAWxI,EAAGC,EAAGO,EAAWuS,EAAI7P,QAE5DG,KAAK+N,gBAAgB8B,QAAQ,SAC7BH,EAAI9M,WAAY,4CAOhB,KAAM5C,KAAK8J,UAAU/K,OAASiB,KAAKyM,cACjCzM,KAAK8P,aAAa,uCAQV3S,GASV,IAPA,IAAIR,EACAC,EACAsG,EACAyB,EAEAoL,EAAa/P,KAAK8J,UAAU/K,OAEzBgR,IAAe/P,KAAK8J,UAAU/K,QAAQ,CAE3C,IAAIiR,GAAY,EACZC,EAAYpU,KAAKO,UAAU,EAAG,GAClCuI,EAAO9I,KAAKG,cAAc,GAAI,IAC9BkH,EAASyB,EAEQ,IAAdsL,GACDtT,EAAId,KAAKG,eAAe,EAAIkH,EAAQlD,KAAKoM,WAAa,EAAIlJ,GAC1DtG,GAAM,EAAIsG,GAGU,IAAd+M,GACNtT,EAAIqD,KAAKoM,WAAa,EAAIlJ,EAC1BtG,EAAIf,KAAKG,eAAe,EAAIkH,EAAQlD,KAAKoM,WAAa,EAAIlJ,IAGtC,IAAd+M,GACNtT,EAAId,KAAKG,eAAe,EAAIkH,EAAQlD,KAAKoM,WAAa,EAAIlJ,GAC1DtG,EAAIoD,KAAKoM,WAAa,EAAIlJ,IAI1BvG,GAAM,EAAIuG,EACVtG,EAAIf,KAAKG,eAAe,EAAIkH,EAAQlD,KAAKoM,WAAa,EAAIlJ,IAG5DlD,KAAK8J,UAAU/H,QAAQ,SAAA0G,GAClB5M,KAAK0B,yBAAyBkL,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,OAAQvG,EAAGC,EAAGsG,KAC9E8M,GAAY,KAGZA,GACFhQ,KAAK8J,UAAUxI,KAAK,IAAIoD,EAAS/H,EAAGC,EAAG+H,EAAMxH,sCAWjD,IALA,IAAIR,EACAC,EAEAmT,EAAa/P,KAAK2M,KAAK5N,OAErBgR,IAAe/P,KAAK2M,KAAK5N,QAAQ,CACrC,IAAIiR,GAAY,EACZC,EAAYpU,KAAKO,UAAU,EAAG,GAEjB,IAAd6T,GACDtT,EAAId,KAAKG,eAAc,GAAa,MACpCY,GAAI,IAGgB,IAAdqT,GACNtT,EAAI,KACJC,EAAIf,KAAKG,eAAc,GAAa,OAGhB,IAAdiU,GACNtT,EAAId,KAAKG,eAAc,GAAa,MACpCY,EAAI,OAIJD,GAAI,GACJC,EAAIf,KAAKG,eAAc,GAAa,OAEtCgE,KAAK8J,UAAU/H,QAAQ,SAAA0G,GAClB5M,KAAK0B,yBAAyBZ,EAAGC,EAAGsG,GAAauF,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,UACnF8M,GAAY,KAGZA,GACFhQ,KAAK2M,KAAKrL,KAAK,IAAIiH,EAAI5L,EAAGC,6CAM9B,IAAID,EAAId,KAAKO,UAA4B,GAAlB4D,KAAKoM,WAAqC,GAAlBpM,KAAKoM,YAChDxP,EAAIf,KAAKO,UAA4B,GAAlB4D,KAAKoM,WAAqC,GAAlBpM,KAAKoM,YAChDjQ,EAASN,KAAKM,SACfA,EAAS,IACV6D,KAAKsD,SAAShC,KAAK,IAAIgJ,EAAQ3N,EAAGC,EAAG,IAE9BT,EAAS,IAChB6D,KAAKsD,SAAShC,KAAK,IAAIgJ,EAAQ3N,EAAGC,EAAG,IAGrCoD,KAAKsD,SAAShC,KAAK,IAAIgJ,EAAQ3N,EAAGC,EAAG,mCAUlCqG,EAAUc,GAKf,MAJ0B,CACtBpH,EAAGsG,EAAStG,EAAId,KAAKqE,IAAI6D,GAASd,EAASrG,EAAIf,KAAKuE,IAAI2D,GACxDnH,EAAGqG,EAAStG,EAAId,KAAKuE,IAAI2D,GAASd,EAASrG,EAAIf,KAAKqE,IAAI6D,8CAU5C0E,EAAUyH,GAE1B,IAAIC,EAAgB1H,EAASxF,SAAStG,EAAIuT,EAAcjN,SAAStG,EAC7DyT,EAAgB3H,EAASxF,SAASrG,EAAIsT,EAAcjN,SAASrG,EAMjE,GAAIuT,GAJQD,EAAcvT,EAAI8L,EAAS9L,GAIXyT,GAHhBF,EAActT,EAAI6L,EAAS7L,IAGc,EAAG,CAGpD,IAAImH,GAASlI,KAAKwU,MAAMH,EAActT,EAAI6L,EAAS7L,EAAGsT,EAAcvT,EAAI8L,EAAS9L,GAG7E2T,EAAK7H,EAAS9D,KACd4L,EAAKL,EAAcvL,KAGnB6L,EAAKxQ,KAAKqE,OAAOoE,EAASxF,SAAUc,GACpC0M,EAAKzQ,KAAKqE,OAAO6L,EAAcjN,SAAUc,GAGzC2M,EAAK,CAAE/T,GAAI6T,EAAG7T,GAAK2T,EAAKC,GAAM,EAAIA,EAAKE,EAAG9T,IAAM2T,EAAKC,GAAK3T,EAAG4T,EAAG5T,GAChE+T,EAAK,CAAEhU,GAAI8T,EAAG9T,GAAK4T,EAAKD,GAAM,EAAIA,EAAKE,EAAG7T,IAAK2T,EAAKC,GAAK3T,EAAG6T,EAAG7T,GAG/DgU,EAAU5Q,KAAKqE,OAAOqM,GAAK3M,GAC3B8M,EAAU7Q,KAAKqE,OAAOsM,GAAK5M,GAG/B0E,EAASxF,SAAStG,EAAIiU,EAAQjU,EAC9B8L,EAASxF,SAASrG,EAAIgU,EAAQhU,EAC9BsT,EAAcjN,SAAStG,EAAIkU,EAAQlU,EACnCuT,EAAcjN,SAASrG,EAAIiU,EAAQjU,4CAIxB8S,EAAKoB,GACpB,IAAIjJ,EAAWhM,KAAKyB,YAAYoS,EAAI/S,EAAG+S,EAAI9S,EAAGkU,EAAWnU,EAAGmU,EAAWlU,GACvE,GAAGiL,EAA+B,EAAnB6H,EAAI/G,aAAmBmI,EAAW5N,OAAS,CACxD,IAAI/F,EAAYtB,KAAKwB,OAAOwK,EAAUiJ,EAAWnU,EAAGmU,EAAWlU,EAAG8S,EAAI/S,EAAG+S,EAAI9S,GAC7E8S,EAAIqB,UAAU5T,GACduS,EAAI1G,WACJ0G,EAAI7G,QAEN,OAAGhB,EAAY6H,EAAIxM,OAAS4N,EAAW5N,2CAM7BiB,GACVnE,KAAKkN,OAAS/I,EACdnE,KAAKuN,WAAWL,MAAMlC,KAAOhL,KAAKkN,sDAOZ8D,GAEtB,IAAIvI,EAAWzI,KAAK8J,UAAUkH,GAC1BrM,EAAO8D,EAAS9D,KAChBhI,EAAI8L,EAAS9L,EACbC,EAAI6L,EAAS7L,EAEjB6L,EAAS7D,WAAY,EAErB5E,KAAK8J,UAAUpI,OAAOsP,EAAK,GAC3BhR,KAAK+N,gBAAgB8B,QAAQ,aAE7B,IAAIoB,EAASpV,KAAKS,MAAM,IAAMqI,GAI9B,GAHA3E,KAAKsN,OAAOhM,KAAK,IAAIqJ,EAAMhO,EAAGC,EAAGqU,EAAQ,SACzCjR,KAAKkR,YAAYD,GAEdtM,GAAQ,GAAI,CAEb,IAAIxI,EAASN,KAAKO,UAAU,EAAG,GAE/B4D,KAAKyM,cAAgBtQ,EAAS,EAC9BwI,GAAQxI,EAKR,IAHA,IAAIgB,EAAYtB,KAAKG,cAAc,EAAGH,KAAKC,KAEvCqV,EAActV,KAAKC,IAAMK,EACrB2C,EAAI,EAAGA,EAAI3C,EAAQ2C,IAAK,CAE9B,IAAIsS,EAAOzU,EAAId,KAAKqE,IAAI/C,GAAawH,EACjC0M,EAAOzU,EAAIf,KAAKuE,IAAIjD,GAAawH,EAErC3E,KAAK8J,UAAUxI,KAAK,IAAIoD,EAAS0M,EAAMC,EAAM1M,EAAMxH,IACnDA,GAAagU,QAIfnR,KAAKyM,uDASOC,EAAMjE,GACpB,IAAI1L,EAAK2P,EAAK/P,EAAI8L,EAAS9L,EACvBK,EAAK0P,EAAK9P,EAAI6L,EAAS7L,EACvBiL,EAAW9K,EAAKA,EAAKC,EAAKA,EAC9B,GAAG6K,EAAWhM,KAAKyC,IAAImK,EAASvF,OAASwJ,EAAKxJ,OAAQ,GACpD,OAAO,EAET,GAAGwJ,EAAKjE,WAAaA,EAArB,CAGA,GAAGZ,EAAWhM,KAAKyC,IAAIoO,EAAK/D,aAAeF,EAASvF,OAAQ,GAAI,CAC9D,IAAI/F,EAAYtB,KAAKwB,OAAOwK,EAAUY,EAAS9L,EAAG8L,EAAS7L,EAAG8P,EAAK/P,EAAG+P,EAAK9P,GAC3E8P,EAAKqE,UAAU5T,IACG,WAAduP,EAAKvK,MAAmC,UAAduK,EAAKvK,OAAqBsG,EAASvF,OAASwJ,EAAK9D,UAA8B,KAAlB8D,EAAKjE,SAC9FiE,EAAK4E,cAAc7I,GAGZZ,EAAWhM,KAAKyC,IAAIoO,EAAK9D,SAAWH,EAASvF,OAAQ,KAExDwJ,EAAK9J,WACP5C,KAAKuR,cAAc7E,EAAMjE,EAAS9L,EAAG8L,EAAS7L,IAIpD,OAAO,mCAQDD,EAAGC,EAAGiD,GAKZ,IAJA,IAAIwB,EAAexF,KAAKO,UAAU,GAAI,IAClC4G,EAAMnH,KAAKG,cAAc,EAAGH,KAAKC,KACjC8D,EAAQ/D,KAAKO,UAAU,EAAE,GACzB0D,EAAOjE,KAAKO,UAAU,GAAI,IACtB0C,EAAI,EAAGA,EAAIuC,EAAcvC,IAC5BjD,KAAKM,SAAW,KACjB6G,EAAMnH,KAAKG,cAAc,EAAGH,KAAKC,MAEnCkE,KAAKmB,UAAUG,KAAK,IAAI3B,EAAShD,EAAGC,EAAGf,KAAKE,GAAKiH,EAAKpD,EAAOC,EAAOC,GAAM,uCAQnE,IAAA2H,EAAAzH,KAELrD,EAAId,KAAKG,cAAc,IAAK,KAC5BY,EAAIf,KAAKG,cAAc,IAAK,KAG5BgU,GAAY,EAEhB,GACKA,IACDrT,EAAId,KAAKG,cAAc,IAAK,KAC5BY,EAAIf,KAAKG,cAAc,IAAK,KAC5BgU,GAAY,GAGdhQ,KAAK2M,KAAK5K,QAAQ,SAAA2N,GACb7T,KAAK0B,yBAAyBZ,EAAGC,EAAG6K,EAAKiF,KAAKxJ,OAAQwM,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAIxM,OAAS,OAClF8M,GAAY,KAGhBhQ,KAAK8J,UAAU/H,QAAQ,SAAA0G,GAElB5M,KAAK0B,yBAAyBZ,EAAGC,EAAG6K,EAAKiF,KAAKxJ,OAAQuF,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,OAjBjF,MAkBP8M,GAAY,KAGhBhQ,KAAKgN,YAAYjL,QAAQ,SAAA+O,GAEpBjV,KAAK0B,yBAAyBuT,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAW5N,OAAQvG,EAAGC,EAAG6K,EAAKiF,KAAKxJ,OAvBvF,MAwBP8M,GAAY,WAGVA,GAERhQ,KAAKwR,QAAQxR,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAGoD,KAAK0M,KAAK7M,OACjDG,KAAKwR,QAAQ7U,EAAGC,EAAGoD,KAAK0M,KAAK7M,OAC7BG,KAAK+N,gBAAgB8B,QAAQ,YAC7B7P,KAAK0M,KAAK/P,EAAIA,EACdqD,KAAK0M,KAAK9P,EAAIA,EAEdoD,KAAK0M,KAAK9M,MAAMjD,EAAI,EACpBqD,KAAK0M,KAAK9M,MAAMhD,EAAI,oCAOpBoD,KAAK8M,YAAa,EAClB9M,KAAKoN,QACLpN,KAAKuN,WAAWH,MAAMpC,KAAOhL,KAAKoN,MAC/BpN,KAAKoN,OAAS,EACfpN,KAAK0M,KAAO,IAAIhK,GAGhB1C,KAAK6N,UAAW,EAGhB7N,KAAK+N,gBAAgB8B,QAAQ,iDAOtB4B,GACT,IAAI/B,EAAM1P,KAAK2M,KAAK8E,GACpBzR,KAAKkR,YAAYxB,EAAI5G,QACrB9I,KAAKsN,OAAOhM,KAAK,IAAIqJ,EAAM+E,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAI5G,OAAQ,SACnC,MAAf4G,EAAI5G,SACL9I,KAAKoN,QACLpN,KAAKuN,WAAWH,MAAMpC,KAAOhL,KAAKoN,MAClCpN,KAAK0R,WAAW,WAElB1R,KAAK4M,QAEL5M,KAAK2M,KAAKjL,OAAO+P,EAAO,GACxBzR,KAAK+N,gBAAgB8B,QAAQ,2DAI1B7P,KAAKkN,MAAQlN,KAAKmN,YACnBnN,KAAKmN,UAAYnN,KAAKkN,iDAIR/K,GAChB,IAAIG,EAAS,GACb,OAAQH,GACN,KAAK,EACHG,EAAS,gBACT,MACF,KAAK,EACHA,EAAS,aACT,MACF,KAAK,EACHA,EAAS,cAKbtC,KAAK0R,WAAWpP,sCAGPA,GACT,IAAInG,EAASN,KAAKO,UAAU,GAAI,IAC7B4D,KAAK0M,KAAK9P,EAAI,IACfoD,KAAKsN,OAAOhM,KAAK,IAAIqJ,EAAM3K,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAIT,EAAQmG,EAAQ,SAGtEtC,KAAKsN,OAAOhM,KAAK,IAAIqJ,EAAM3K,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAIT,EAAQmG,EAAQ,2CAQxEtC,KAAK2R,WAAWnR,UAAY,QAC5BR,KAAK2R,WAAWhQ,YAAc,OAC9B3B,KAAK2R,WAAW7P,SAAS,EAAG,EAAG9B,KAAKoM,WAAY,KAChDpM,KAAK2R,WAAWpP,KAAO,uBACvBvC,KAAK2R,WAAWC,WAAW,UAAY5R,KAAKoN,MAAO,GAAI,IACvDpN,KAAK2R,WAAWC,WAAW,UAAY5R,KAAKqN,MAAO,IAAK,IACxDrN,KAAK2R,WAAWC,WAAW,UAAY5R,KAAKkN,MAAO,IAAK,IACxDlN,KAAK2R,WAAWC,WAAW,cAAgB5R,KAAK0N,UAAW,IAAK,IAChE1N,KAAK2R,WAAWC,WAAW,cAAgB5R,KAAKmN,UAAY,IAAK,IACjEnN,KAAK2R,WAAWpP,KAAO,uBACvBvC,KAAK2R,WAAWC,WAAW,aAAc,GAAI,IAC7C5R,KAAK2R,WAAWC,WAAW,8FAA+F,IAAK,qCAQ/H,IAFO,IAAAC,EAAA7R,KAEClB,EAAI,EAAGA,EAAIkB,KAAKsN,OAAOvO,OAAQD,IAClCkB,KAAKsN,OAAOxO,GAAG2C,UAEhBzB,KAAKsN,OAAO5L,OAAO5C,EAAG,GAI1BkB,KAAK0M,KAAKjL,SAEVzB,KAAK2M,KAAK5K,QAAQ,SAAA2N,GAChB,IAAiB,UAAbA,EAAIvN,MAAiC,UAAbuN,EAAIvN,OAAkC,KAAbuN,EAAItG,MACpDyI,EAAKvO,SAASvE,OAAS,EAAG,CAC3B,IAAI5C,EAASN,KAAKO,UAAU,EAAGyV,EAAKvO,SAASvE,OAAS,GACtD2Q,EAAItG,KAAO,CAACzM,EAAGkV,EAAKvO,SAASnH,GAAQoO,IAAI5N,EAAGC,EAAGiV,EAAKvO,SAASnH,GAAQoO,IAAI3N,GAG7E8S,EAAIjO,SACgB,KAAjBiO,EAAIjH,UAAoBoJ,EAAK/E,YAC9B4C,EAAIoC,uBAAuBD,EAAKnF,QAGjC1M,KAAK8J,UAAU/K,OAASiB,KAAKyN,iBAC9BzN,KAAK8P,aAAa,GAClB9P,KAAKyM,gBAGPzM,KAAK8J,UAAU/H,QAAQ,SAAA0G,GACrBA,EAAShH,WAEX,IAAIsQ,EAAOlW,KAAKW,KAAKwD,KAAKqN,MAAQrN,KAAKqN,MAAQ,GAAK,EAEpD,GAAkB,IAAfrN,KAAK4M,OAAe5M,KAAK4M,MAASmF,IAAU,EAAG,CAChD/R,KAAKqN,QACLrN,KAAKuN,WAAWF,MAAMrC,KAAOhL,KAAKqN,MAClCrN,KAAKsN,OAAOhM,KAAK,IAAIqJ,EAAM,IAAK,IAAK,SAAW3K,KAAKqN,MAAO,gBAE5DrN,KAAKoN,QACLpN,KAAKuN,WAAWH,MAAMpC,KAAOhL,KAAKoN,MAClCpN,KAAK0R,WAAW,UAChB1R,KAAK0N,WAAa1N,KAAKqN,MACvB,IAAI2E,EAAgB,EAAIhS,KAAKqN,MAC1B2E,EAAgBhS,KAAKsM,eACtB0F,EAAgBhS,KAAKsM,cAEvB,IAAI2F,EAAaD,EAAgBhS,KAAK8J,UAAU/K,OAChD,GAAGiB,KAAK8J,UAAU/K,OAASiT,EACzB,IAAI,IAAIlT,EAAI,EAAGA,EAAImT,EAAYnT,IAC7BkB,KAAK8P,aAAa,GAClB9P,KAAKyM,eAGTzM,KAAKyN,eAAiB,EAAIzN,KAAKqN,MAC5BrN,KAAKyN,eAAiBzN,KAAKsM,eAC5BtM,KAAKyN,eAAiBzN,KAAKsM,cAK/B,GAAGtM,KAAK6M,SAAW,GAAK7M,KAAK2M,KAAK5N,OAASiB,KAAKqM,SAC9CrM,KAAK6M,WACF7M,KAAK6M,UAAY,GAAG,CACrB7M,KAAKkS,SACL,IAAIC,EAAWnS,KAAK2M,KAAK5N,OAASiB,KAAKqN,MACvCrN,KAAK6M,SAAWhR,KAAKO,UAAU4D,KAAKuM,QAAU4F,EAAwB,EAAfnS,KAAKuM,QAAc4F,GAK9E,GADAnS,KAAK4N,eACF5N,KAAK4N,cAAgB,EAAG,CACzB5N,KAAKoS,gBACL,IAAIC,EAAgC,EAAvBrS,KAAKsD,SAASvE,OAAaiB,KAAKqN,MAC7CrN,KAAK4N,aAAe/R,KAAKO,UAAU4D,KAAKwM,UAAY6F,EAAwB,EAAjBrS,KAAKwM,UAAgB6F,GAI/ErS,KAAK8M,aACN9M,KAAK+M,eACF/M,KAAK+M,cAAgB,IAEtB/M,KAAK+M,aAAe,IACpB/M,KAAK8M,YAAa,IAKtB,IAAI,IAAIhO,EAAI,EAAGA,EAAIkB,KAAK8J,UAAU/K,OAAQD,IACxC,IAAI,IAAI0C,EAAI1C,EAAI,EAAG0C,EAAIxB,KAAK8J,UAAU/K,OAAQyC,IAAK,CACjD,IAAIiH,EAAWzI,KAAK8J,UAAUhL,GAC1BoR,EAAgBlQ,KAAK8J,UAAUtI,GAChC3F,KAAK0B,yBAAyBkL,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,OAAQgN,EAAcvT,EAAGuT,EAActT,EAAGsT,EAAchN,UACxHlD,KAAKsS,kBAAkB7J,EAAUyH,GACjClQ,KAAK+N,gBAAgB8B,QAAQ,cAMnC,IAAI,IAAI/Q,EAAI,EAAGA,EAAIkB,KAAKgN,YAAYjO,OAAQD,IAC1C,IAAI,IAAI0C,EAAI,EAAGA,EAAIxB,KAAK8J,UAAU/K,OAAQyC,IAAK,CAC7C,IAAIsP,EAAa9Q,KAAKgN,YAAYlO,GAC9B2J,EAAWzI,KAAK8J,UAAUtI,GAC9B,GAAG3F,KAAK0B,yBAAyBuT,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAW5N,OAAQuF,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,QAAS,CACxHlD,KAAKwR,QAAQV,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAWjR,OAEpDG,KAAKgN,YAAYtL,OAAO5C,EAAG,GAC3BkB,KAAKwR,QAAQ/I,EAAS9L,EAAG8L,EAAS7L,EAAG,SACrCoD,KAAKuS,wBAAwB/Q,GAC7B,OAKFxB,KAAK8M,YAEP9M,KAAK8J,UAAU/H,QAAQ,SAAA0G,GAClB5M,KAAK0B,yBAAyBsU,EAAKnF,KAAK/P,EAAGkV,EAAKnF,KAAK9P,EAAGiV,EAAKnF,KAAKxJ,OAAQuF,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,UAC5G2O,EAAKL,QAAQK,EAAKnF,KAAK/P,EAAGkV,EAAKnF,KAAK9P,EAAGiV,EAAKnF,KAAK7M,OACjDgS,EAAK9D,gBAAgB8B,QAAQ,kBAC7BgC,EAAKW,aAMX,IAAI,IAAI1T,EAAI,EAAGA,EAAIkB,KAAKsD,SAASvE,OAAQD,IAAK,CAC5C,IAAI2T,EAAUzS,KAAKsD,SAASxE,GAC5B,GAAGjD,KAAK0B,yBAAyByC,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAGoD,KAAK0M,KAAKxJ,OAAQuP,EAAQlI,IAAI5N,EAAG8V,EAAQlI,IAAI3N,EAAG6V,EAAQvP,QAAS,CAC1HlD,KAAKwR,QAAQxR,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAGoD,KAAK0M,KAAK7M,OACjDG,KAAK0M,KAAKpJ,SAASmP,EAAQtQ,OAAQ,EAChCnC,KAAK0M,KAAKhJ,cAAc+O,EAAQtQ,MAAQ,EACzCnC,KAAK0M,KAAKgG,qBAAqBD,EAAQtQ,KAAMsQ,EAAQrQ,OAGrDpC,KAAK0M,KAAKiG,qBAAqBF,EAAQtQ,KAAMsQ,EAAQrQ,OAEvDpC,KAAK0M,KAAKhJ,cAAc+O,EAAQtQ,OAASsQ,EAAQrQ,MACjDpC,KAAK4S,kBAAkBH,EAAQtQ,MACX,IAAjBsQ,EAAQtQ,OACTnC,KAAK0M,KAAK9J,WAAY,EACtB5C,KAAK0M,KAAK7J,WAAa7C,KAAK0M,KAAK/J,KAAO,GAG1C3C,KAAKsD,SAAS5B,OAAO5C,EAAG,GACxB,MAEF,IAAI,IAAI0C,EAAI,EAAGA,EAAIxB,KAAK2M,KAAK5N,OAAQyC,IAAK,CACxC,IAAIkO,EAAM1P,KAAK2M,KAAKnL,GACpB,GAAG3F,KAAK0B,yBAAyBmS,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAIxM,OAAQuP,EAAQlI,IAAI5N,EAAG8V,EAAQlI,IAAI3N,EAAG6V,EAAQvP,QAAS,CACxGlD,KAAKwR,QAAQ9B,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAI7P,OAC/B6P,EAAIpM,SAASmP,EAAQtQ,OAAQ,EAC7BuN,EAAIhM,cAAc+O,EAAQtQ,OAASsQ,EAAQrQ,MACvB,IAAjBqQ,EAAQtQ,OACTuN,EAAI9M,WAAY,EAChB8M,EAAIzG,iBAGNjJ,KAAKsD,SAAS5B,OAAO5C,EAAG,GACxB,QAKN,IAAI,IAAIA,EAAI,EAAGA,EAAIkB,KAAKsD,SAASvE,OAAQD,IACvC,IAAI,IAAI+T,EAAI,EAAGA,EAAI7S,KAAK8J,UAAU/K,OAAQ8T,IAAK,CAC7C,IAAIJ,EAAUzS,KAAKsD,SAASxE,GACxB2J,EAAWzI,KAAK8J,UAAU+I,GAC9B,GAAGhX,KAAK0B,yBAAyBkL,EAAS9L,EAAG8L,EAAS7L,EAAG6L,EAASvF,OAAQuP,EAAQlI,IAAI5N,EAAG8V,EAAQlI,IAAI3N,EAAG6V,EAAQvP,QAAS,CACvHlD,KAAKwR,QAAQiB,EAAQlI,IAAI5N,EAAG8V,EAAQlI,IAAI3N,EAAG6V,EAAQ5S,OAEnDG,KAAKsD,SAAS5B,OAAO5C,EAAG,GACxB,OAKN,IAAI,IAAIA,EAAI,EAAGA,EAAIkB,KAAK2M,KAAK5N,OAAQD,IACnC,IAAI,IAAI0C,EAAI,EAAGA,EAAIxB,KAAK8J,UAAU/K,OAAQyC,IAAK,CAC7C,IAAIkO,EAAM1P,KAAK2M,KAAK7N,GAChB2J,EAAWzI,KAAK8J,UAAUtI,GAC9B,GAAGxB,KAAK8S,gBAAgBpD,EAAKjH,GAAW,CACtCzI,KAAKwR,QAAQ9B,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAI7P,OAC/BG,KAAK+S,WAAWjU,GAChB,OAKN,GAAGkB,KAAK2M,KAAK5N,OAAS,EACpB,IAAI,IAAID,EAAI,EAAGA,EAAIkB,KAAK2M,KAAK5N,OAAQD,IACnC,IAAI,IAAI0C,EAAI1C,EAAI,EAAG0C,EAAIxB,KAAK2M,KAAK5N,OAAQyC,IAAK,CAC5C,IAAIwR,EAAOhT,KAAK2M,KAAK7N,GACjBmU,EAAOjT,KAAK2M,KAAKnL,GACrB,GAAG3F,KAAK0B,yBAAyByV,EAAKrW,EAAGqW,EAAKpW,EAAGoW,EAAKpK,SAAUqK,EAAKtW,EAAGsW,EAAKrW,EAAGqW,EAAKrK,UAAW,CAC5E,WAAdoK,EAAK7Q,MAAmC,UAAd6Q,EAAK7Q,MAAsB6Q,EAAKpQ,WAC5D5C,KAAKuR,cAAcyB,EAAMC,EAAKtW,EAAGsW,EAAKrW,GAEtB,WAAdqW,EAAK9Q,MAAmC,UAAd8Q,EAAK9Q,MAAsB8Q,EAAKrQ,WAC5D5C,KAAKuR,cAAc0B,EAAMD,EAAKrW,EAAGqW,EAAKpW,GAGxC,IAAIoG,EAAMnH,KAAKa,aAAasW,EAAKrW,EAAGqW,EAAKpW,EAAGqW,EAAKtW,EAAGsW,EAAKrW,GAEzDoW,EAAKjC,UAAU/N,EAAMnH,KAAKE,IAE1BkX,EAAKlC,UAAU/N,IAMnBhD,KAAK8M,YACP9M,KAAK2M,KAAK5K,QAAQ,SAAA2N,GACb7T,KAAK0B,yBAAyBsU,EAAKnF,KAAK/P,EAAGkV,EAAKnF,KAAK9P,EAAGiV,EAAKnF,KAAKxJ,OAAQwM,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAIxM,UAC7F2O,EAAKL,QAAQK,EAAKnF,KAAK/P,EAAGkV,EAAKnF,KAAK9P,EAAGiV,EAAKnF,KAAK7M,OACjDgS,EAAK9D,gBAAgB8B,QAAQ,kBAC7BgC,EAAKW,aAMX,IAAI,IAAI1T,EAAI,EAAGA,EAAIkB,KAAKgN,YAAYjO,OAAQD,IAAK,CAC/C,IAAIgS,EAAa9Q,KAAKgN,YAAYlO,GAClC,IAAIkB,KAAK8M,YAAcjR,KAAK0B,yBAAyBuT,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAW5N,OAC1FlD,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAGoD,KAAK0M,KAAKxJ,QAAS,CAC1ClD,KAAK0M,KAAKpJ,SAAS,IACpBtD,KAAKwR,QAAQxR,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAG,WACvCoD,KAAK0M,KAAKpJ,SAAS,IAAK,EACxBtD,KAAK0M,KAAKhJ,cAAc,GAAK,IAG7B1D,KAAKwR,QAAQxR,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,EAAGoD,KAAK0M,KAAK7M,OACjDG,KAAK+N,gBAAgB8B,QAAQ,kBAC7B7P,KAAKwS,WAEPxS,KAAKwR,QAAQV,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAWjR,OAEpDG,KAAKgN,YAAYtL,OAAO5C,EAAG,GAC3B,MAEF,IAAI,IAAI0C,EAAI,EAAGA,EAAIxB,KAAK2M,KAAK5N,OAAQyC,IAAM,CACzC,IAAIkO,EAAM1P,KAAK2M,KAAKnL,GACpB,GAAiB,WAAbkO,EAAIvN,MAAkC,UAAbuN,EAAIvN,MAAqBuN,EAAI7G,QAAU6G,EAAIrG,OAkBnE,GAAIxN,KAAK0B,yBAAyBuT,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAW5N,OAC5EwM,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAIxM,QAAS,CACtBwM,EAAIpM,SAAS,IACdtD,KAAKwR,QAAQ9B,EAAI/S,EAAG+S,EAAI9S,EAAG,WAC3B8S,EAAIpM,SAAS,IAAK,EAClBoM,EAAIhM,cAAc,GAAK,IAGvB1D,KAAKwR,QAAQ9B,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAI7P,OAC/BG,KAAK+S,WAAWvR,GAChBxB,KAAK+N,gBAAgB8B,QAAQ,mBAE/B7P,KAAKwR,QAAQV,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAWjR,OAEpDG,KAAKgN,YAAYtL,OAAO5C,EAAG,GAC3B,YAhCF,GAAGkB,KAAKkT,iBAAiBxD,EAAKoB,GAAa,CACtCpB,EAAIpM,SAAS,IACdtD,KAAKwR,QAAQ9B,EAAI/S,EAAG+S,EAAI9S,EAAG,WAC3B8S,EAAIpM,SAAS,IAAK,EAClBoM,EAAIhM,cAAc,GAAK,IAGvB1D,KAAKwR,QAAQ9B,EAAI/S,EAAG+S,EAAI9S,EAAG8S,EAAI7P,OAC/BG,KAAK+S,WAAWvR,GAChBxB,KAAK+N,gBAAgB8B,QAAQ,mBAE/B7P,KAAKwR,QAAQV,EAAWnU,EAAGmU,EAAWlU,EAAGkU,EAAWjR,OAEpDG,KAAKgN,YAAYtL,OAAO5C,EAAG,GAC3B,QAsCR,IAbGkB,KAAKgO,OAAO,KAAOhO,KAAKgO,OAAO,OAChChO,KAAK0M,KAAK5J,MAAME,KAAO,IACpBhD,KAAK0M,KAAK5J,MAAME,MAAQnH,KAAKC,MAC9BkE,KAAK0M,KAAK5J,MAAME,KAAOnH,KAAKC,OAI7BkE,KAAKgO,OAAO,KAAOhO,KAAKgO,OAAO,OAChChO,KAAK0M,KAAK5J,MAAME,KAAO,IACpBhD,KAAK0M,KAAK5J,MAAME,KAAOnH,KAAKC,MAC7BkE,KAAK0M,KAAK5J,MAAME,KAAOnH,KAAKC,MAG5BkE,KAAK+M,cAAgB,MAAQ/M,KAAK8M,WAGpC,GAFA9M,KAAK0M,KAAKvJ,UAAW,EAElBnD,KAAKgO,OAAO,KAAOhO,KAAK0M,KAAK3L,OAAS,EAAG,CAC1Cf,KAAK0M,KAAKvJ,UAAW,EACrBnD,KAAK0M,KAAK3L,QACVf,KAAK0M,KAAK9I,WAAW7C,MAAQf,KAAK0M,KAAK3L,MACvCf,KAAK0M,KAAKrM,YAAkC,EAAtBL,KAAK0M,KAAK5J,MAAMC,KACtC,IAAI1B,EAAexF,KAAKS,MAAMT,KAAKG,cAAc,EAAG,IACpDgE,KAAK0M,KAAKnL,gBAAgBF,QAGvB,GAAKrB,KAAKgO,OAAO,KAAOhO,KAAKgO,OAAO,IAAM,CAC7ChO,KAAK0M,KAAKrM,YAAYL,KAAK0M,KAAK5J,MAAMC,KACtC,IAAI1B,EAAexF,KAAKS,MAAMT,KAAKG,cAAc,EAAG,IACpDgE,KAAK0M,KAAKnL,gBAAgBF,GAe9B,IAXGrB,KAAKgO,OAAO,KAAQhO,KAAK0M,KAAK9J,WAAc5C,KAAK8M,aAClD9M,KAAKmT,mBACLnT,KAAK+N,gBAAgB8B,QAAQ,UAG5B7P,KAAKgO,OAAO,KAAOhO,KAAK0N,UAAY,IAAM1N,KAAK8M,YAAmC,KAArB9M,KAAK2N,cACnE3N,KAAKoT,WACLpT,KAAK0N,YACL1N,KAAK2N,gBAGH3N,KAAK8M,WACP,IAAI,IAAIhO,EAAI,EAAGA,EAAIkB,KAAK2M,KAAK5N,OAAQD,IAAK,CACxC,IAAI4Q,EAAM1P,KAAK2M,KAAK7N,GACpB4Q,EAAI7M,aACD6M,EAAI7M,YAAc,IACnB7C,KAAKuR,cAAc7B,EAAK1P,KAAK0M,KAAK/P,EAAGqD,KAAK0M,KAAK9P,GAC/C8S,EAAIzG,iBAMPjJ,KAAK2N,YAAc,KACpB3N,KAAK2N,cACF3N,KAAK2N,aAAe,IACrB3N,KAAK2N,YAAc,KAKvB,IAAI,IAAI7O,EAAI,EAAGA,EAAIkB,KAAKgN,YAAYjO,OAAQD,IAAK,CAC/C,IAAIgS,EAAa9Q,KAAKgN,YAAYlO,GACV,UAArBgS,EAAWjR,MACZiR,EAAWrP,OAAOzB,KAAK2M,MAGvBmE,EAAWrP,OAAOzB,KAAK0M,MAEtBoE,EAAW9M,iBAEZhE,KAAKgN,YAAYtL,OAAO5C,EAAG,GAK/B,IAAI,IAAI0C,EAAI,EAAGA,EAAIxB,KAAKmB,UAAUpC,OAAQyC,IACxCxB,KAAKmB,UAAUK,GAAGC,SACfzB,KAAKmB,UAAUK,GAAG1B,MAAQ,GAE3BE,KAAKmB,UAAUO,OAAOF,EAAG,GAK7BxB,KAAKqT,kDAME,IAAAC,EAAAtT,KAEPA,KAAK2O,kBAAkBnO,UAAY,QACnCR,KAAK2O,kBAAkBhN,YAAc,OACrC3B,KAAK2O,kBAAkBpM,KAAO,uBAE9BvC,KAAK2O,kBAAkB7M,SAAS,EAAE,EAAG9B,KAAKoM,WAAYpM,KAAKoM,YAGxDpM,KAAK8M,aAAe9M,KAAK6N,WAC1B7N,KAAK2O,kBAAkBpO,OACvBP,KAAK2O,kBAAkB/M,YAAc,GACrC5B,KAAK2O,kBAAkBiD,WAAW,aAAc,IAAK,KACrD5R,KAAK2O,kBAAkB9N,WAGzBb,KAAK2M,KAAK5K,QAAQ,SAAA2N,GAChBA,EAAIzN,OAAOqR,EAAK3E,uBAGd3O,KAAK8M,YAAc9M,KAAK+M,cAAgB,MAC1C/M,KAAK0M,KAAKzK,OAAOjC,KAAK2O,mBAGxB3O,KAAK8J,UAAU/H,QAAQ,SAAA0G,GACrBA,EAASxG,OAAOqR,EAAK3E,qBAGvB3O,KAAKgN,YAAYjL,QAAQ,SAAA+O,GACvBA,EAAW7O,OAAOqR,EAAK3E,qBAEzB3O,KAAKsD,SAASvB,QAAQ,SAAAwR,GACpBA,EAAQtR,OAAOqR,EAAK3E,qBAGtB3O,KAAKmB,UAAUY,QAAQ,SAAAC,GACrBA,EAASC,OAAOqR,EAAK3E,qBAEvB3O,KAAKsN,OAAOvL,QAAQ,SAAAyR,GAClBA,EAAMvR,OAAOqR,EAAK3E,qBAEpB3O,KAAKuN,WAAWL,MAAMjL,OAAOjC,KAAK2O,mBAClC3O,KAAKuN,WAAWH,MAAMnL,OAAOjC,KAAK2O,mBAClC3O,KAAKuN,WAAWF,MAAMpL,OAAOjC,KAAK2O,mBAGlC3O,KAAK4O,oBAAoB6E,UAAUzT,KAAKiM,iBAAkB,EAAG,kCAOzDjM,KAAK8N,QAAW9N,KAAK6N,WACvB7N,KAAKyB,SACLzB,KAAKiC,UAEJjC,KAAK6N,WACN7N,KAAK2O,kBAAkBpM,KAAO,aAC9BvC,KAAK2O,kBAAkBnO,UAAY,SACnCR,KAAK2O,kBAAkBnM,SAAS,YAAa,IAAK,KAClDxC,KAAK2O,kBAAkBnM,SAAS,iBAAkB,IAAK,KACvDxC,KAAK4O,oBAAoB6E,UAAUzT,KAAKiM,iBAAkB,EAAG,IAE5DjM,KAAK8N,SACN9N,KAAK2O,kBAAkBpM,KAAO,aAC9BvC,KAAK2O,kBAAkBnO,UAAY,SACnCR,KAAK2O,kBAAkBnM,SAAS,SAAU,IAAK,KAC/CxC,KAAK4O,oBAAoB6E,UAAUzT,KAAKiM,iBAAkB,EAAG,4DCjjC9CyH,aACpB,SAAAA,IAAenV,EAAAyB,KAAA0T,GACd1T,KAAKmM,YAAc,IACnBnM,KAAK2T,UAAY,YACjB3T,KAAK4T,YAAc,EACnB5T,KAAK6T,QAAU,GACf7T,KAAK8T,YAAc,CAAC,QAAS,UAAW,YACxC9T,KAAK+T,cAGL/T,KAAKiM,iBAAmB+H,SAASC,eAAe,UAChDjU,KAAKiM,iBAAiBjL,MAAQhB,KAAKmM,YACnCnM,KAAKiM,iBAAiBhL,OAASjB,KAAKmM,YACpCnM,KAAK2O,kBAAoB3O,KAAKiM,iBAAiBiI,WAAW,MAG1DlU,KAAKmU,mBAAqBH,SAASC,eAAe,UAClDjU,KAAKmU,mBAAmBnT,MAAQhB,KAAKmM,YACrCnM,KAAKmU,mBAAmBlT,OAASjB,KAAKmM,YACtC6H,SAASI,KAAKC,YAAYrU,KAAKmU,oBAC/BnU,KAAK4O,oBAAsB5O,KAAKmU,mBAAmBD,WAAW,MAE9DlU,KAAKiC,OAASjC,KAAKiC,OAAO6M,KAAK9O,MAC/BA,KAAK+O,cAAgB/O,KAAK+O,cAAcD,KAAK9O,MAC7CA,KAAKsU,gBAAkBtU,KAAKsU,gBAAgBxF,KAAK9O,MACjDiP,OAAOsF,YAAcvU,KAAKsU,gBAC1BrF,OAAOC,UAAYlP,KAAK+O,cAExB/O,KAAKoP,SAAWC,YAAYrP,KAAKiC,OAAQ,GAAK,mDAK9C,IADA,IAAIuS,EAAS,GACL1V,EAAI,EAAGA,EAAI,EAAGA,IACrBkB,KAAK6T,QAAQvS,KAAK,CAAC3E,EAAsB,IAAnBqD,KAAKmM,YAAoBvP,EAAGoD,KAAKmM,YAAcqI,EAAQxT,MAA0B,GAAnBhB,KAAKmM,YAAmBlL,OAA2B,GAAnBjB,KAAKmM,cACzHqI,GAAU,0CAIElF,GACbA,EAAMC,iBAEgB,cAAnBvP,KAAK2T,WAEc,KAAlBrE,EAAME,SACRxP,KAAKyU,YAAYzU,KAAK8T,YAAY9T,KAAK4T,cAGnB,KAAlBtE,EAAME,SAAoC,KAAlBF,EAAME,UAChCxP,KAAK4T,cACF5T,KAAK4T,YAAc,IACrB5T,KAAK4T,YAAc5T,KAAK6T,QAAQ9U,OAAS,IAItB,KAAlBuQ,EAAME,SAAoC,KAAlBF,EAAME,UAChCxP,KAAK4T,cACF5T,KAAK4T,aAAe5T,KAAK6T,QAAQ9U,SACnCiB,KAAK4T,YAAc,KAIK,aAAnB5T,KAAK2T,YACZ3T,KAAK2T,UAAY,qDAIHrE,GACfA,EAAMC,iBAGN,IAAI5S,EAAoB,EAAhB2S,EAAMoF,QAAc,EACxB9X,EAAoB,EAAhB0S,EAAMqF,QAAc,EAC5B,GAAsB,cAAnB3U,KAAK2T,UACP,IAAI,IAAI7U,EAAI,EAAGA,EAAIkB,KAAK6T,QAAQ9U,OAAQD,IAAK,CAChCjD,KAAK+B,yBAAyBjB,EAAGC,EAAG,GAAIoD,KAAK6T,QAAQ/U,GAAGnC,EAAGqD,KAAK6T,QAAQ/U,GAAGlC,EAAGoD,KAAK6T,QAAQ/U,GAAGkC,MAAOhB,KAAK6T,QAAQ/U,GAAGmC,SAEhIjB,KAAKyU,YAAY3V,OAIQ,YAAnBkB,KAAK2T,WAGa,aAAnB3T,KAAK2T,YACZ3T,KAAK2T,UAAY,iDAIPiB,GACX,OAAQA,GACP,IAAK,QACL,KAAK,EACJ,IAAI7I,EAAK/L,KAAK2O,kBAAmB3O,KAAKiM,iBAAkBjM,KAAK4O,oBAAqB5O,KAAKmM,aACvFnM,KAAK2T,UAAY,OACjBkB,cAAc7U,KAAKoP,UACnB,MACD,IAAK,UACL,KAAK,EAEJ,MACD,IAAK,WACL,KAAK,EACJpP,KAAK2T,UAAY,+CASnB3T,KAAK2O,kBAAkBnO,UAAY,QACnCR,KAAK2O,kBAAkBpM,KAAO,aAE9BvC,KAAK2O,kBAAkB7M,SAAS,EAAE,EAAG9B,KAAKmM,YAAanM,KAAKmM,aAE5DnM,KAAK2O,kBAAkBpO,OACvBP,KAAK2O,kBAAkBnO,UAAY,OACnC,IAAI,IAAI1B,EAAI,EAAGA,EAAIkB,KAAK6T,QAAQ9U,OAAQD,IACpCkB,KAAK4T,cAAgB9U,EACvBkB,KAAK2O,kBAAkBhN,YAAc,OAGrC3B,KAAK2O,kBAAkBhN,YAAc,OAEtC3B,KAAK2O,kBAAkB9M,WAAW7B,KAAK6T,QAAQ/U,GAAGnC,EAAGqD,KAAK6T,QAAQ/U,GAAGlC,EAAGoD,KAAK6T,QAAQ/U,GAAGkC,MAAOhB,KAAK6T,QAAQ/U,GAAGmC,QAGhHjB,KAAK2O,kBAAkBnM,SAAS,QAA4B,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aACvEnM,KAAK2O,kBAAkBnM,SAAS,UAA8B,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aACzEnM,KAAK2O,kBAAkBnM,SAAS,WAA+B,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aAC1EnM,KAAK2O,kBAAkB9N,UAEvBb,KAAK4O,oBAAoB6E,UAAUzT,KAAKiM,iBAAkB,EAAG,0CAK7DjM,KAAK2O,kBAAkBnO,UAAY,QACnCR,KAAK2O,kBAAkBpM,KAAO,aAE9BvC,KAAK2O,kBAAkB7M,SAAS,EAAE,EAAG9B,KAAKmM,YAAanM,KAAKmM,aAC5DnM,KAAK2O,kBAAkBpO,OACvBP,KAAK2O,kBAAkBnO,UAAY,OACnCR,KAAK2O,kBAAkBnM,SAAS,0BAA8C,GAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aACzFnM,KAAK2O,kBAAkBnM,SAAS,+BAAmD,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aAC9FnM,KAAK2O,kBAAkBnM,SAAS,iCAAqD,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aAChGnM,KAAK2O,kBAAkBnM,SAAS,kBAAsC,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aACjFnM,KAAK2O,kBAAkBnM,SAAS,eAAmC,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aAC9EnM,KAAK2O,kBAAkBnM,SAAS,cAAkC,IAAnBxC,KAAKmM,YAAuC,IAAnBnM,KAAKmM,aAC7EnM,KAAK2O,kBAAkBnM,SAAS,qBAAyC,IAAnBxC,KAAKmM,YAAuC,GAAnBnM,KAAKmM,aACpFnM,KAAK2O,kBAAkB9N,UACvBb,KAAK4O,oBAAoB6E,UAAUzT,KAAKiM,iBAAkB,EAAG,oCAIvC,cAAnBjM,KAAK2T,UACP3T,KAAK8U,WAEqB,aAAnB9U,KAAK2T,WACZ3T,KAAK+U,wBAKR,IAAIrB","file":"static/js/main.5b5247a0.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  let dx = x1 - x2;\r\n  let dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n/** @class Particle\r\n  * class to handle a particle's life\r\n  */\r\nexport default class Particle {\r\n  /** @constructor\r\n    * initialization of a particle\r\n    * @param floats x,y - position of the particle\r\n    * @param float direction - direction the particle will travel\r\n    * @param int speed - velocity of the particle\r\n    * @param string color - color of the particle\r\n    * @param int life - how many iterations the particle will last for\r\n    */\r\n  constructor(x, y, direction, speed, color, life, decay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.life = life;\r\n    this.decay = decay;\r\n    this.color = color;\r\n    this.speed = Math.randomInt(1, speed);\r\n    this.direction = direction;\r\n    this.speedX = Math.cos(direction) * this.speed;\r\n    this.speedY = -Math.sin(direction) * this.speed;\r\n  }\r\n\r\n  updateSpeed() {\r\n    this.speedX = Math.cos(this.direction) * this.speed;\r\n    this.speedY = -Math.sin(this.direction) * this.speed;\r\n  }\r\n\r\n  /** @function update()\r\n    * function to updates the particle if it hasn't hit the decay distance\r\n    */\r\n  update() {\r\n    this.life--;\r\n    if(this.decay && this.speed > 0) {\r\n      this.speed -= 0.05;\r\n      this.updateSpeed();\r\n    }\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n  /** @function render()\r\n    * standard render function\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, 1, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = [];\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.push(new Particle(x, y, 0, 5.0, 'green', 75, false));\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(3);\r\n    //Particle effect for the thruster\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0 || this.particles[j].x > this.x - this.width / 2 + this.fillLength) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUpDisplay {\r\n  constructor(x, y, type, timer) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.timer = timer;\r\n    this.type = type;\r\n    this.initColor();\r\n  }\r\n\r\n  initColor() {\r\n    switch (this.type) {\r\n      case 1:\r\n        this.color = 'red';\r\n        this.string = 'Homing: ';\r\n        break;\r\n      case 2:\r\n        this.color = 'red';\r\n        this.string = 'Rapid: '\r\n        break;\r\n      case 3:\r\n        this.color = 'magenta';\r\n        this.string = 'Shield: ';\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = \"25px Arial\";\r\n    ctx.globalAlpha = 0.60;\r\n    ctx.fillText(this.string + (this.timer / 60).toFixed(1), this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\nimport BoostBar from './boostBar.js';\r\nimport PowerUpDisplay from './powerUpTimer.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    //Velocity to determine the magnitude/direction of the ship\r\n    //This is actually acceleration...\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //particles for thruster trail\r\n    this.particles = [];\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.powerUpDisplays = {1: '', 2: '', 3: ''};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    let x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    let y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      let dx = x + Math.randomBetween(-3, 3);\r\n      let dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      let angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 3.0, 'blue', 35, true));\r\n      }\r\n      else {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 2.0, 'red', 20, true));\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        this.powerUpDisplays[i].timer--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n          this.powerUpDisplays[i] = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    //Particle effect for the thruster\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  createPowerUpDisplay(type, timer) {\r\n    if(type === 1) {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.40, type, timer);\r\n    }\r\n    else if(type === 2) {\r\n      this.powerUpDisplays[type]= new PowerUpDisplay(5, 1000 * 0.50, type, timer);\r\n    }\r\n    else {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.60, type, timer);\r\n    }\r\n  }\r\n\r\n  updatePowerUpDisplay(type, amount) {\r\n    this.powerUpDisplays[type].timer += amount;\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    for(let i = 1; i < 4; i ++) {\r\n      if(this.powerUpDisplays[i] !== '') {\r\n        this.powerUpDisplays[i].render(ctx);\r\n      }\r\n    }\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    let segments = 24;\r\n    //15 degree increments\r\n    let angle = Math.tau / segments;\r\n    let randomRadius = this.radius;\r\n    let x;\r\n    let y;\r\n    for(let i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(let i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    //Particle trail of the projectile\r\n    this.particles = [];\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    let x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    let y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      let dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      let dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particles.push(new Particle(dx, dy, Math.PI * this.velocity.dir, 1.0, this.color, 10, true));\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000 || this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(3, 6));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    //Particle effect for the trail\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.5;\r\n    this.target = null;\r\n    this.past = [];\r\n    this.width = 1;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  storePast() {\r\n    let point = {x: this.x, y: this.y};\r\n    this.past.push(point);\r\n    if(this.past.length > 30) {\r\n      //delete this.past[0];\r\n      this.past.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  alterPast() {\r\n    this.past.forEach(point => {\r\n      point.x += Math.randomBetween(-1, 1);\r\n      point.y += Math.randomBetween(-1, 1);\r\n    });\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    this.storePast();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.alterPast();\r\n  }\r\n\r\n  render(ctx) {\r\n    super.render(ctx);\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    for(let i = 0; i < this.past.length - 1; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.past[i].x, this.past[i].y);\r\n      ctx.lineTo(this.past[i + 1].x, this.past[i + 1].y);\r\n      ctx.stroke();\r\n      ctx.lineWidth += 0.1;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\nimport Particle from './particles.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    let color;\r\n    let random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger' || this.color === 'Elite') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger' || this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    let xi;\r\n    let xf;\r\n    let yi;\r\n    let yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    let numSegments = 6;\r\n    for(let i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      let cos = Math.cos(i * Math.PI / 3);\r\n      let sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      let x = this.x - Math.cos(angle) * this.radius;\r\n      let y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.particles.push(new Particle(dx, dy, angle + Math.PI / 6, 2.0, this.color, 20, true));\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    this.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      if(this.asteroid.destroyed) {\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//16.6 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1000;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//60 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 3600;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tlet xi;\r\n\t\tlet xf;\r\n\t\tlet yi;\r\n\t\tlet yf;\r\n\t\tlet numSegments = 2;\r\n\t\tfor(let i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tlet cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tlet sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        this.life = 80;\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class HUDObject {\r\n  constructor(x, y, type, information) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.info = information;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.font = \"30px Arial\";\r\n    ctx.globalAlpha = 0.70;\r\n    ctx.fillText(this.type + this.info, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    /*this.theme = new Audio('./theme.wav');\r\n    this.theme.volume = 0.01;\r\n    this.theme.loop = true;\r\n    this.theme.play();*/\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport Particle from './particles.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport HUDObject from './hud.js';\r\nimport './math.js';\r\nimport AudioController from './audiocontroller.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth) {\r\n    this.screenSide = screenWidth;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 6;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 3;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = new AudioController();\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    /*//HUD\r\n    this.HUDcanvas = document.getElementById('ui');\r\n    this.HUDcanvas.width = this.screenSide;\r\n    this.HUDcanvas.height = 100;\r\n    this.HUDcontext = this.HUDcanvas.getContext('2d');\r\n    document.body.appendChild(this.HUDcanvas); */\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 3;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n    if(event.keyCode === 80) {\r\n      if(this.paused) {\r\n        this.paused = false;\r\n      }\r\n      else {\r\n        this.paused = true;\r\n      }\r\n    }\r\n    if(event.keyCode === 192) {\r\n      this.masterReset();\r\n    }\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  initHUD() {\r\n    this.hudObjects.score = new HUDObject(this.screenSide * 0.45, this.screenSide * 0.05, 'Score: ', this.score);\r\n    this.hudObjects.lives = new HUDObject(this.screenSide * 0.03, this.screenSide * 0.97, 'Lives: ', this.lives);\r\n    this.hudObjects.level = new HUDObject(this.screenSide * 0.87, this.screenSide * 0.97, 'Level: ', this.level);\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    let x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    let y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    let dx = ufo.x - tx;\r\n    let dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    let direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    let x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    let y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n    }\r\n    this.audioController.trigger('shoot');\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    let x;\r\n    let y;\r\n    let radius;\r\n    let mass;\r\n    //Var to control the while loop\r\n    let currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    let x;\r\n    let y;\r\n    let radius = 25;\r\n    let currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      let collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    let xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    let yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    let xDist = otherAsteroid.x - asteroid.x;\r\n    let yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        let angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        let m1 = asteroid.mass;\r\n        let m2 = otherAsteroid.mass;\r\n\r\n        // Velocity before equation\r\n        let u1 = this.rotate(asteroid.velocity, angle);\r\n        let u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        let v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        let v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        let vFinal1 = this.rotate(v1, -angle);\r\n        let vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    let distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      let direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateScore(amount) {\r\n    this.score += amount;\r\n    this.hudObjects.score.info = this.score;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    let asteroid = this.asteroids[aID];\r\n    let mass = asteroid.mass;\r\n    let x = asteroid.x;\r\n    let y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    //delete this.asteroids[aID];\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.updateScore(points);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      let random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      let direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      let angleChange = Math.tau / random;\r\n      for(let i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        let newX = x + Math.cos(direction) * mass;\r\n        let newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    let dx = ship.x - asteroid.x;\r\n    let dy = ship.y - asteroid.y;\r\n    let distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid)\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    let numParticles = Math.randomInt(30, 70);\r\n    let dir = Math.randomBetween(0, Math.tau);\r\n    let speed = Math.randomInt(3,5);\r\n    let life = Math.randomInt(30, 40);\r\n    for(let i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles.push(new Particle(x, y, Math.PI + dir, speed, color, life, true));\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    let x = Math.randomBetween(100, 900);\r\n    let y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    let buffer = 50;\r\n    let collision = false;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.asteroids.forEach(asteroid => {\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.projectiles.forEach(projectile => {\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.lives--;\r\n    this.hudObjects.lives.info = this.lives;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      /*this.theme.loop = false;\r\n      this.theme.pause();*/\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    let ufo = this.ufos[ufoID];\r\n    this.updateScore(ufo.bounty);\r\n    this.popups.push(new PopUp(ufo.x, ufo.y, ufo.bounty, 'blip'));\r\n    if(ufo.bounty === 500) {\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    //delete this.ufos[ufoID];\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    let random = Math.randomInt(20, 50);\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - random, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + random, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        //delete this.popups[i];\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    //Update UFO if applicable\r\n    this.ufos.forEach(ufo => {\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    });\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n    //Update each asteroid\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.update();\r\n    });\r\n    let test = Math.ceil(this.level * this.level / 2) + 1;\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (test) === 0) {\r\n      this.level++;\r\n      this.hudObjects.level.info = this.level;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 3 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = 3 + this.level;\r\n      if(this.constAsteroids > this.MAXASTEROIDS) {\r\n        this.constAsteroids = this.MAXASTEROIDS;\r\n      }\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        let scaling = (this.ufos.length / this.level);\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * scaling, this.UFOTIME * 2 * scaling);\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      let ratio = (this.powerups.length * 2 / this.level)\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * ratio, this.POWERTIME * 2 * ratio)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    for(let i = 0; i < this.asteroids.length; i++) {\r\n      for(let j = i + 1; j < this.asteroids.length; j++) {\r\n        let asteroid = this.asteroids[i];\r\n        let otherAsteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, otherAsteroid.x, otherAsteroid.y, otherAsteroid.radius)) {\r\n          this.particleCollision(asteroid, otherAsteroid);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let projectile = this.projectiles[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(projectile.x, projectile.y, projectile.color);\r\n          //delete this.projectiles[i];\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(asteroid.x, asteroid.y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for ship crashing\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      let powerUp = this.powerups[i];\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[powerUp.type] = true;\r\n        if(this.ship.powerupTimers[powerUp.type] > 0) {\r\n          this.ship.updatePowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        else {\r\n          this.ship.createPowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        this.ship.powerupTimers[powerUp.type] += powerUp.timer;\r\n        this.createPowerUpBlip(powerUp.type);\r\n        if(powerUp.type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        ////delete this.powerups[i];\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j++) {\r\n        let ufo = this.ufos[j];\r\n        if(Math.circleCollisionDetection(ufo.x, ufo.y, ufo.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(ufo.x, ufo.y, ufo.color);\r\n          ufo.powerups[powerUp.type] = true;\r\n          ufo.powerupTimers[powerUp.type] += powerUp.timer;\r\n          if(powerUp.type === 2) {\r\n            ufo.reloading = false;\r\n            ufo.setRateOfFire();\r\n          }\r\n          ////delete this.powerups[i];\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < this.asteroids.length; k++) {\r\n        let powerUp = this.powerups[i];\r\n        let asteroid = this.asteroids[k];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(powerUp.pos.x, powerUp.pos.y, powerUp.color);\r\n          //delete this.powerups[i];\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let ufo = this.ufos[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(this.detectShipCrash(ufo, asteroid)) {\r\n          this.explode(ufo.x, ufo.y, ufo.color);\r\n          this.destoryUFO(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.ufos.length > 1) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        for(let j = i + 1; j < this.ufos.length; j++) {\r\n          let ufo1 = this.ufos[i];\r\n          let ufo2 = this.ufos[j];\r\n          if(Math.circleCollisionDetection(ufo1.x, ufo1.y, ufo1.critical, ufo2.x, ufo2.y, ufo2.critical)) {\r\n            if((ufo1.type === 'Dodger' || ufo1.type === 'Elite') && !ufo1.reloading) {\r\n              this.ufoProjectile(ufo1, ufo2.x, ufo2.y);\r\n            }\r\n            if((ufo2.type === 'Dodger' || ufo2.type === 'Elite') && !ufo2.reloading) {\r\n              this.ufoProjectile(ufo2, ufo1.x, ufo1.y);\r\n            }\r\n            //Get the direction from the first ufo to the second.\r\n            let dir = Math.getDirection(ufo1.x, ufo1.y, ufo2.x, ufo2.y)\r\n            //Point the direction the other way\r\n            ufo1.alterPath(dir + Math.PI);\r\n            //From the second ufo's perspective, this is pointing away from ufo 1\r\n            ufo2.alterPath(dir);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo.x, ufo.y, ufo.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(!this.respawning && Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'magenta');\r\n          this.ship.powerups[3] = false;\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(projectile.x, projectile.y, projectile.color);\r\n        //delete this.projectiles[i];\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        let ufo = this.ufos[j];\r\n        if((ufo.type === 'Dodger' || ufo.type === 'Elite') && ufo.clock === ufo.CLOCK) {\r\n          if(this.projectileDodger(ufo, projectile)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'magenta');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            //delete this.projectiles[i];\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n          ufo.x, ufo.y, ufo.radius)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'magenta');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            //delete this.projectiles[i];\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(4, 8));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 4));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(projectile.color === 'green') {\r\n        projectile.update(this.ufos);\r\n      }\r\n      else {\r\n        projectile.update(this.ship);\r\n      }\r\n      if(projectile.edgeDetection()) {\r\n        //delete this.projectiles[i];\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n    //this.drawHUD();\r\n    //Display respawning if needed\r\n    if(this.respawning && !this.gameOver) {\r\n      this.backBufferContext.save();\r\n      this.backBufferContext.globalAlpha = 0.5;\r\n      this.backBufferContext.strokeText(\"RESPAWNING\", 350, 500);\r\n      this.backBufferContext.restore();\r\n    }\r\n    //Draw UFOs\r\n    this.ufos.forEach(ufo => {\r\n      ufo.render(this.backBufferContext);\r\n    });\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    //Draw asteroids\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.render(this.backBufferContext);\r\n    });\r\n    //draw projectiles\r\n    this.projectiles.forEach(projectile => {\r\n      projectile.render(this.backBufferContext);\r\n    });\r\n    this.powerups.forEach(powerup => {\r\n      powerup.render(this.backBufferContext);\r\n    });\r\n    //draw particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(this.backBufferContext);\r\n    });\r\n    this.popups.forEach(popup => {\r\n      popup.render(this.backBufferContext);\r\n    });\r\n    this.hudObjects.score.render(this.backBufferContext);\r\n    this.hudObjects.lives.render(this.backBufferContext);\r\n    this.hudObjects.level.render(this.backBufferContext);\r\n\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"GAME OVER\", 350, 500);\r\n      this.backBufferContext.fillText(\"Retry? Press ~\", 360, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n    if(this.paused) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"Paused\", 425, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = [];\r\n\t\tthis.buttonNames = ['start', 'options', 'controls'];\r\n\t\tthis.initButtons();\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\tinitButtons() {\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < 3; i++) {\r\n\t\t\tthis.buttons.push({x: this.screenWidth * 0.35, y: this.screenWidth * scaleY, width: this.screenWidth * 0.3, height: this.screenWidth * 0.1})\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\t//console.log(event.keyCode);\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttonNames[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\thandleMouseDown(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t//Adjust the client click position to the canvas position. Drawing with 1000px / 800px canvas (1000 / 800) = 5 / 4\r\n\t\tlet x = event.clientX * 5 / 4;\r\n\t\tlet y = event.clientY * 5 / 4;\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\t\tlet check = Math.circleRectangleCollision(x, y, 10, this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tthis.clickButton(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.gameState === 'options') {\r\n\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase 0:\r\n\t\t\t\tnew Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth);\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"options\":\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Options\", this.screenWidth * 0.42, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n//new Game();\r\n"],"sourceRoot":""}