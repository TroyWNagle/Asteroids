{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particles.js","boostBar.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","audiocontroller.js","game.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Particle","speed","color","life","decay","this","alpha","values","high","low","clock","speedX","cos","speedY","sin","changeAlpha","updateSpeed","ctx","save","fillStyle","globalAlpha","beginPath","arc","closePath","fill","restore","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","push","createParticles","j","update","splice","strokeStyle","strokeRect","fillRect","forEach","particle","render","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","boostGauge","acceleration","angleNoise","angle","edgeDetection","updateVelocity","checkPowerUps","translate","rotate","moveTo","lineTo","stroke","drawShield","Asteroid","mass","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","context","Projectile","initSpeed","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","shortest","distance","findDistance","findDirection","delta","findTarget","adjustDirection","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","type","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","player","error","magnitude","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","timer","initTimer","initShape","rect","PopUp","string","size","initSettings","font","fillText","AudioController","sounds","over","Audio","collisionSound","volume","explosion","shipExplosion","ufoLaser","teleportSound","change","sound","muted","play","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","score","highscore","lives","level","popups","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","audioController","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","masterReset","ufo","tx","ty","trigger","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","angleChange","newX","newY","catchAsteroid","ufoProjectile","explode","ufoID","createBlip","HUDcontext","strokeText","_this2","checkAsteroidAlignment","initAsteroids","difference","addUFO","createPowerUp","particleCollision","handleAsteriodExplosion","respawn","createPowerUpBlip","k","detectShipCrash","destoryUFO","projectileDodger","createProjectile","teleport","checkHighScore","_this3","powerup","popup","drawImage","Menu","gameState","highlighted","buttons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","onmousedown","handleMouseDown","clickButton","button","clearInterval","scaleY","drawMenu","drawControls"],"mappings":"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","file":"static/js/main.c53b0ec7.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  var dx = x1 - x2;\r\n  var dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n/** @class Particle\r\n  * class to handle a particle's life\r\n  */\r\nexport default class Particle {\r\n  /** @constructor\r\n    * initialization of a particle\r\n    * @param floats x,y - position of the particle\r\n    * @param float direction - direction the particle will travel\r\n    * @param int speed - velocity of the particle\r\n    * @param string color - color of the particle\r\n    * @param int life - how many iterations the particle will last for\r\n    */\r\n  constructor(x, y, direction, speed, color, life, decay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.life = life;\r\n    this.decay = decay\r\n    this.color = color;\r\n    this.alpha = 1.0;\r\n    this.values = {high: 1.0, low: 0.7};\r\n    this.clock = 10;\r\n    this.speed = Math.randomInt(1, speed);\r\n    this.direction = direction;\r\n    this.speedX = Math.cos(direction) * this.speed;\r\n    this.speedY = -Math.sin(direction) * this.speed;\r\n  }\r\n\r\n  changeAlpha() {\r\n    if(this.alpha === this.values.high) {\r\n      this.alpha = this.values.low;\r\n    }\r\n    else {\r\n      this.alpha = this.values.high;\r\n    }\r\n  }\r\n\r\n  updateSpeed() {\r\n    this.speedX = Math.cos(this.direction) * this.speed;\r\n    this.speedY = -Math.sin(this.direction) * this.speed;\r\n  }\r\n\r\n  /** @function update()\r\n    * function to updates the particle if it hasn't hit the decay distance\r\n    */\r\n  update() {\r\n    this.clock--;\r\n    if(this.clock <= 0) {\r\n      this.clock = 10;\r\n      this.changeAlpha();\r\n    }\r\n    this.life--;\r\n    if(this.decay && this.speed > 0) {\r\n      this.speed -= 0.05;\r\n      this.updateSpeed();\r\n    }\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n  /** @function render()\r\n    * standard render function\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.globalAlpha = this.alpha;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, 1, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = [];\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.push(new Particle(x, y, 0, 5.0, 'green', 75, false));\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(2);\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0 || this.particles[j].x > this.x - this.width / 2 + this.fillLength) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\nimport BoostBar from './boostBar.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    //Velocity to determine the magnitude/direction of the ship\r\n    //This is actually acceleration...\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //particles for thruster trail\r\n    this.particles = [];\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    var x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    var y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(var i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      var dx = x + Math.randomBetween(-3, 3);\r\n      var dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      var angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 3.0, 'blue', 35, true));\r\n      }\r\n      else {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 1, 'red', 20, true));\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 2; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    var mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    var segments = 24;\r\n    //15 degree increments\r\n    var angle = Math.tau / segments;\r\n    var randomRadius = this.radius;\r\n    var x;\r\n    var y;\r\n    for(var i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    var mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(var i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    //Particle trail of the projectile\r\n    this.particles = [];\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    var x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    var y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(var i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      var dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      var dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particles.push(new Particle(dx, dy, Math.PI * this.velocity.dir, 1.0, this.color, 10, true));\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000|| this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(3, 6));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    //Particle effect for the trail\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.5;\r\n    this.target = null;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    super.update(targets)\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\nimport Particle from './particles.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    var color;\r\n    var random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger' || this.color === 'Elite') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger' || this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    var xi;\r\n    var xf;\r\n    var yi;\r\n    var yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    var numSegments = 6;\r\n    for(var i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      var cos = Math.cos(i * Math.PI / 3);\r\n      var sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(var i = 0; i < numParticles; i++) {\r\n      var angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      var x = this.x - Math.cos(angle) * this.radius;\r\n      var y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.particles.push(new Particle(dx, dy, angle + Math.PI / 6, 2.0, this.color, 20, true));\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    super.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      if(this.asteroid.destroyed) {\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//15 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 900;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//60 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 3600;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tvar xi;\r\n\t\tvar xf;\r\n\t\tvar yi;\r\n\t\tvar yf;\r\n\t\tvar numSegments = 2;\r\n\t\tfor(var i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tvar cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tvar sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        this.life = 80;\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    /*this.theme = new Audio('./theme.wav');\r\n    this.theme.volume = 0.01;\r\n    this.theme.loop = true;\r\n    this.theme.play();*/\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport Particle from './particles.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport './math.js';\r\nimport AudioController from './audiocontroller.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth) {\r\n    this.screenSide = screenWidth;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 10;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 5;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = new AudioController();\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    /*//HUD\r\n    this.HUDcanvas = document.getElementById('ui');\r\n    this.HUDcanvas.width = this.screenSide;\r\n    this.HUDcanvas.height = 100;\r\n    this.HUDcontext = this.HUDcanvas.getContext('2d');\r\n    document.body.appendChild(this.HUDcanvas); */\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 5;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n    if(event.keyCode === 80) {\r\n      if(this.paused) {\r\n        this.paused = false;\r\n      }\r\n      else {\r\n        this.paused = true;\r\n      }\r\n    }\r\n    if(event.keyCode === 192) {\r\n      this.masterReset();\r\n    }\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    var x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    var y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    var dx = ufo.x - tx;\r\n    var dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    var distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    var direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    var x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    var y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n    }\r\n    this.audioController.trigger('shoot');\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    var x;\r\n    var y;\r\n    var radius;\r\n    var mass;\r\n    //Var to control the while loop\r\n    var currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      var spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    var x;\r\n    var y;\r\n    var radius = 25;\r\n    var currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      var collision = false;\r\n      var spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    var xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    var yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    var xDist = otherAsteroid.x - asteroid.x;\r\n    var yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        var angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        var m1 = asteroid.mass;\r\n        var m2 = otherAsteroid.mass;\r\n\r\n        // Velocity before equation\r\n        var u1 = this.rotate(asteroid.velocity, angle);\r\n        var u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        var v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        var v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        var vFinal1 = this.rotate(v1, -angle);\r\n        var vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    var distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      var direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    var asteroid = this.asteroids[aID];\r\n    var mass = asteroid.mass;\r\n    var x = asteroid.x;\r\n    var y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.score += points;\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      var random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      var direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      var angleChange = Math.tau / random;\r\n      for(var i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        var newX = x + Math.cos(direction) * mass;\r\n        var newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    var dx = ship.x - asteroid.x;\r\n    var dy = ship.y - asteroid.y;\r\n    var distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid)\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    var numParticles = Math.randomInt(30, 70);\r\n    var dir = Math.randomBetween(0, Math.tau);\r\n    var speed = Math.randomInt(3,5);\r\n    var life = Math.randomInt(30, 40);\r\n    for(var i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles.push(new Particle(x, y, Math.PI + dir, speed, color, life, true));\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    var x = Math.randomBetween(100, 900);\r\n    var y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    var buffer = 50;\r\n    var collision = false;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.asteroids.forEach(asteroid => {\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.projectiles.forEach(projectile => {\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.lives--;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      /*this.theme.loop = false;\r\n      this.theme.pause();*/\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    this.score += this.ufos[ufoID].bounty;\r\n    this.popups.push(new PopUp(this.ufos[ufoID].x, this.ufos[ufoID].y, this.ufos[ufoID].bounty, 'blip'));\r\n    if(this.ufos[ufoID].bounty === 200 || this.ufos[ufoID].bounty === 500) {\r\n      this.lives++;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - 50, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + 50, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    //Update UFO if applicable\r\n    this.ufos.forEach(ufo => {\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    });\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n    //Update each asteroid\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.update();\r\n    });\r\n\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (this.level * 5) === 0) {\r\n      this.level++;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 5 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = this.numAsteroids;\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * (this.ufos.length / this.level), this.UFOTIME * 2 * (this.ufos.length / this.level));\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * this.powerups.length, this.POWERTIME * 3 * this.powerups.length)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    for(let i = 0; i < this.asteroids.length; i++) {\r\n      for(let j = i + 1; j < this.asteroids.length; j++) {\r\n        if(Math.circleCollisionDetection(this.asteroids[i].x, this.asteroids[i].y, this.asteroids[i].radius, this.asteroids[j].x, this.asteroids[j].y, this.asteroids[j].radius)) {\r\n          this.particleCollision(this.asteroids[i], this.asteroids[j]);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        if(Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius, this.asteroids[j].x, this.asteroids[j].y, this.asteroids[j].radius)) {\r\n          this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(this.asteroids[j].x, this.asteroids[j].y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for ship crashing\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[this.powerups[i].type] = true;\r\n        this.ship.powerupTimers[this.powerups[i].type] += this.powerups[i].timer;\r\n        this.createPowerUpBlip(this.powerups[i].type);\r\n        if(this.powerups[i].type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j++) {\r\n        if(Math.circleCollisionDetection(this.ufos[j].x, this.ufos[j].y, this.ufos[j].radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n          this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n          this.ufos[j].powerups[this.powerups[i].type] = true;\r\n          this.ufos[j].powerupTimers[this.powerups[i].type] += this.powerups[i].timer;\r\n          if(this.powerups[i].type === 2) {\r\n            this.ufos[j].reloading = false;\r\n            this.ufos[j].setRateOfFire();\r\n          }\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < this.asteroids.length; k++) {\r\n        if(Math.circleCollisionDetection(this.asteroids[k].x, this.asteroids[k].y, this.asteroids[k].radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n          this.explode(this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].color);\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        if(this.detectShipCrash(this.ufos[i], this.asteroids[j])) {\r\n          this.explode(this.ufos[i].x, this.ufos[i].y, this.ufos[i].color);\r\n          this.destoryUFO(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.ufos.length > 1) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        for(let j = i + 1; j < this.ufos.length; j++) {\r\n          if(Math.circleCollisionDetection(this.ufos[i].x, this.ufos[i].y, this.ufos[i].critical, this.ufos[j].x, this.ufos[j].y, this.ufos[j].critical)) {\r\n            if((this.ufos[i].type === 'Dodger' || this.ufos[i].type === 'Elite') && !this.ufos[i].reloading) {\r\n              this.ufoProjectile(this.ufos[i], this.ufos[j].x, this.ufos[j].y);\r\n            }\r\n            if((this.ufos[j].type === 'Dodger' || this.ufos[i].type === 'Elite') && !this.ufos[i].reloading) {\r\n              this.ufoProjectile(this.ufos[j], this.ufos[i].x, this.ufos[i].y);\r\n            }\r\n            //Get the direction from the first ufo to the second.\r\n            let dir = Math.getDirection(this.ufos[i].x, this.ufos[i].y, this.ufos[j].x, this.ufos[j].y)\r\n            //Point the direction the other way\r\n            this.ufos[i].alterPath(dir + Math.PI);\r\n            //From the second ufo's perspective, this is pointing away from ufo 1\r\n            this.ufos[j].alterPath(dir);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo.x, ufo.y, ufo.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      if(!this.respawning && Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'magenta');\r\n          this.ship.powerups[3] = false;\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        if((this.ufos[j].type === 'Dodger' || this.ufos[j].type === 'Elite') && this.ufos[j].clock === this.ufos[j].CLOCK) {\r\n          if(this.projectileDodger(this.ufos[j], this.projectiles[i])) {\r\n            if(this.ufos[j].powerups[3]) {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, 'magenta');\r\n              this.ufos[j].powerups[3] = false;\r\n              this.ufos[j].powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius,\r\n          this.ufos[j].x, this.ufos[j].y, this.ufos[j].radius)) {\r\n            if(this.ufos[j].powerups[3]) {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, 'magenta');\r\n              this.ufos[j].powerups[3] = false;\r\n              this.ufos[j].powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(4, 8));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 4));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      if(this.projectiles[i].color === 'green') {\r\n        this.projectiles[i].update(this.ufos);\r\n      }\r\n      else {\r\n        this.projectiles[i].update(this.ship);\r\n      }\r\n      if(this.projectiles[i].edgeDetection()) {\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n    //this.drawHUD();\r\n    //Display respawning if needed\r\n    if(this.respawning && !this.gameOver) {\r\n      this.backBufferContext.save();\r\n      this.backBufferContext.globalAlpha = 0.5;\r\n      this.backBufferContext.strokeText(\"RESPAWNING\", 350, 500);\r\n      this.backBufferContext.restore();\r\n    }\r\n    //Draw UFOs\r\n    this.ufos.forEach(ufo => {\r\n      ufo.render(this.backBufferContext);\r\n    });\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    //Draw asteroids\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.render(this.backBufferContext);\r\n    });\r\n    //draw projectiles\r\n    this.projectiles.forEach(projectile => {\r\n      projectile.render(this.backBufferContext);\r\n    });\r\n    this.powerups.forEach(powerup => {\r\n      powerup.render(this.backBufferContext);\r\n    });\r\n    //draw particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(this.backBufferContext);\r\n    });\r\n    this.popups.forEach(popup => {\r\n      popup.render(this.backBufferContext);\r\n    });\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.screenBufferContext.font = \"50px Times New Roman\";\r\n      this.screenBufferContext.strokeText(\"GAME OVER\", 350, 500);\r\n      this.screenBufferContext.strokeText(\"Retry? Press ~\", 360, 600);\r\n    }\r\n    if(this.paused) {\r\n      this.screenBufferContext.font = \"50px Times New Roman\";\r\n      this.screenBufferContext.strokeText(\"Paused\", 425, 600);\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = ['start', 'options', 'controls'];\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\t//console.log(event.keyCode);\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttons[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\t\tnew Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth);\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.screenWidth * 0.35, this.screenWidth * scaleY, this.screenWidth * 0.3, this.screenWidth * 0.1);\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Options\", this.screenWidth * 0.42, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n//new Game();\r\n"],"sourceRoot":""}