{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particles.js","boostBar.js","powerUpTimer.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","hud.js","audiocontroller.js","game.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Particle","speed","color","life","decay","this","alpha","values","high","low","clock","speedX","cos","speedY","sin","changeAlpha","updateSpeed","ctx","save","fillStyle","globalAlpha","beginPath","arc","closePath","fill","restore","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","push","createParticles","j","update","splice","strokeStyle","strokeRect","fillRect","forEach","particle","render","PowerUpDisplay","type","timer","initColor","string","font","fillText","toFixed","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","powerUpDisplays","boostGauge","acceleration","angleNoise","angle","edgeDetection","updateVelocity","checkPowerUps","amount","translate","rotate","moveTo","lineTo","stroke","drawShield","Asteroid","mass","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","context","Projectile","initSpeed","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","past","shortest","distance","findDistance","findDirection","delta","point","findTarget","adjustDirection","storePast","alterPast","lineWidth","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","player","error","magnitude","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","initTimer","initShape","rect","PopUp","size","initSettings","HUDObject","information","info","AudioController","sounds","over","Audio","collisionSound","volume","explosion","shipExplosion","ufoLaser","teleportSound","change","sound","muted","play","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","score","highscore","lives","level","popups","hudObjects","initHUD","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","audioController","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","masterReset","ufo","tx","ty","trigger","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","updateScore","angleChange","newX","newY","catchAsteroid","ufoProjectile","explode","ufoID","createBlip","HUDcontext","strokeText","_this2","checkAsteroidAlignment","test","initAsteroids","difference","addUFO","scaling","createPowerUp","ratio","particleCollision","handleAsteriodExplosion","respawn","updatePowerUpDisplay","createPowerUpDisplay","createPowerUpBlip","k","detectShipCrash","destoryUFO","projectileDodger","createProjectile","teleport","checkHighScore","_this3","powerup","popup","drawImage","Menu","gameState","highlighted","buttons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","onmousedown","handleMouseDown","clickButton","button","clearInterval","scaleY","drawMenu","drawControls"],"mappings":"uGACAA,KAAKC,IAAgB,EAAVD,KAAKE,GAOhBF,KAAKG,cAAgB,SAAUC,EAAKC,GAClC,OAAOL,KAAKM,UAAYD,EAAMD,GAAOA,GASvCJ,KAAKO,UAAY,SAAUH,EAAKC,GAC9B,IAAIG,EAASR,KAAKS,MAAML,GACpBM,EAAUV,KAAKW,KAAKN,GACxB,OAAOL,KAAKY,MAAMZ,KAAKM,UAAYI,EAAUF,IAAWA,GAU1DR,KAAKa,aAAe,SAASC,EAAGC,EAAGC,EAAIC,GAErC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EAETG,EAAOpB,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GAEhCG,EAAYtB,KAAKuB,KAAKJ,EAAGC,GAQ7B,OANGF,EAAK,IACNI,IAAc,GAEZA,EAAY,IACdA,GAAatB,KAAKC,KAEbqB,GAGTtB,KAAKwB,OAAS,SAASJ,EAAMN,EAAGC,EAAIC,EAAIC,GAEtC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EACTK,EAAYtB,KAAKuB,KAAKJ,EAAKC,GAQ/B,OANGF,EAAK,IACNI,IAAc,GAEbA,EAAY,IACbA,GAAatB,KAAKC,KAEbqB,GAGTtB,KAAKyB,YAAc,SAASX,EAAGC,EAAGC,EAAIC,GAEpC,IAAIC,EAAKJ,EAAIE,EACTG,EAAKJ,EAAIE,EAGb,OADWjB,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,IActCnB,KAAK0B,yBAA2B,SAASC,EAAIC,EAAIC,EAAIb,EAAIC,EAAIa,GAC3D,IAAIZ,EAAKS,EAAKX,EACVG,EAAKS,EAAKX,EAEd,QAAGC,EAAKW,EAAKC,GAAMX,EAAKU,EAAKC,MAI1BZ,EAAKA,EAAKC,EAAKA,IAAOU,EAAKC,IAAOD,EAAKC,KAiB5C9B,KAAK+B,yBAA2B,SAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAE/D,IAAIC,EAAUJ,EAAKE,EAAK,EAApBE,EAA0BH,EAAKE,EAAK,EAEpCpB,EAAKlB,KAAKwC,IAAIR,EAAKO,GACnBpB,EAAKnB,KAAKwC,IAAIP,EAAKM,GAGvB,QAAIrB,EAAMmB,EAAK,EAAIH,OACff,EAAMmB,EAAK,EAAIJ,KAGfhB,GAAOmB,EAAK,IACZlB,GAAOmB,EAAK,GAGLtC,KAAKyC,IAAKvB,EAAKmB,EAAK,EAAK,GAAKrC,KAAKyC,IAAKtB,EAAKmB,EAAK,EAAI,IAChDJ,EAAKA,uDC7HT,SAAAQ,EAAAC,EAAAC,GACf,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCCFA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAD,EAAAE,OAAkBD,IAAA,CACnC,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAIe,SAAAO,EAAAd,EAAAe,EAAAC,GAGf,OAFAD,GAAAb,EAAAF,EAAAiB,UAAAF,GACAC,GAAAd,EAAAF,EAAAgB,GACAhB,aCTqBkB,aASnB,SAAAA,EAAYhD,EAAGC,EAAGO,EAAWyC,EAAOC,EAAOC,EAAMC,GAAQxB,EAAAyB,KAAAL,GACvDK,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKF,KAAOA,EACZE,KAAKD,MAAQA,EACbC,KAAKH,MAAQA,EACbG,KAAKC,MAAQ,EACbD,KAAKE,OAAS,CAACC,KAAM,EAAKC,IAAK,IAC/BJ,KAAKK,MAAQ,GACbL,KAAKJ,MAAQ/D,KAAKO,UAAU,EAAGwD,GAC/BI,KAAK7C,UAAYA,EACjB6C,KAAKM,OAASzE,KAAK0E,IAAIpD,GAAa6C,KAAKJ,MACzCI,KAAKQ,QAAU3E,KAAK4E,IAAItD,GAAa6C,KAAKJ,sDAIvCI,KAAKC,QAAUD,KAAKE,OAAOC,KAC5BH,KAAKC,MAAQD,KAAKE,OAAOE,IAGzBJ,KAAKC,MAAQD,KAAKE,OAAOC,2CAK3BH,KAAKM,OAASzE,KAAK0E,IAAIP,KAAK7C,WAAa6C,KAAKJ,MAC9CI,KAAKQ,QAAU3E,KAAK4E,IAAIT,KAAK7C,WAAa6C,KAAKJ,uCAO/CI,KAAKK,QACFL,KAAKK,OAAS,IACfL,KAAKK,MAAQ,GACbL,KAAKU,eAEPV,KAAKF,OACFE,KAAKD,OAASC,KAAKJ,MAAQ,IAC5BI,KAAKJ,OAAS,IACdI,KAAKW,eAEPX,KAAKrD,GAAKqD,KAAKM,OACfN,KAAKpD,GAAKoD,KAAKQ,sCAKVI,GACLA,EAAIC,OACJD,EAAIE,UAAYd,KAAKH,MACrBe,EAAIG,YAAcf,KAAKC,MACvBW,EAAII,YACJJ,EAAIK,IAAIjB,KAAKrD,EAAGqD,KAAKpD,EAAG,EAAG,EAAGf,KAAKC,KACnC8E,EAAIM,YACJN,EAAIO,OACJP,EAAIQ,mBCpEaC,aACnB,SAAAA,EAAYC,EAAOpF,GAAMqC,EAAAyB,KAAAqB,GACvBrB,KAAKrD,EAAI,IACTqD,KAAKpD,EAAI,IACToD,KAAKuB,MAAQ,IACbvB,KAAKwB,OAAS,GACdxB,KAAKyB,SAAWvF,EAChB8D,KAAKsB,MAAQA,EACbtB,KAAK0B,UAAY,GACjB1B,KAAK2B,WAAa3B,KAAKuB,OAASvB,KAAKsB,MAAQtB,KAAKyB,4DAGpCG,GAEd,IADA,IAAIjF,EAAI,EAAIqD,KAAKrD,EAAIqD,KAAKuB,MAAQ,EACzBzC,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CACrC,IAAIlC,EAAIf,KAAKG,cAAcgE,KAAKpD,EAAIoD,KAAKwB,OAAS,EAAGxB,KAAKpD,EAAIoD,KAAKwB,OAAS,GAC5ExB,KAAK0B,UAAUG,KAAK,IAAIlC,EAAShD,EAAGC,EAAG,EAAG,EAAK,QAAS,IAAI,sCAK9DoD,KAAK2B,WAAa3B,KAAKuB,OAASvB,KAAKsB,MAAQtB,KAAKyB,UAClDzB,KAAK8B,gBAAgB,GAErB,IAAI,IAAIC,EAAI,EAAGA,EAAI/B,KAAK0B,UAAU3C,OAAQgD,IACxC/B,KAAK0B,UAAUK,GAAGC,UACfhC,KAAK0B,UAAUK,GAAGjC,MAAQ,GAAKE,KAAK0B,UAAUK,GAAGpF,EAAIqD,KAAKrD,EAAIqD,KAAKuB,MAAQ,EAAIvB,KAAK2B,aACrF3B,KAAK0B,UAAUO,OAAOF,EAAG,kCAKxBnB,GACLA,EAAIC,OACJD,EAAIsB,YAAc,OAClBtB,EAAIE,UAAY,OAChBF,EAAIG,YAAc,GAClBH,EAAIuB,WAAWnC,KAAKrD,EAAIqD,KAAKuB,MAAQ,EAAGvB,KAAKpD,EAAIoD,KAAKwB,OAAS,EAAGxB,KAAKuB,MAAOvB,KAAKwB,QACnFZ,EAAIwB,SAASpC,KAAKrD,EAAIqD,KAAKuB,MAAQ,EAAGvB,KAAKpD,EAAIoD,KAAKwB,OAAS,EAAGxB,KAAK2B,WAAY3B,KAAKwB,QACtFxB,KAAK0B,UAAUW,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,KAElBA,EAAIQ,mBC1CaoB,aACnB,SAAAA,EAAY7F,EAAGC,EAAG6F,EAAMC,GAAQnE,EAAAyB,KAAAwC,GAC9BxC,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAK0C,MAAQA,EACb1C,KAAKyC,KAAOA,EACZzC,KAAK2C,0DAIL,OAAQ3C,KAAKyC,MACX,KAAK,EACHzC,KAAKH,MAAQ,MACbG,KAAK4C,OAAS,WACd,MACF,KAAK,EACH5C,KAAKH,MAAQ,MACbG,KAAK4C,OAAS,UACd,MACF,KAAK,EACH5C,KAAKH,MAAQ,UACbG,KAAK4C,OAAS,2CAObhC,GACLA,EAAIC,OACJD,EAAIE,UAAYd,KAAKH,MACrBe,EAAIiC,KAAO,aACXjC,EAAIG,YAAc,GAClBH,EAAIkC,SAAS9C,KAAK4C,QAAU5C,KAAK0C,MAAQ,IAAIK,QAAQ,GAAI/C,KAAKrD,EAAGqD,KAAKpD,GACtEgE,EAAIQ,mBC5Ba4B,aAInB,SAAAA,IAAezE,EAAAyB,KAAAgD,GAEbhD,KAAKrD,EAAI,IACTqD,KAAKpD,EAAI,IACToD,KAAKiD,KAAO,GACZjD,KAAKkD,WAAY,EACjBlD,KAAKmD,WAAanD,KAAKiD,KAGvBjD,KAAKoD,MAAQ,CAACC,IAAK,GAAKC,IAAK,GAC7BtD,KAAKuD,SAAW,CAACF,IAAK,EAAKC,IAAK,GAChCtD,KAAKJ,MAAQ,CAACjD,EAAG,EAAKC,EAAG,GACzBoD,KAAKwD,OAAS,GAEdxD,KAAK0B,UAAY,GACjB1B,KAAKH,MAAQ,QACbG,KAAKyB,SAAW,IAChBzB,KAAKyD,UAAW,EAChBzD,KAAKsB,MAAQ,IACbtB,KAAK0D,cAAgB,EACrB1D,KAAK2D,SAAW,EAEhB3D,KAAK4D,SAAW,CAACC,GAAG,EAAOC,GAAG,EAAOC,GAAG,GACxC/D,KAAKgE,cAAgB,CAACH,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACrC/D,KAAKiE,gBAAkB,CAACJ,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACzC/D,KAAKkE,WAAa,IAAI7C,EAASrB,KAAKsB,MAAOtB,KAAKyB,wDAMtC0C,GAEVnE,KAAKJ,MAAMhD,IAAMf,KAAK0E,IAAIP,KAAKoD,MAAME,KAAOa,EAC5CnE,KAAKJ,MAAMjD,GAAKd,KAAK4E,IAAIT,KAAKoD,MAAME,KAAOa,EAExCtI,KAAKwC,IAAI2B,KAAKJ,MAAMjD,IAAMqD,KAAK2D,WAC7B3D,KAAKJ,MAAMjD,EAAI,EAChBqD,KAAKJ,MAAMjD,GAAKqD,KAAK2D,SAGrB3D,KAAKJ,MAAMjD,EAAIqD,KAAK2D,UAIrB9H,KAAKwC,IAAI2B,KAAKJ,MAAMhD,IAAMoD,KAAK2D,WAC7B3D,KAAKJ,MAAMhD,EAAI,EAChBoD,KAAKJ,MAAMhD,GAAKoD,KAAK2D,SAGrB3D,KAAKJ,MAAMhD,EAAIoD,KAAK2D,kDASrB3D,KAAKrD,IAAMqD,KAAKwD,SACjBxD,KAAKrD,EAAI,KAERqD,KAAKpD,IAAMoD,KAAKwD,SACjBxD,KAAKpD,EAAI,KAERoD,KAAKrD,GAAK,IAAOqD,KAAKwD,SACvBxD,KAAKrD,EAAI,GAERqD,KAAKpD,GAAK,IAAOoD,KAAKwD,SACvBxD,KAAKpD,EAAI,2CAQGgF,GAId,IAFA,IAAIjF,EAAIqD,KAAKrD,EAAId,KAAK4E,IAAIT,KAAKoD,MAAME,KAAOtD,KAAKwD,OAC7C5G,EAAIoD,KAAKpD,EAAIf,KAAK0E,IAAIP,KAAKoD,MAAME,KAAOtD,KAAKwD,OACzC1E,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CAEpC,IAAI/B,EAAKJ,EAAId,KAAKG,eAAe,EAAG,GAChCgB,EAAKJ,EAAIf,KAAKG,eAAe,EAAG,GAEhCoI,EAAapE,KAAKoD,MAAME,IAAMzH,KAAKG,eAAc,QAAgB,SAElEgE,KAAKyD,UAAYzD,KAAKsB,MAAQ,EAC/BtB,KAAK0B,UAAUG,KAAK,IAAIlC,EAAS5C,EAAIC,EAAInB,KAAKE,GAAKqI,EAAY,EAAK,OAAQ,IAAI,IAGhFpE,KAAK0B,UAAUG,KAAK,IAAIlC,EAAS5C,EAAIC,EAAInB,KAAKE,GAAKqI,EAAY,EAAK,MAAO,IAAI,6CAMnF,IAAI,IAAItF,EAAI,EAAGA,GAAK,EAAGA,IAClBkB,KAAK4D,SAAS9E,KACfkB,KAAKgE,cAAclF,KACnBkB,KAAKiE,gBAAgBnF,GAAG4D,QACrB1C,KAAKgE,cAAclF,IAAM,IAC1BkB,KAAK4D,SAAS9E,IAAK,EACnBkB,KAAKiE,gBAAgBnF,GAAK,8CAOhC,IAAIuE,EAAMxH,KAAKqB,KAAK8C,KAAKJ,MAAMjD,EAAIqD,KAAKJ,MAAMjD,EAAIqD,KAAKJ,MAAMhD,EAAIoD,KAAKJ,MAAMhD,GACxEyH,EAAQxI,KAAKuB,KAAK4C,KAAKJ,MAAMhD,EAAIyG,GAClCrD,KAAKJ,MAAMjD,EAAI,IAChB0H,IAAU,GAETA,EAAQ,IACTA,GAASxI,KAAKC,KAEhBkE,KAAKuD,SAASF,IAAMA,EACpBrD,KAAKuD,SAASD,IAAMe,mCAOpBrE,KAAKsE,gBACLtE,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EACrBoD,KAAKuE,iBACLvE,KAAKwE,gBAEFxE,KAAKkD,YACNlD,KAAKmD,aACFnD,KAAKmD,YAAc,IACjBnD,KAAK4D,SAAS,GACf5D,KAAKmD,WAAanD,KAAKiD,KAAO,EAG9BjD,KAAKmD,WAAanD,KAAKiD,KAEzBjD,KAAKkD,WAAY,KAIjBlD,KAAKyD,UAAYzD,KAAKsB,MAAQtB,KAAKyB,WACrCzB,KAAK0D,gBAAkB,EAEG,IAAvB1D,KAAK0D,gBACN1D,KAAKsB,QACLtB,KAAKkE,WAAW5C,MAAQtB,KAAKsB,QAKjC,IAAI,IAAIS,EAAI,EAAGA,EAAI/B,KAAK0B,UAAU3C,OAAQgD,IACxC/B,KAAK0B,UAAUK,GAAGC,SACfhC,KAAK0B,UAAUK,GAAGjC,MAAQ,GAC3BE,KAAK0B,UAAUO,OAAOF,EAAG,GAG7B/B,KAAKkE,WAAWlC,4CAGPpB,GACTA,EAAIC,OACJD,EAAIE,UAAY,UAChBF,EAAIG,YAAc,GAClBH,EAAII,YACJJ,EAAIK,IAAIjB,KAAKrD,EAAGqD,KAAKpD,EAAiB,IAAdoD,KAAKwD,OAAc,EAAG3H,KAAKC,KACnD8E,EAAIM,YACJN,EAAIO,OACJP,EAAIQ,uDAGeqB,EAAMC,GAEvB1C,KAAKiE,gBAAgBxB,GAAQ,IAAID,EAAe,EADtC,IAATC,EACkD,IAEpC,IAATA,EAC4C,IAGC,IANaA,EAAMC,gDAUrDD,EAAMgC,GACzBzE,KAAKiE,gBAAgBxB,GAAMC,OAAS+B,iCAO/B7D,GACL,IAAI,IAAI9B,EAAI,EAAGA,EAAI,EAAGA,IACW,KAA5BkB,KAAKiE,gBAAgBnF,IACtBkB,KAAKiE,gBAAgBnF,GAAGyD,OAAO3B,GAGnCA,EAAIC,OACJD,EAAIsB,YAAclC,KAAKH,MACvBe,EAAII,YAEJJ,EAAI8D,UAAU1E,KAAKrD,EAAGqD,KAAKpD,GAC3BgE,EAAI+D,OAAO3E,KAAKoD,MAAME,KAEtB1C,EAAIgE,OAAO,GAAI5E,KAAKwD,QACpB5C,EAAIiE,OAAO,GAAI7E,KAAKwD,QACpB5C,EAAIiE,OAAO,EAAG7E,KAAKwD,OAAS,KAC5B5C,EAAIiE,QAAQ,GAAI7E,KAAKwD,QACrB5C,EAAIiE,OAAO,GAAI7E,KAAKwD,QACpB5C,EAAIkE,SACJlE,EAAIQ,UAEJpB,KAAK0B,UAAUW,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,KAEfZ,KAAK4D,SAAS,IACf5D,KAAK+E,WAAWnE,GAElBZ,KAAKkE,WAAW3B,OAAO3B,YCvONoE,aAOnB,SAAAA,EAAYrI,EAAGC,EAAGqI,EAAM9H,GAAYoB,EAAAyB,KAAAgF,GAClChF,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKkF,WAAY,EAEdD,EAAO,IACRA,EAAO,GAETjF,KAAKiF,KAAOA,EACZjF,KAAKwD,OAASyB,EACdjF,KAAKmF,YAAc,GACnBnF,KAAKoF,gBACLpF,KAAK7C,UAAYA,EACjB6C,KAAKuD,SAAW,CAAC5G,EAAG,EAAKC,EAAG,GAC5BoD,KAAKqE,MAAQ,GAEU,IAApBrE,KAAK7C,UACN6C,KAAKqF,eAGLrF,KAAKsF,oEASP,IAAIjC,EAAMxH,KAAKO,UAAU,EAAG,IAAM4D,KAAKiF,KACpCjF,KAAKrD,EAAI,EACVqD,KAAKuD,SAAS5G,EAAId,KAAKG,cAAc,EAAKqH,GAEpCrD,KAAKrD,EAAI,IAAOqD,KAAKwD,OAC3BxD,KAAKuD,SAAS5G,GAAKd,KAAKG,cAAc,EAAKqH,GAG3CrD,KAAKuD,SAAS5G,EAAId,KAAKG,eAAeqH,EAAKA,GAE1CrD,KAAKpD,EAAI,EACVoD,KAAKuD,SAAS3G,EAAIf,KAAKG,cAAc,EAAKqH,GAEnCrD,KAAKpD,EAAI,IAAOoD,KAAKwD,OAC5BxD,KAAKuD,SAAS3G,GAAKf,KAAKG,cAAc,EAAKqH,GAG3CrD,KAAKuD,SAAS3G,EAAIf,KAAKG,eAAeqH,EAAKA,2CAc7C,IANA,IAII1G,EACAC,EAHAyH,EAAQxI,KAAKC,IAFF,GAGXyJ,EAAevF,KAAKwD,OAGhB1E,EAAI,EAAGA,EANA,GAMcA,IACxBjD,KAAKO,UAAU,EAAG,KAAO,KAC1BmJ,EAAe1J,KAAKG,cAA4B,GAAdgE,KAAKwD,OAAexD,KAAKwD,SAE7D7G,EAAId,KAAK0E,IAAIzB,EAAIuF,GAASkB,EAC1B3I,GAAKf,KAAK4E,IAAI3B,EAAIuF,GAASkB,EAC3BvF,KAAKmF,YAAYtD,KAAK,CAAClF,EAAGA,EAAGC,EAAGA,+CASlC,IAAIyG,EAAMxH,KAAKO,UAAU,EAAG,IAAM4D,KAAKiF,KAEvCjF,KAAKuD,SAAS5G,EAAId,KAAK0E,IAAIP,KAAK7C,WAAakG,EAC7CrD,KAAKuD,SAAS3G,GAAKf,KAAK4E,IAAIT,KAAK7C,WAAakG,0CAO3CrD,KAAKrD,GAAK,IAAO,IAAMqD,KAAKwD,OAC7BxD,KAAKrD,GAAK,IAAMqD,KAAKwD,OAEfxD,KAAKrD,IAAM,IAAMqD,KAAKwD,SAC5BxD,KAAKrD,EAAI,IAAO,IAAMqD,KAAKwD,QAE1BxD,KAAKpD,GAAK,IAAO,IAAMoD,KAAKwD,OAC7BxD,KAAKpD,GAAK,IAAMoD,KAAKwD,OAEfxD,KAAKpD,IAAM,IAAMoD,KAAKwD,SAC5BxD,KAAKpD,EAAI,IAAO,IAAMoD,KAAKwD,yCAQ7BxD,KAAKsE,gBACFtE,KAAKuD,SAAS5G,EAAI,EACnBqD,KAAKqE,OAAS,IAGdrE,KAAKqE,OAAS,IAEhBrE,KAAKrD,GAAKqD,KAAKuD,SAAS5G,EACxBqD,KAAKpD,GAAKoD,KAAKuD,SAAS3G,iCAOnB4I,GACLA,EAAQ3E,OACR2E,EAAQtD,YAAc,QACtBsD,EAAQd,UAAU1E,KAAKrD,EAAGqD,KAAKpD,GAC/B4I,EAAQb,OAAO3E,KAAKqE,OACpBmB,EAAQxE,YAERwE,EAAQZ,OAAO5E,KAAKmF,YAAY,GAAGxI,EAAEqD,KAAKmF,YAAY,GAAGvI,GACzD,IAAI,IAAIkC,EAAI,EAAGA,EAAIkB,KAAKmF,YAAYpG,OAAQD,IAC1C0G,EAAQX,OAAO7E,KAAKmF,YAAYrG,GAAGnC,EAAGqD,KAAKmF,YAAYrG,GAAGlC,GAE5D4I,EAAQtE,YACRsE,EAAQV,SACRU,EAAQpE,mBCzISqE,aACnB,SAAAA,EAAY9I,EAAGC,EAAGO,EAAW0C,GAAQtB,EAAAyB,KAAAyF,GACnCzF,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKwD,OAAS,IACdxD,KAAKH,MAAQA,EACV1C,EAAY,IACbA,GAAatB,KAAKC,KAEpBkE,KAAKuD,SAAW,CAACF,IAAK,EAAKC,IAAKnG,GAChC6C,KAAKJ,MAAQ,CAACjD,EAAG,EAAKC,EAAG,GACzBoD,KAAK0F,YAEL1F,KAAK0B,UAAY,qDAOHE,GAId,IAFA,IAAIjF,EAAIqD,KAAKrD,EAAId,KAAK4E,IAAIT,KAAKuD,SAASD,KAAMtD,KAAKwD,OAC/C5G,EAAIoD,KAAKpD,EAAIf,KAAK0E,IAAIP,KAAKuD,SAASD,KAAMtD,KAAKwD,OAC3C1E,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CAEpC,IAAI/B,EAAKJ,EAAId,KAAKG,eAAegE,KAAKwD,OAAQxD,KAAKwD,QAC/CxG,EAAKJ,EAAIf,KAAKG,eAAegE,KAAKwD,OAAQxD,KAAKwD,QACnDxD,KAAK0B,UAAUG,KAAK,IAAIlC,EAAS5C,EAAIC,EAAInB,KAAKE,GAAKiE,KAAKuD,SAASD,IAAK,EAAKtD,KAAKH,MAAO,IAAI,yCAQ7FG,KAAKJ,MAAMjD,EAAId,KAAK4E,IAAIT,KAAKuD,SAASD,KAAOtD,KAAKuD,SAASF,IAC3DrD,KAAKJ,MAAMhD,GAAKf,KAAK0E,IAAIP,KAAKuD,SAASD,KAAOtD,KAAKuD,SAASF,4CAO5D,OAAGrD,KAAKrD,EAAIqD,KAAKwD,QAAU,KAAQxD,KAAKrD,EAAIqD,KAAKwD,QAAU,GAC3DxD,KAAKpD,EAAIoD,KAAKwD,QAAU,KAAOxD,KAAKpD,EAAIoD,KAAKwD,QAAU,iCASlDmC,GACL3F,KAAK8B,gBAAgBjG,KAAKO,UAAU,EAAG,IACvC4D,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EAErB,IAAI,IAAImF,EAAI,EAAGA,EAAI/B,KAAK0B,UAAU3C,OAAQgD,IACxC/B,KAAK0B,UAAUK,GAAGC,SACfhC,KAAK0B,UAAUK,GAAGjC,MAAQ,GAC3BE,KAAK0B,UAAUO,OAAOF,EAAG,kCASxBnB,GACLA,EAAIC,OACJD,EAAIsB,YAAclC,KAAKH,MACvBe,EAAII,YACJJ,EAAIK,IAAIjB,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKwD,OAAQ,EAAG3H,KAAKC,KAC7C8E,EAAIM,YACJN,EAAIkE,SACJlE,EAAIQ,UACJpB,KAAK0B,UAAUW,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,cCrFtB,SAAAgF,EAAAC,GAA6U,OAA1OD,EAA3E,oBAAAE,QAAA,kBAAAA,OAAAC,SAA2E,SAAAF,GAAoC,cAAAA,GAA+B,SAAAA,GAAoC,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAApG,UAAA,gBAAAmG,IAAmIA,GAE9T,SAAAI,EAAAJ,GAWf,OATAI,EADA,oBAAAH,QAAA,WAAAF,EAAAE,OAAAC,UACA,SAAAF,GACA,OAAAD,EAAAC,IAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAApG,UAAA,SAAAkG,EAAAC,KAIAA,GCXe,SAAAK,EAAAC,EAAAC,GACf,OAAAA,GAAsB,WAAPH,EAAOG,IAAA,oBAAAA,ECHP,SAAAD,GACf,YAAAA,EACA,UAAAE,eAAA,6DAGA,OAAAF,EDESG,CAAqBH,GAH9BC,EEJe,SAAAG,EAAAC,GAIf,OAHAD,EAAAnH,OAAAqH,eAAArH,OAAAsH,eAAA,SAAAF,GACA,OAAAA,EAAAG,WAAAvH,OAAAsH,eAAAF,KAEAA,GCFe,SAASI,EAAIhI,EAAAiI,EAAAC,GAiB5B,OAfIF,EADJ,qBAAAG,iBAAAC,IACQD,QAAAC,IAEA,SAAApI,EAAAiI,EAAAC,GACR,IAAAG,ECNe,SAAAC,EAAAL,GACf,MAAAzH,OAAAM,UAAAyH,eAAAf,KAAAc,EAAAL,IAEA,QADAK,EAAaX,EAAcW,MAI3B,OAAAA,EDAiBE,CAAaxI,EAAAiI,GAC9B,GAAAI,EAAA,CACA,IAAAI,EAAAjI,OAAAkI,yBAAAL,EAAAJ,GAEA,OAAAQ,EAAAL,IACAK,EAAAL,IAAAZ,KAAAU,GAGAO,EAAAE,SAIa3I,EAAAiI,EAAAC,GAAAlI,GEnBE,SAAA4I,EAAAhB,EAAAiB,GAMf,OALAD,EAAApI,OAAAqH,gBAAA,SAAAD,EAAAiB,GAEA,OADAjB,EAAAG,UAAAc,EACAjB,IAGAA,EAAAiB,GCLe,SAAAC,EAAAC,EAAAC,GACf,uBAAAA,GAAA,OAAAA,EACA,UAAAlJ,UAAA,sDAGAiJ,EAAAjI,UAAAN,OAAAyI,OAAAD,KAAAlI,UAAA,CACAsG,YAAA,CACAuB,MAAAI,EACAxI,UAAA,EACAD,cAAA,KAGA0I,GAAkBJ,EAAcG,EAAAC,OCVXE,cACnB,SAAAA,EAAYnL,EAAGC,EAAGO,EAAW0C,GAAO,IAAAkI,EAAA,OAAAxJ,EAAAyB,KAAA8H,IAClCC,EAAA7B,EAAAlG,KAAAuG,EAAAuB,GAAA1B,KAAApG,KAAMrD,EAAGC,EAAGO,EAAW0C,KAElBmI,WAAa,UAClBD,EAAKnJ,OAAS,KACdmJ,EAAKE,KAAO,GACZF,EAAKxG,MAAQ,EANqBwG,aADFtC,yCAUvBE,GAET,IADA,IAAIuC,EAAW,IACPpJ,EAAI,EAAGA,EAAI6G,EAAQ5G,OAAQD,IAAK,CACtC,IAAIqJ,EAAW,EACZnI,KAAKpB,SAAW+G,EAAQ7G,KACzBqJ,EAAWnI,KAAKoI,aAAazC,EAAQ7G,KAEpCqJ,EAAWD,IACZlI,KAAKpB,OAAS+G,EAAQ7G,GACtBoJ,EAAWC,GAGC,MAAbD,IACDlI,KAAKpB,OAAS,2CAILA,GACX,IAAI7B,EAAKiD,KAAKrD,EAAIiC,EAAOjC,EACrBK,EAAKgD,KAAKpD,EAAIgC,EAAOhC,EAEzB,OADef,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,yCAI5B4B,GACZ,IAAI7B,EAAKiD,KAAKrD,EAAIiC,EAAOjC,EACrBK,EAAKgD,KAAKpD,EAAIgC,EAAOhC,EACrBuL,EAAWtM,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GACpCG,EAAYtB,KAAKuB,KAAKJ,EAAKmL,GAO/B,OANGpL,EAAK,IACNI,IAAc,GAEZA,EAAY,IACdA,GAAatB,KAAKC,KAEbqB,4CAIP,IAAIA,EAAY6C,KAAKqI,cAAcrI,KAAKpB,QACrCoB,KAAKuD,SAASD,IAAM,IACrBtD,KAAKuD,SAASD,KAAOzH,KAAKC,KAE5B,IAAIwM,EAAQtI,KAAKuD,SAASD,IAAMnG,EAC7BmL,EAAQzM,KAAKE,KACduM,GAASzM,KAAKC,KAEbwM,GAASzM,KAAKE,KACfuM,GAASzM,KAAKC,KAEbwM,EAAQ,IACTtI,KAAKuD,SAASD,KAAOtD,KAAKgI,YAEzBM,EAAQ,IACTtI,KAAKuD,SAASD,KAAOtD,KAAKgI,gDAK5B,IAAIO,EAAQ,CAAC5L,EAAGqD,KAAKrD,EAAGC,EAAGoD,KAAKpD,GAChCoD,KAAKiI,KAAKpG,KAAK0G,GACZvI,KAAKiI,KAAKlJ,OAAS,IACpBiB,KAAKiI,KAAKhG,OAAO,EAAG,uCAKtBjC,KAAKiI,KAAK5F,QAAQ,SAAAkG,GAChBA,EAAM5L,GAAKd,KAAKG,eAAe,EAAG,GAClCuM,EAAM3L,GAAKf,KAAKG,eAAe,EAAG,oCAI/B2J,GACa,UAAf3F,KAAKH,MACH8F,EAAQ5G,OAAS,GAClBiB,KAAKwI,WAAW7C,GAIlB3F,KAAKpB,OAAS+G,EAEb3F,KAAKpB,SACNoB,KAAKyI,kBACL7B,EAAAL,EAAAuB,EAAApI,WAAA,YAAAM,MAAAoG,KAAApG,OAEFA,KAAK0I,YACL1I,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EACrBoD,KAAK2I,2CAGA/H,GACLgG,EAAAL,EAAAuB,EAAApI,WAAA,SAAAM,MAAAoG,KAAApG,KAAaY,GACbA,EAAIC,OACJD,EAAIsB,YAAclC,KAAKH,MACvBe,EAAIgI,UAAY5I,KAAKuB,MACrB,IAAI,IAAIzC,EAAI,EAAGA,EAAIkB,KAAKiI,KAAKlJ,OAAS,EAAGD,IACvC8B,EAAII,YACJJ,EAAIgE,OAAO5E,KAAKiI,KAAKnJ,GAAGnC,EAAGqD,KAAKiI,KAAKnJ,GAAGlC,GACxCgE,EAAIiE,OAAO7E,KAAKiI,KAAKnJ,EAAI,GAAGnC,EAAGqD,KAAKiI,KAAKnJ,EAAI,GAAGlC,GAChDgE,EAAIkE,SACJlE,EAAIgI,WAAa,GAEnBhI,EAAIQ,mBC/GayH,cAInB,SAAAA,EAAYlM,EAAGC,GAAG,IAAAmL,EAAA,OAAAxJ,EAAAyB,KAAA6I,IAChBd,EAAA7B,EAAAlG,KAAAuG,EAAAsC,GAAAzC,KAAApG,QACKrD,EAAIA,EACToL,EAAKnL,EAAIA,EACTmL,EAAKe,SAAW,EAChBf,EAAK3E,MAAQ,CAACC,IAAK,EAAKC,IAAK,GAC7ByE,EAAK5D,aAAe,GACpB4D,EAAKgB,SAAW,GAEhBhB,EAAKiB,YAAc,GAEnBjB,EAAKvE,OAAS,GAEduE,EAAKkB,aAAe,GAEpBlB,EAAKmB,SAAW,GAChBnB,EAAKlI,MAAQ,GACbkI,EAAKtF,KAAO,GACZsF,EAAK1H,MAAQ,EACb0H,EAAKoB,OAAS,EACdpB,EAAKqB,WACLrB,EAAKsB,WACLtB,EAAK5E,WAAa,EAClB4E,EAAKuB,gBAELvB,EAAKwB,aAAe,GACpBxB,EAAKyB,mBACLzB,EAAK0B,KAAO,GACZ1B,EAAK1C,eA5BW0C,aAJa/E,yCAqC7B,IAAInD,EACA1D,EAASN,KAAKO,UAAU,EAAG,KAE5BD,EAAS,IACV0D,EAAQ,UACRG,KAAKyC,KAAO,QACZzC,KAAKmJ,OAAS,KAERhN,EAAS,IACf0D,EAAQ,SACRG,KAAKyC,KAAO,SACZzC,KAAKmJ,OAAS,KAEPhN,EAAS,IAChB0D,EAAQ,OACRG,KAAKyC,KAAO,SACZzC,KAAKmJ,OAAS,MAGdtJ,EAAQ,SACRG,KAAKmJ,OAAS,IACdnJ,KAAKyC,KAAO,SAEdzC,KAAKH,MAAQA,qCAIbG,KAAK0J,MAAQ,EACI,WAAd1J,KAAKyC,MAAoC,UAAfzC,KAAKH,OAChCG,KAAK0J,MAAQ,EACb1J,KAAKK,MAAQL,KAAK0J,OAEE,WAAd1J,KAAKyC,MACXzC,KAAK0J,MAAQ,GACb1J,KAAKK,MAAQL,KAAK0J,QAGlB1J,KAAK0J,MAAQ,GACb1J,KAAKK,MAAQL,KAAK0J,+CAKH,WAAd1J,KAAKyC,MAAmC,UAAdzC,KAAKyC,KAChCzC,KAAKmD,WAAatH,KAAKO,UAAU,IAAK,KAElB,WAAd4D,KAAKyC,KACXzC,KAAKmD,WAAatH,KAAKO,UAAU,IAAK,KAGtC4D,KAAKmD,WAAatH,KAAKO,UAAU,IAAK,KAErC4D,KAAK4D,SAAS,KACf5D,KAAKmD,WAAatH,KAAKY,MAAMuD,KAAKmD,WAAa,+CAcjD,IANA,IAAIwG,EACAC,EACAC,EACAC,EAGIhL,EAAI,EAAGA,EADG,EACcA,IAAK,CAEnC,IAAIyB,EAAM1E,KAAK0E,IAAIzB,EAAIjD,KAAKE,GAAK,GAC7B0E,EAAM5E,KAAK4E,IAAI3B,EAAIjD,KAAKE,GAAK,GAEjC4N,EAAKpJ,EAAMP,KAAKgJ,YAChBY,EAAKrJ,EAAMP,KAAKwD,OAEhBqG,GAAMpJ,EAAMT,KAAKgJ,YACjBc,GAAMrJ,EAAMT,KAAKwD,OACjBxD,KAAKuJ,aAAa1H,KAAK,CAACkI,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,4CAQtD9J,KAAKyJ,KAAO,CAAC9M,EAAGd,KAAKG,cAAc,IAAK,KAAMY,EAAGf,KAAKG,cAAc,IAAK,4CAKzEgE,KAAKJ,MAAMhD,IAAMf,KAAK0E,IAAIP,KAAKoD,MAAME,KAAOtD,KAAKoD,MAAMC,IACvDrD,KAAKJ,MAAMjD,GAAKd,KAAK4E,IAAIT,KAAKoD,MAAME,KAAOtD,KAAKoD,MAAMC,IAEnDxH,KAAKwC,IAAI2B,KAAKJ,MAAMjD,IAAM,MACxBqD,KAAKJ,MAAMjD,EAAI,EAChBqD,KAAKJ,MAAMjD,GAAK,IAGhBqD,KAAKJ,MAAMjD,EAAI,KAIhBd,KAAKwC,IAAI2B,KAAKJ,MAAMhD,IAAM,MACxBoD,KAAKJ,MAAMhD,EAAI,EAChBoD,KAAKJ,MAAMhD,GAAK,IAGhBoD,KAAKJ,MAAMhD,EAAI,8CAUfoD,KAAKrD,EAAIqD,KAAKiJ,cAAgB,KAAQjJ,KAAKJ,MAAMjD,EAAI,GAAOqD,KAAKrD,EAAIqD,KAAKiJ,cAAgB,GAAKjJ,KAAKJ,MAAMjD,EAAI,KAChHqD,KAAKJ,MAAMjD,IAAM,EACjBqD,KAAKoD,MAAME,KAAOzH,KAAKE,GAAK,EAC5BiE,KAAKoD,MAAMC,IAAM,IAEfrD,KAAKpD,EAAIoD,KAAKiJ,cAAgB,KAAQjJ,KAAKJ,MAAMhD,EAAI,GAAOoD,KAAKpD,EAAIoD,KAAKiJ,cAAgB,GAAKjJ,KAAKJ,MAAMhD,EAAI,KAChHoD,KAAKJ,MAAMhD,IAAM,EACjBoD,KAAKoD,MAAME,KAAOzH,KAAKE,GAAK,EAC5BiE,KAAKoD,MAAMC,IAAM,2CAIL8G,EAAWxN,EAAGC,GAC5B,IAAI,IAAImF,EAAI,EAAGA,EAAIoI,EAAUpL,OAAQgD,IACnC,GAAGlG,KAAK0B,yBAAyBZ,EAAGC,EAAGoD,KAAKkJ,SAAUiB,EAAUpI,GAAGpF,EAAGwN,EAAUpI,GAAGnF,EAAGuN,EAAUpI,GAAGyB,QACjG,OAAO,EAGX,OAAO,qCAIP,IAAI2E,EAAWtM,KAAKyB,YAAY0C,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKyJ,KAAK9M,EAAGqD,KAAKyJ,KAAK7M,GACvEoD,KAAKoD,MAAME,IAAMzH,KAAKwB,OAAO8K,EAAUnI,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAKyJ,KAAK9M,EAAGqD,KAAKyJ,KAAK7M,GAC9EoD,KAAKoD,MAAMC,IAAMrD,KAAKmE,aACnBgE,EAAWnI,KAAKwD,SACjBxD,KAAKyJ,KAAO,sCAINtM,GACR6C,KAAKoD,MAAMC,IAAMrD,KAAKmE,aACtBnE,KAAKoD,MAAME,IAAMnG,EACA,KAAd6C,KAAKyJ,OAENzJ,KAAKqJ,WACLrJ,KAAKK,+CAIK0I,GACZ/I,KAAK+I,SAAWA,EAChB/I,KAAK+I,SAASxF,SAAS5G,EAAIqD,KAAKJ,MAAMjD,EACtCqD,KAAK+I,SAASxF,SAAS3G,EAAIoD,KAAKJ,MAAMhD,0CAItC,IAAIuL,EAAWtM,KAAKyB,YAAY0C,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAK+I,SAASpM,EAAGqD,KAAK+I,SAASnM,GAC3EO,EAAYtB,KAAKwB,OAAO8K,EAAUnI,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAK+I,SAASpM,EAAGqD,KAAK+I,SAASnM,GAEjFD,EAAIqD,KAAKrD,EAAId,KAAK4E,IAAItD,EADd,KACmCgL,EAC3CvL,EAAIoD,KAAKpD,EAAIf,KAAK0E,IAAIpD,EAFd,KAEmCgL,EAC/CnI,KAAK+I,SAASpM,EAAIA,EAClBqD,KAAK+I,SAASnM,EAAIA,iDAGGwN,GACrB,IAAIjN,EAAYtB,KAAKa,aAAasD,KAAKrD,EAAGqD,KAAKpD,EAAGoD,KAAK+I,SAASpM,EAAGqD,KAAK+I,SAASnM,GAE7EyN,EAAQlN,EADFtB,KAAKa,aAAasD,KAAKrD,EAAGqD,KAAKpD,EAAGwN,EAAOzN,EAAGyN,EAAOxN,GAG7D,GAAGf,KAAKwC,IAAIgM,GAAS,EAAIxO,KAAKE,GAAK,IAAK,CACtC,IAAIuO,EAAY,GAAKtK,KAAK+I,SAAS9D,KACnCjF,KAAKJ,MAAMhD,IAAMf,KAAK0E,IAAIP,KAAKoD,MAAME,KAAOtD,KAAKoD,MAAMC,IACvDrD,KAAKJ,MAAMjD,GAAKd,KAAK4E,IAAIT,KAAKoD,MAAME,KAAOtD,KAAKoD,MAAMC,IACtDrD,KAAK+I,SAASxF,SAAS5G,EAAId,KAAK4E,IAAItD,GAAamN,EACjDtK,KAAK+I,SAASxF,SAAS3G,GAAKf,KAAK0E,IAAIpD,GAAamN,EAClDtK,KAAK+I,SAAW,4CAQJnH,GACd,IAAI,IAAI9C,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CACpC,IAAIuF,EAAQrE,KAAKuD,SAASD,IAAMzH,KAAKG,eAAeH,KAAKE,GAAI,GACzDY,EAAIqD,KAAKrD,EAAId,KAAK0E,IAAI8D,GAASrE,KAAKwD,OACpC5G,EAAIoD,KAAKpD,EAAIf,KAAK4E,IAAI4D,GAASrE,KAAKwD,OAExCxD,KAAK0B,UAAUG,KAAK,IAAIlC,EAAShD,EAAGC,EAAGf,KAAKE,GAAKiE,KAAKuD,SAASD,IAAK,GAAOtD,KAAKuD,SAASF,IAAKrD,KAAKH,MAAO,IAAI,+CAIhG+B,GAGhB,IAFA,IAAIjF,EAAIqD,KAAK+I,SAASpM,EAClBC,EAAIoD,KAAK+I,SAASnM,EACdkC,EAAI,EAAGA,EAAI8C,EAAc9C,IAAK,CACpC,IAAIuF,EAAQxI,KAAKG,cAAc,EAAGH,KAAKC,KAEnCiB,EAAKJ,EAAId,KAAK0E,IAAI8D,GAASrE,KAAK+I,SAASvF,OACzCxG,EAAKJ,EAAIf,KAAK4E,IAAI4D,GAASrE,KAAK+I,SAASvF,OAE7CxD,KAAK0B,UAAUG,KAAK,IAAIlC,EAAS5C,EAAIC,EAAIqH,EAAQxI,KAAKE,GAAK,EAAG,EAAKiE,KAAKH,MAAO,IAAI,sCAQrFG,KAAKsE,gBACLtE,KAAKW,cACLiG,EAAAL,EAAAsC,EAAAnJ,WAAA,gBAAAM,MAAAoG,KAAApG,MACA4G,EAAAL,EAAAsC,EAAAnJ,WAAA,iBAAAM,MAAAoG,KAAApG,MACGA,KAAKK,MAAQL,KAAK0J,QACnB1J,KAAKK,QACFL,KAAKK,OAAS,GACfL,KAAKqJ,YAGNrJ,KAAKK,QAAUL,KAAK0J,OAAuB,KAAd1J,KAAKyJ,MACnCzJ,KAAKuK,WAGJvK,KAAKkD,YACNlD,KAAKmD,aACFnD,KAAKmD,YAAc,IACpBnD,KAAKsJ,gBACLtJ,KAAKkD,WAAY,IAGlBlD,KAAKJ,MAAMjD,EAAI,EAChBqD,KAAK8I,UAAY,IAGjB9I,KAAK8I,UAAY,IAEE,KAAlB9I,KAAK+I,WACH/I,KAAK+I,SAAS7D,UACflF,KAAK+I,SAAW,IAGhB/I,KAAK+I,SAASxF,SAAS5G,EAAIqD,KAAKJ,MAAMjD,EACtCqD,KAAK+I,SAASxF,SAAS3G,EAAIoD,KAAKJ,MAAMhD,EACtCoD,KAAKwK,gBACLxK,KAAKyK,kBAAkB,KAG3BzK,KAAKrD,GAAKqD,KAAKJ,MAAMjD,EACrBqD,KAAKpD,GAAKoD,KAAKJ,MAAMhD,EAClBf,KAAKM,SAAW,IACjB6D,KAAK8B,gBAAgB,GAGvB,IAAI,IAAIC,EAAI,EAAGA,EAAI/B,KAAK0B,UAAU3C,OAAQgD,IACxC/B,KAAK0B,UAAUK,GAAGC,SACfhC,KAAK0B,UAAUK,GAAGjC,MAAQ,GAC3BE,KAAK0B,UAAUO,OAAOF,EAAG,kCAQxBnB,GACLA,EAAIC,OACJD,EAAIsB,YAAclC,KAAKH,MACvBe,EAAI8D,UAAU1E,KAAKrD,EAAGqD,KAAKpD,GAC3BgE,EAAI+D,OAAO3E,KAAK8I,UAChBlI,EAAII,YACJJ,EAAIK,IAAI,EAAG,EAAGjB,KAAKgJ,YAAa,EAAGnN,KAAKC,KACxC8E,EAAIM,YACJN,EAAIkE,SACJlE,EAAII,YACJJ,EAAIK,IAAI,EAAG,EAAGjB,KAAKwD,OAAQ,EAAG3H,KAAKC,KACnC8E,EAAIM,YACJN,EAAIkE,SACJ9E,KAAKuJ,aAAalH,QAAQ,SAAAqI,GACxB9J,EAAII,YACJJ,EAAIgE,OAAO8F,EAAQX,GAAIW,EAAQT,IAC/BrJ,EAAIiE,OAAO6F,EAAQV,GAAIU,EAAQR,IAC/BtJ,EAAIkE,WAENlE,EAAIQ,UAEJpB,KAAK0B,UAAUW,QAAQ,SAAAC,GACrBA,EAASC,OAAO3B,KAEfZ,KAAK4D,SAAS,IACfgD,EAAAL,EAAAsC,EAAAnJ,WAAA,aAAAM,MAAAoG,KAAApG,KAAiBY,YCpVF+J,aACpB,SAAAA,EAAYhO,EAAGC,EAAG6F,GAAOlE,EAAAyB,KAAA2K,GACxB3K,KAAK4K,IAAM,CAACjO,EAAGA,EAAGC,EAAGA,GACrBoD,KAAKyC,KAAOA,EACZzC,KAAKwD,OAAS,GACdxD,KAAKH,MAAQ,MACbG,KAAK0C,MAAQ,EACb1C,KAAKuJ,aAAe,GACpBvJ,KAAK6K,YACL7K,KAAK8K,0DAIL,OAAQ9K,KAAKyC,MAEX,KAAK,EAEJzC,KAAK0C,MAAQ,IACb,MAED,KAAK,EAEJ1C,KAAK0C,MAAQ,KACb,MAED,KAAK,EAEJ1C,KAAK0C,MAAQ,KACb1C,KAAKH,MAAQ,+CAOhB,OAAQG,KAAKyC,MACZ,KAAK,EACJzC,KAAKwJ,+DAeP,IALA,IAAIG,EACAC,EACAC,EACAC,EAEIhL,EAAI,EAAGA,EADG,EACcA,IAAK,CAEpC,IAAIyB,EAAM1E,KAAK0E,IAAIzB,EAAIjD,KAAKE,GAAK,GAC7B0E,EAAM5E,KAAK4E,IAAI3B,EAAIjD,KAAKE,GAAK,GAEjC4N,EAAKpJ,EAAMP,KAAKwD,OAChBoG,GAAMrJ,EAAMP,KAAKwD,OAEjBqG,GAAMpJ,EAAMT,KAAKwD,OACjBsG,EAAKrJ,EAAMT,KAAKwD,OAChBxD,KAAKuJ,aAAa1H,KAAK,CAACkI,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,EAAIK,GAAIJ,oCAO/ClJ,GACLA,EAAIC,OACJD,EAAIsB,YAAclC,KAAKH,MACvBe,EAAI8D,UAAU1E,KAAK4K,IAAIjO,EAAGqD,KAAK4K,IAAIhO,GACnCgE,EAAII,YACJJ,EAAIK,IAAI,EAAG,EAAGjB,KAAKwD,OAAQ,EAAG3H,KAAKC,KACnC8E,EAAIM,YACJN,EAAIkE,SACLlE,EAAII,YACJJ,EAAImK,KAAoB,KAAd/K,KAAKwD,OAA8B,KAAdxD,KAAKwD,OAA6B,IAAdxD,KAAKwD,OAA6B,IAAdxD,KAAKwD,QAC5E5C,EAAIM,YACJN,EAAIkE,SACH9E,KAAKuJ,aAAalH,QAAQ,SAAAqI,GACxB9J,EAAII,YACJJ,EAAIgE,OAAO8F,EAAQX,GAAIW,EAAQT,IAC/BrJ,EAAIiE,OAAO6F,EAAQV,GAAIU,EAAQR,IAC/BtJ,EAAIkE,WAENlE,EAAIQ,mBCvFc4J,aACnB,SAAAA,EAAYrO,EAAGC,EAAGgG,EAAQH,GAAOlE,EAAAyB,KAAAgL,GAC/BhL,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKyC,KAAOA,EACZzC,KAAK4C,OAAS,GACd5C,KAAKF,KAAO,EACZE,KAAKiL,KAAO,EACZjL,KAAKkL,aAAatI,GAClB5C,KAAKH,MAAQ,wDAGF+C,GACX,OAAQ5C,KAAKyC,MACX,IAAK,OACHzC,KAAKF,KAAO,GACZE,KAAKiL,KAAO,GACZjL,KAAK4C,OAAS,KAAOA,EACrB,MACF,IAAK,cACH5C,KAAKF,KAAO,GACZE,KAAKiL,KAAO,GACZjL,KAAK4C,OAASA,oCASlB,GADA5C,KAAKF,OACFE,KAAKF,MAAQ,EACd,OAAO,iCAIJc,GACLA,EAAIC,OACJD,EAAIE,UAAYd,KAAKH,MACrBe,EAAIiC,KAAO7C,KAAKiL,KAAO,WACvBrK,EAAIkC,SAAS9C,KAAK4C,OAAQ5C,KAAKrD,EAAGqD,KAAKpD,GACvCgE,EAAIQ,mBCzCa+J,aACnB,SAAAA,EAAYxO,EAAGC,EAAG6F,EAAM2I,GAAc7M,EAAAyB,KAAAmL,GACpCnL,KAAKrD,EAAIA,EACTqD,KAAKpD,EAAIA,EACToD,KAAKyC,KAAOA,EACZzC,KAAKqL,KAAOD,2CAGPxK,GACLA,EAAIC,OACJD,EAAIE,UAAY,SAChBF,EAAIiC,KAAO,aACXjC,EAAIG,YAAc,GAClBH,EAAIkC,SAAS9C,KAAKyC,KAAOzC,KAAKqL,KAAMrL,KAAKrD,EAAGqD,KAAKpD,GACjDgE,EAAIQ,mBCdakK,mBACnB,SAAAA,IAAe/M,EAAAyB,KAAAsL,GAQbtL,KAAKuL,OAAS,GACdvL,KAAKwL,KAAO,IAAIC,MAAM,kBACtBzL,KAAKuL,OAAO1J,KAAK7B,KAAKwL,MACtBxL,KAAK0L,eAAiB,IAAID,MAAM,iBAChCzL,KAAK0L,eAAeC,OAAS,GAC7B3L,KAAKuL,OAAO1J,KAAK7B,KAAK0L,gBACtB1L,KAAK4L,UAAY,IAAIH,MAAM,mBAC3BzL,KAAK4L,UAAUD,OAAS,GACxB3L,KAAKuL,OAAO1J,KAAK7B,KAAK4L,WACtB5L,KAAK6L,cAAgB,IAAIJ,MAAM,uBAC/BzL,KAAKuL,OAAO1J,KAAK7B,KAAK6L,eAEtB7L,KAAK8L,SAAW,IAAIL,MAAM,iBAC1BzL,KAAKuL,OAAO1J,KAAK7B,KAAK8L,UACtB9L,KAAK+L,cAAgB,IAAIN,MAAM,kBAC/BzL,KAAKuL,OAAO1J,KAAK7B,KAAK+L,oEAGLC,GACjBhM,KAAKuL,OAAOlJ,QAAQ,SAAA4J,GAClBA,EAAMN,QAAUK,EACbC,EAAMN,OAAS,IAChBM,EAAMN,OAAS,GAEdM,EAAMN,OAAS,IAChBM,EAAMN,OAAS,oCAMnB3L,KAAKuL,OAAOlJ,QAAQ,SAAA4J,GAClBA,EAAMC,OAAQ,qCAKhBlM,KAAKuL,OAAOlJ,QAAQ,SAAA4J,GAClBA,EAAMC,OAAQ,oCAIVD,GACN,OAAQA,GACN,IAAK,QACHjM,KAAK8L,SAASK,OACd,MACF,IAAK,YACHnM,KAAK0L,eAAeS,OACpB,MACF,IAAK,YACHnM,KAAK4L,UAAUO,OACf,MACF,IAAK,iBACHnM,KAAK6L,cAAcM,OACnB,MACF,IAAK,WACHnM,KAAK+L,cAAcI,OACnB,MACF,IAAK,YACHnM,KAAKwL,KAAKW,kBCvDGC,aAInB,SAAAA,EAAYC,EAAYC,EAAkBC,EAAeC,GAAcjO,EAAAyB,KAAAoM,GACrEpM,KAAKyM,WAAaD,EAElBxM,KAAK0M,OAAS,EACd1M,KAAK2M,aAAe,EACpB3M,KAAK4M,QAAU,IACf5M,KAAK6M,UAAY,IAEjB7M,KAAK8M,aAAe,EAEpB9M,KAAK+M,KAAO,IAAI/J,EAChBhD,KAAKgN,KAAO,GACZhN,KAAKiN,MAAQ,EAEbjN,KAAKkN,SAAWrR,KAAKO,UAAU4D,KAAK4M,QAAwB,EAAf5M,KAAK4M,SAIlD5M,KAAKmN,YAAa,EAClBnN,KAAKoN,aAAe,IACpBpN,KAAKqN,YAAc,GACnBrN,KAAKmK,UAAY,GACjBnK,KAAKsN,kBACLtN,KAAK0B,UAAY,GAEjB1B,KAAKuN,MAAQ,EACbvN,KAAKwN,UAAY,EACjBxN,KAAKyN,MAAQ,EACbzN,KAAK0N,MAAQ,EACb1N,KAAK2N,OAAS,GACd3N,KAAK4N,WAAa,CAACL,MAAO,GAAIE,MAAO,GAAIC,MAAO,IAChD1N,KAAK6N,UAEL7N,KAAK8N,eAAiB9N,KAAK0N,MAAQ1N,KAAK8M,aAExC9M,KAAK+N,UAAY,GACjB/N,KAAKgO,YAAc,GACnBhO,KAAK4D,SAAW,GAChB5D,KAAKiO,aAAepS,KAAKO,UAAU4D,KAAK6M,UAA4B,EAAjB7M,KAAK6M,WAExD7M,KAAKkO,UAAW,EAChBlO,KAAKmO,QAAS,EAEdnO,KAAKoO,gBAAkB,IAAI9C,EAG3BtL,KAAKqO,OAAS,CAACC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,EAAOC,IAAI,GAStH/O,KAAKgP,kBAAoB3C,EACzBrM,KAAKsM,iBAAmBA,EACxBtM,KAAKiP,oBAAsB1C,EAG3BvM,KAAKkP,KAAOlP,KAAKkP,KAAKC,KAAKnP,MAC3BA,KAAKoP,cAAgBpP,KAAKoP,cAAcD,KAAKnP,MAC7CA,KAAKqP,YAAcrP,KAAKqP,YAAYF,KAAKnP,MACzCsP,OAAOC,UAAYvP,KAAKoP,cACxBE,OAAOE,QAAUxP,KAAKqP,YAGtBrP,KAAKyP,SAAWC,YAAY1P,KAAKkP,KAAM,GAAG,mDAQ1ClP,KAAK+M,KAAO,IAAI/J,EAChBhD,KAAKgN,KAAO,GAEZhN,KAAKkN,SAAWrR,KAAKO,UAAU4D,KAAK4M,QAAwB,EAAf5M,KAAK4M,SAClD5M,KAAK4D,SAAW,GAChB5D,KAAKiO,aAAepS,KAAKO,UAAU4D,KAAK6M,UAA4B,EAAjB7M,KAAK6M,WAIxD7M,KAAKmN,YAAa,EAClBnN,KAAKoN,aAAe,IACpBpN,KAAKqN,YAAc,GACnBrN,KAAKmK,UAAY,GACjBnK,KAAK8M,aAAe,EACpB9M,KAAKsN,kBACLtN,KAAK0B,UAAY,GAEjB1B,KAAKuN,MAAQ,EACbvN,KAAKyN,MAAQ,EACbzN,KAAK0N,MAAQ,EACb1N,KAAK8N,eAAiB9N,KAAK0N,MAAQ1N,KAAK8M,aAExC9M,KAAK+N,UAAY,GACjB/N,KAAKgO,YAAc,GAEnBhO,KAAKkO,UAAW,EAChBlO,KAAKmO,QAAS,wCAQFwB,GACZA,EAAMC,iBAEN5P,KAAKqO,OAAOsB,EAAME,UAAW,EAER,KAAlBF,EAAME,UACJ7P,KAAKmO,OACNnO,KAAKmO,QAAS,EAGdnO,KAAKmO,QAAS,GAGG,MAAlBwB,EAAME,SACP7P,KAAK8P,kDAOGH,GACVA,EAAMC,iBAEN5P,KAAKqO,OAAOsB,EAAME,UAAW,oCAI7B7P,KAAK4N,WAAWL,MAAQ,IAAIpC,EAA4B,IAAlBnL,KAAKyM,WAAqC,IAAlBzM,KAAKyM,WAAmB,UAAWzM,KAAKuN,OACtGvN,KAAK4N,WAAWH,MAAQ,IAAItC,EAA4B,IAAlBnL,KAAKyM,WAAqC,IAAlBzM,KAAKyM,WAAmB,UAAWzM,KAAKyN,OACtGzN,KAAK4N,WAAWF,MAAQ,IAAIvC,EAA4B,IAAlBnL,KAAKyM,WAAqC,IAAlBzM,KAAKyM,WAAmB,UAAWzM,KAAK0N,kDAQtG,IAAI/Q,EAAIqD,KAAK+M,KAAKpQ,EAAId,KAAK4E,IAAIT,KAAK+M,KAAK3J,MAAME,KAAMtD,KAAK+M,KAAKvJ,OAAS,IACpE5G,EAAIoD,KAAK+M,KAAKnQ,EAAIf,KAAK0E,IAAIP,KAAK+M,KAAK3J,MAAME,KAAMtD,KAAK+M,KAAKvJ,OAAS,IACrExD,KAAK+M,KAAKnJ,SAAS,GACpB5D,KAAKqN,YAAYxL,KAAK,IAAIiG,EAAOnL,EAAGC,EAAGoD,KAAK+M,KAAK3J,MAAME,IAAKtD,KAAK+M,KAAKlN,QAGtEG,KAAKqN,YAAYxL,KAAK,IAAI4D,EAAW9I,EAAGC,EAAGoD,KAAK+M,KAAK3J,MAAME,IAAKtD,KAAK+M,KAAKlN,QAE5EG,KAAK+M,KAAK7J,WAAY,wCAQV6M,EAAKC,EAAIC,GACrB,IAAIlT,EAAKgT,EAAIpT,EAAIqT,EACbhT,EAAK+S,EAAInT,EAAIqT,EAEb9H,EAAWtM,KAAKqB,KAAKH,EAAKA,EAAKC,EAAKA,GAEpCG,EAAYtB,KAAKuB,KAAKJ,EAAKmL,GAE5BpL,EAAK,IACNI,IAAc,GAGhB,IAAIR,EAAIoT,EAAIpT,EAAId,KAAK4E,IAAItD,GAAY4S,EAAIvM,OAAS,IAC9C5G,EAAImT,EAAInT,EAAIf,KAAK0E,IAAIpD,GAAY4S,EAAIvM,OAAS,IAC/CuM,EAAInM,SAAS,GACd5D,KAAKqN,YAAYxL,KAAK,IAAIiG,EAAOnL,EAAGC,EAAGO,EAAW4S,EAAIlQ,QAGtDG,KAAKqN,YAAYxL,KAAK,IAAI4D,EAAW9I,EAAGC,EAAGO,EAAW4S,EAAIlQ,QAE5DG,KAAKoO,gBAAgB8B,QAAQ,SAC7BH,EAAI7M,WAAY,4CAOhB,KAAMlD,KAAKmK,UAAUpL,OAASiB,KAAK8M,cACjC9M,KAAKmQ,aAAa,uCAQVhT,GASV,IAPA,IAAIR,EACAC,EACA4G,EACAyB,EAEAmL,EAAapQ,KAAKmK,UAAUpL,OAEzBqR,IAAepQ,KAAKmK,UAAUpL,QAAQ,CAE3C,IAAIsR,GAAY,EACZC,EAAYzU,KAAKO,UAAU,EAAG,GAClC6I,EAAOpJ,KAAKG,cAAc,GAAI,IAC9BwH,EAASyB,EAEQ,IAAdqL,GACD3T,EAAId,KAAKG,eAAe,EAAIwH,EAAQxD,KAAKyM,WAAa,EAAIjJ,GAC1D5G,GAAM,EAAI4G,GAGU,IAAd8M,GACN3T,EAAIqD,KAAKyM,WAAa,EAAIjJ,EAC1B5G,EAAIf,KAAKG,eAAe,EAAIwH,EAAQxD,KAAKyM,WAAa,EAAIjJ,IAGtC,IAAd8M,GACN3T,EAAId,KAAKG,eAAe,EAAIwH,EAAQxD,KAAKyM,WAAa,EAAIjJ,GAC1D5G,EAAIoD,KAAKyM,WAAa,EAAIjJ,IAI1B7G,GAAM,EAAI6G,EACV5G,EAAIf,KAAKG,eAAe,EAAIwH,EAAQxD,KAAKyM,WAAa,EAAIjJ,IAG5DxD,KAAKmK,UAAU9H,QAAQ,SAAA0G,GAClBlN,KAAK0B,yBAAyBwL,EAASpM,EAAGoM,EAASnM,EAAGmM,EAASvF,OAAQ7G,EAAGC,EAAG4G,KAC9E6M,GAAY,KAGZA,GACFrQ,KAAKmK,UAAUtI,KAAK,IAAImD,EAASrI,EAAGC,EAAGqI,EAAM9H,sCAWjD,IALA,IAAIR,EACAC,EAEAwT,EAAapQ,KAAKgN,KAAKjO,OAErBqR,IAAepQ,KAAKgN,KAAKjO,QAAQ,CACrC,IAAIsR,GAAY,EACZC,EAAYzU,KAAKO,UAAU,EAAG,GAEjB,IAAdkU,GACD3T,EAAId,KAAKG,eAAc,GAAa,MACpCY,GAAI,IAGgB,IAAd0T,GACN3T,EAAI,KACJC,EAAIf,KAAKG,eAAc,GAAa,OAGhB,IAAdsU,GACN3T,EAAId,KAAKG,eAAc,GAAa,MACpCY,EAAI,OAIJD,GAAI,GACJC,EAAIf,KAAKG,eAAc,GAAa,OAEtCgE,KAAKmK,UAAU9H,QAAQ,SAAA0G,GAClBlN,KAAK0B,yBAAyBZ,EAAGC,EAAG4G,GAAauF,EAASpM,EAAGoM,EAASnM,EAAGmM,EAASvF,UACnF6M,GAAY,KAGZA,GACFrQ,KAAKgN,KAAKnL,KAAK,IAAIgH,EAAIlM,EAAGC,6CAM9B,IAAID,EAAId,KAAKO,UAA4B,GAAlB4D,KAAKyM,WAAqC,GAAlBzM,KAAKyM,YAChD7P,EAAIf,KAAKO,UAA4B,GAAlB4D,KAAKyM,WAAqC,GAAlBzM,KAAKyM,YAChDtQ,EAASN,KAAKM,SACfA,EAAS,IACV6D,KAAK4D,SAAS/B,KAAK,IAAI8I,EAAQhO,EAAGC,EAAG,IAE9BT,EAAS,IAChB6D,KAAK4D,SAAS/B,KAAK,IAAI8I,EAAQhO,EAAGC,EAAG,IAGrCoD,KAAK4D,SAAS/B,KAAK,IAAI8I,EAAQhO,EAAGC,EAAG,mCAUlC2G,EAAUc,GAKf,MAJ0B,CACtB1H,EAAG4G,EAAS5G,EAAId,KAAK0E,IAAI8D,GAASd,EAAS3G,EAAIf,KAAK4E,IAAI4D,GACxDzH,EAAG2G,EAAS5G,EAAId,KAAK4E,IAAI4D,GAASd,EAAS3G,EAAIf,KAAK0E,IAAI8D,8CAU5C0E,EAAUwH,GAE1B,IAAIC,EAAgBzH,EAASxF,SAAS5G,EAAI4T,EAAchN,SAAS5G,EAC7D8T,EAAgB1H,EAASxF,SAAS3G,EAAI2T,EAAchN,SAAS3G,EAMjE,GAAI4T,GAJQD,EAAc5T,EAAIoM,EAASpM,GAIX8T,GAHhBF,EAAc3T,EAAImM,EAASnM,IAGc,EAAG,CAGpD,IAAIyH,GAASxI,KAAK6U,MAAMH,EAAc3T,EAAImM,EAASnM,EAAG2T,EAAc5T,EAAIoM,EAASpM,GAG7EgU,EAAK5H,EAAS9D,KACd2L,EAAKL,EAActL,KAGnB4L,EAAK7Q,KAAK2E,OAAOoE,EAASxF,SAAUc,GACpCyM,EAAK9Q,KAAK2E,OAAO4L,EAAchN,SAAUc,GAGzC0M,EAAK,CAAEpU,GAAIkU,EAAGlU,GAAKgU,EAAKC,GAAM,EAAIA,EAAKE,EAAGnU,IAAMgU,EAAKC,GAAKhU,EAAGiU,EAAGjU,GAChEoU,EAAK,CAAErU,GAAImU,EAAGnU,GAAKiU,EAAKD,GAAM,EAAIA,EAAKE,EAAGlU,IAAKgU,EAAKC,GAAKhU,EAAGkU,EAAGlU,GAG/DqU,EAAUjR,KAAK2E,OAAOoM,GAAK1M,GAC3B6M,EAAUlR,KAAK2E,OAAOqM,GAAK3M,GAG/B0E,EAASxF,SAAS5G,EAAIsU,EAAQtU,EAC9BoM,EAASxF,SAAS3G,EAAIqU,EAAQrU,EAC9B2T,EAAchN,SAAS5G,EAAIuU,EAAQvU,EACnC4T,EAAchN,SAAS3G,EAAIsU,EAAQtU,4CAIxBmT,EAAKoB,GACpB,IAAIhJ,EAAWtM,KAAKyB,YAAYyS,EAAIpT,EAAGoT,EAAInT,EAAGuU,EAAWxU,EAAGwU,EAAWvU,GACvE,GAAGuL,EAA+B,EAAnB4H,EAAI9G,aAAmBkI,EAAW3N,OAAS,CACxD,IAAIrG,EAAYtB,KAAKwB,OAAO8K,EAAUgJ,EAAWxU,EAAGwU,EAAWvU,EAAGmT,EAAIpT,EAAGoT,EAAInT,GAC7EmT,EAAIqB,UAAUjU,GACd4S,EAAI1G,WACJ0G,EAAI1P,QAEN,OAAG8H,EAAY4H,EAAIvM,OAAS2N,EAAW3N,2CAM7BiB,GACVzE,KAAKuN,OAAS9I,EACdzE,KAAK4N,WAAWL,MAAMlC,KAAOrL,KAAKuN,sDAOZ8D,GAEtB,IAAItI,EAAW/I,KAAKmK,UAAUkH,GAC1BpM,EAAO8D,EAAS9D,KAChBtI,EAAIoM,EAASpM,EACbC,EAAImM,EAASnM,EAEjBmM,EAAS7D,WAAY,EACrBlF,KAAKmK,UAAUlI,OAAOoP,EAAK,GAC3BrR,KAAKoO,gBAAgB8B,QAAQ,aAE7B,IAAIoB,EAASzV,KAAKS,MAAM,IAAM2I,GAI9B,GAHAjF,KAAK2N,OAAO9L,KAAK,IAAImJ,EAAMrO,EAAGC,EAAG0U,EAAQ,SACzCtR,KAAKuR,YAAYD,GAEdrM,GAAQ,GAAI,CAEb,IAAI9I,EAASN,KAAKO,UAAU,EAAG,GAE/B4D,KAAK8M,cAAgB3Q,EAAS,EAC9B8I,GAAQ9I,EAKR,IAHA,IAAIgB,EAAYtB,KAAKG,cAAc,EAAGH,KAAKC,KAEvC0V,EAAc3V,KAAKC,IAAMK,EACrB2C,EAAI,EAAGA,EAAI3C,EAAQ2C,IAAK,CAE9B,IAAI2S,EAAO9U,EAAId,KAAK0E,IAAIpD,GAAa8H,EACjCyM,EAAO9U,EAAIf,KAAK4E,IAAItD,GAAa8H,EAErCjF,KAAKmK,UAAUtI,KAAK,IAAImD,EAASyM,EAAMC,EAAMzM,EAAM9H,IACnDA,GAAaqU,QAIfxR,KAAK8M,uDASOC,EAAMhE,GACpB,IAAIhM,EAAKgQ,EAAKpQ,EAAIoM,EAASpM,EACvBK,EAAK+P,EAAKnQ,EAAImM,EAASnM,EACvBuL,EAAWpL,EAAKA,EAAKC,EAAKA,EAC9B,GAAGmL,EAAWtM,KAAKyC,IAAIyK,EAASvF,OAASuJ,EAAKvJ,OAAQ,GACpD,OAAO,EAET,GAAGuJ,EAAKhE,WAAaA,EAArB,CAGA,GAAGZ,EAAWtM,KAAKyC,IAAIyO,EAAK9D,aAAeF,EAASvF,OAAQ,GAAI,CAC9D,IAAIrG,EAAYtB,KAAKwB,OAAO8K,EAAUY,EAASpM,EAAGoM,EAASnM,EAAGmQ,EAAKpQ,EAAGoQ,EAAKnQ,GAC3EmQ,EAAKqE,UAAUjU,IACG,WAAd4P,EAAKtK,MAAmC,UAAdsK,EAAKtK,OAAqBsG,EAASvF,OAASuJ,EAAK7D,UAA8B,KAAlB6D,EAAKhE,SAC9FgE,EAAK4E,cAAc5I,GAGZZ,EAAWtM,KAAKyC,IAAIyO,EAAK7D,SAAWH,EAASvF,OAAQ,KAExDuJ,EAAK7J,WACPlD,KAAK4R,cAAc7E,EAAMhE,EAASpM,EAAGoM,EAASnM,IAIpD,OAAO,mCAQDD,EAAGC,EAAGiD,GAKZ,IAJA,IAAI+B,EAAe/F,KAAKO,UAAU,GAAI,IAClCkH,EAAMzH,KAAKG,cAAc,EAAGH,KAAKC,KACjC8D,EAAQ/D,KAAKO,UAAU,EAAE,GACzB0D,EAAOjE,KAAKO,UAAU,GAAI,IACtB0C,EAAI,EAAGA,EAAI8C,EAAc9C,IAC5BjD,KAAKM,SAAW,KACjBmH,EAAMzH,KAAKG,cAAc,EAAGH,KAAKC,MAEnCkE,KAAK0B,UAAUG,KAAK,IAAIlC,EAAShD,EAAGC,EAAGf,KAAKE,GAAKuH,EAAK1D,EAAOC,EAAOC,GAAM,uCAQnE,IAAAiI,EAAA/H,KAELrD,EAAId,KAAKG,cAAc,IAAK,KAC5BY,EAAIf,KAAKG,cAAc,IAAK,KAG5BqU,GAAY,EAEhB,GACKA,IACD1T,EAAId,KAAKG,cAAc,IAAK,KAC5BY,EAAIf,KAAKG,cAAc,IAAK,KAC5BqU,GAAY,GAGdrQ,KAAKgN,KAAK3K,QAAQ,SAAA0N,GACblU,KAAK0B,yBAAyBZ,EAAGC,EAAGmL,EAAKgF,KAAKvJ,OAAQuM,EAAIpT,EAAGoT,EAAInT,EAAGmT,EAAIvM,OAAS,OAClF6M,GAAY,KAGhBrQ,KAAKmK,UAAU9H,QAAQ,SAAA0G,GAElBlN,KAAK0B,yBAAyBZ,EAAGC,EAAGmL,EAAKgF,KAAKvJ,OAAQuF,EAASpM,EAAGoM,EAASnM,EAAGmM,EAASvF,OAjBjF,MAkBP6M,GAAY,KAGhBrQ,KAAKqN,YAAYhL,QAAQ,SAAA8O,GAEpBtV,KAAK0B,yBAAyB4T,EAAWxU,EAAGwU,EAAWvU,EAAGuU,EAAW3N,OAAQ7G,EAAGC,EAAGmL,EAAKgF,KAAKvJ,OAvBvF,MAwBP6M,GAAY,WAGVA,GAERrQ,KAAK6R,QAAQ7R,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAGoD,KAAK+M,KAAKlN,OACjDG,KAAK6R,QAAQlV,EAAGC,EAAGoD,KAAK+M,KAAKlN,OAC7BG,KAAKoO,gBAAgB8B,QAAQ,YAC7BlQ,KAAK+M,KAAKpQ,EAAIA,EACdqD,KAAK+M,KAAKnQ,EAAIA,EAEdoD,KAAK+M,KAAKnN,MAAMjD,EAAI,EACpBqD,KAAK+M,KAAKnN,MAAMhD,EAAI,oCAOpBoD,KAAKmN,YAAa,EAClBnN,KAAKyN,QACLzN,KAAK4N,WAAWH,MAAMpC,KAAOrL,KAAKyN,MAC/BzN,KAAKyN,OAAS,EACfzN,KAAK+M,KAAO,IAAI/J,GAGhBhD,KAAKkO,UAAW,EAGhBlO,KAAKoO,gBAAgB8B,QAAQ,iDAOtB4B,GACT9R,KAAKuR,YAAYvR,KAAKgN,KAAK8E,GAAO3I,QAClCnJ,KAAK2N,OAAO9L,KAAK,IAAImJ,EAAMhL,KAAKgN,KAAK8E,GAAOnV,EAAGqD,KAAKgN,KAAK8E,GAAOlV,EAAGoD,KAAKgN,KAAK8E,GAAO3I,OAAQ,SAC7D,MAA5BnJ,KAAKgN,KAAK8E,GAAO3I,SAClBnJ,KAAKyN,QACLzN,KAAK4N,WAAWH,MAAMpC,KAAOrL,KAAKyN,MAClCzN,KAAK+R,WAAW,WAElB/R,KAAKiN,QACLjN,KAAKgN,KAAK/K,OAAO6P,EAAO,GACxB9R,KAAKoO,gBAAgB8B,QAAQ,2DAI1BlQ,KAAKuN,MAAQvN,KAAKwN,YACnBxN,KAAKwN,UAAYxN,KAAKuN,iDAIR9K,GAChB,IAAIG,EAAS,GACb,OAAQH,GACN,KAAK,EACHG,EAAS,gBACT,MACF,KAAK,EACHA,EAAS,aACT,MACF,KAAK,EACHA,EAAS,cAKb5C,KAAK+R,WAAWnP,sCAGPA,GACN5C,KAAK+M,KAAKnQ,EAAI,IACfoD,KAAK2N,OAAO9L,KAAK,IAAImJ,EAAMhL,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAI,GAAIgG,EAAQ,SAGlE5C,KAAK2N,OAAO9L,KAAK,IAAImJ,EAAMhL,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAI,GAAIgG,EAAQ,2CAQpE5C,KAAKgS,WAAWlR,UAAY,QAC5Bd,KAAKgS,WAAW9P,YAAc,OAC9BlC,KAAKgS,WAAW5P,SAAS,EAAG,EAAGpC,KAAKyM,WAAY,KAChDzM,KAAKgS,WAAWnP,KAAO,uBACvB7C,KAAKgS,WAAWC,WAAW,UAAYjS,KAAKyN,MAAO,GAAI,IACvDzN,KAAKgS,WAAWC,WAAW,UAAYjS,KAAK0N,MAAO,IAAK,IACxD1N,KAAKgS,WAAWC,WAAW,UAAYjS,KAAKuN,MAAO,IAAK,IACxDvN,KAAKgS,WAAWC,WAAW,cAAgBjS,KAAK+N,UAAW,IAAK,IAChE/N,KAAKgS,WAAWC,WAAW,cAAgBjS,KAAKwN,UAAY,IAAK,IACjExN,KAAKgS,WAAWnP,KAAO,uBACvB7C,KAAKgS,WAAWC,WAAW,aAAc,GAAI,IAC7CjS,KAAKgS,WAAWC,WAAW,8FAA+F,IAAK,qCAQ/H,IAFO,IAAAC,EAAAlS,KAEClB,EAAI,EAAGA,EAAIkB,KAAK2N,OAAO5O,OAAQD,IAClCkB,KAAK2N,OAAO7O,GAAGkD,UAChBhC,KAAK2N,OAAO1L,OAAOnD,EAAG,GAI1BkB,KAAK+M,KAAK/K,SAEVhC,KAAKgN,KAAK3K,QAAQ,SAAA0N,GAChB,IAAiB,UAAbA,EAAItN,MAAiC,UAAbsN,EAAItN,OAAkC,KAAbsN,EAAItG,MACpDyI,EAAKtO,SAAS7E,OAAS,EAAG,CAC3B,IAAI5C,EAASN,KAAKO,UAAU,EAAG8V,EAAKtO,SAAS7E,OAAS,GACtDgR,EAAItG,KAAO,CAAC9M,EAAGuV,EAAKtO,SAASzH,GAAQyO,IAAIjO,EAAGC,EAAGsV,EAAKtO,SAASzH,GAAQyO,IAAIhO,GAG7EmT,EAAI/N,SACgB,KAAjB+N,EAAIhH,UAAoBmJ,EAAK/E,YAC9B4C,EAAIoC,uBAAuBD,EAAKnF,QAGjC/M,KAAKmK,UAAUpL,OAASiB,KAAK8N,iBAC9B9N,KAAKmQ,aAAa,GAClBnQ,KAAK8M,gBAGP9M,KAAKmK,UAAU9H,QAAQ,SAAA0G,GACrBA,EAAS/G,WAEX,IAAIoQ,EAAOvW,KAAKW,KAAKwD,KAAK0N,MAAQ1N,KAAK0N,MAAQ,GAAK,EAEpD,GAAkB,IAAf1N,KAAKiN,OAAejN,KAAKiN,MAASmF,IAAU,EAAG,CAChDpS,KAAK0N,QACL1N,KAAK4N,WAAWF,MAAMrC,KAAOrL,KAAK0N,MAClC1N,KAAK2N,OAAO9L,KAAK,IAAImJ,EAAM,IAAK,IAAK,SAAWhL,KAAK0N,MAAO,gBAE5D1N,KAAKyN,QACLzN,KAAK4N,WAAWH,MAAMpC,KAAOrL,KAAKyN,MAClCzN,KAAK+R,WAAW,UAChB/R,KAAK+N,WAAa/N,KAAK0N,MACvB,IAAI2E,EAAgB,EAAIrS,KAAK0N,MAC1B2E,EAAgBrS,KAAK2M,eACtB0F,EAAgBrS,KAAK2M,cAEvB,IAAI2F,EAAaD,EAAgBrS,KAAKmK,UAAUpL,OAChD,GAAGiB,KAAKmK,UAAUpL,OAASsT,EACzB,IAAI,IAAIvT,EAAI,EAAGA,EAAIwT,EAAYxT,IAC7BkB,KAAKmQ,aAAa,GAClBnQ,KAAK8M,eAGT9M,KAAK8N,eAAiB,EAAI9N,KAAK0N,MAC5B1N,KAAK8N,eAAiB9N,KAAK2M,eAC5B3M,KAAK8N,eAAiB9N,KAAK2M,cAK/B,GAAG3M,KAAKkN,SAAW,GAAKlN,KAAKgN,KAAKjO,OAASiB,KAAK0M,SAC9C1M,KAAKkN,WACFlN,KAAKkN,UAAY,GAAG,CACrBlN,KAAKuS,SACL,IAAIC,EAAWxS,KAAKgN,KAAKjO,OAASiB,KAAK0N,MACvC1N,KAAKkN,SAAWrR,KAAKO,UAAU4D,KAAK4M,QAAU4F,EAAwB,EAAfxS,KAAK4M,QAAc4F,GAK9E,GADAxS,KAAKiO,eACFjO,KAAKiO,cAAgB,EAAG,CACzBjO,KAAKyS,gBACL,IAAIC,EAAgC,EAAvB1S,KAAK4D,SAAS7E,OAAaiB,KAAK0N,MAC7C1N,KAAKiO,aAAepS,KAAKO,UAAU4D,KAAK6M,UAAY6F,EAAwB,EAAjB1S,KAAK6M,UAAgB6F,GAI/E1S,KAAKmN,aACNnN,KAAKoN,eACFpN,KAAKoN,cAAgB,IAEtBpN,KAAKoN,aAAe,IACpBpN,KAAKmN,YAAa,IAKtB,IAAI,IAAIrO,EAAI,EAAGA,EAAIkB,KAAKmK,UAAUpL,OAAQD,IACxC,IAAI,IAAIiD,EAAIjD,EAAI,EAAGiD,EAAI/B,KAAKmK,UAAUpL,OAAQgD,IACzClG,KAAK0B,yBAAyByC,KAAKmK,UAAUrL,GAAGnC,EAAGqD,KAAKmK,UAAUrL,GAAGlC,EAAGoD,KAAKmK,UAAUrL,GAAG0E,OAAQxD,KAAKmK,UAAUpI,GAAGpF,EAAGqD,KAAKmK,UAAUpI,GAAGnF,EAAGoD,KAAKmK,UAAUpI,GAAGyB,UAC/JxD,KAAK2S,kBAAkB3S,KAAKmK,UAAUrL,GAAIkB,KAAKmK,UAAUpI,IACzD/B,KAAKoO,gBAAgB8B,QAAQ,cAMnC,IAAI,IAAIpR,EAAI,EAAGA,EAAIkB,KAAKqN,YAAYtO,OAAQD,IAC1C,IAAI,IAAIiD,EAAI,EAAGA,EAAI/B,KAAKmK,UAAUpL,OAAQgD,IACxC,GAAGlG,KAAK0B,yBAAyByC,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAG0E,OAAQxD,KAAKmK,UAAUpI,GAAGpF,EAAGqD,KAAKmK,UAAUpI,GAAGnF,EAAGoD,KAAKmK,UAAUpI,GAAGyB,QAAS,CAC9KxD,KAAK6R,QAAQ7R,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAGe,OAC/EG,KAAKqN,YAAYpL,OAAOnD,EAAG,GAC3BkB,KAAK6R,QAAQ7R,KAAKmK,UAAUpI,GAAGpF,EAAGqD,KAAKmK,UAAUpI,GAAGnF,EAAG,SACvDoD,KAAK4S,wBAAwB7Q,GAC7B,MAKF/B,KAAKmN,YAEPnN,KAAKmK,UAAU9H,QAAQ,SAAA0G,GAClBlN,KAAK0B,yBAAyB2U,EAAKnF,KAAKpQ,EAAGuV,EAAKnF,KAAKnQ,EAAGsV,EAAKnF,KAAKvJ,OAAQuF,EAASpM,EAAGoM,EAASnM,EAAGmM,EAASvF,UAC5G0O,EAAKL,QAAQK,EAAKnF,KAAKpQ,EAAGuV,EAAKnF,KAAKnQ,EAAGsV,EAAKnF,KAAKlN,OACjDqS,EAAK9D,gBAAgB8B,QAAQ,kBAC7BgC,EAAKW,aAMX,IAAI,IAAI/T,EAAI,EAAGA,EAAIkB,KAAK4D,SAAS7E,OAAQD,IAAK,CAC5C,GAAGjD,KAAK0B,yBAAyByC,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAGoD,KAAK+M,KAAKvJ,OAAQxD,KAAK4D,SAAS9E,GAAG8L,IAAIjO,EAAGqD,KAAK4D,SAAS9E,GAAG8L,IAAIhO,EAAGoD,KAAK4D,SAAS9E,GAAG0E,QAAS,CACrJxD,KAAK6R,QAAQ7R,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAGoD,KAAK+M,KAAKlN,OACjDG,KAAK+M,KAAKnJ,SAAS5D,KAAK4D,SAAS9E,GAAG2D,OAAQ,EACzCzC,KAAK+M,KAAK/I,cAAchE,KAAK4D,SAAS9E,GAAG2D,MAAQ,EAClDzC,KAAK+M,KAAK+F,qBAAqB9S,KAAK4D,SAAS9E,GAAG2D,KAAMzC,KAAK4D,SAAS9E,GAAG4D,OAGvE1C,KAAK+M,KAAKgG,qBAAqB/S,KAAK4D,SAAS9E,GAAG2D,KAAMzC,KAAK4D,SAAS9E,GAAG4D,OAEzE1C,KAAK+M,KAAK/I,cAAchE,KAAK4D,SAAS9E,GAAG2D,OAASzC,KAAK4D,SAAS9E,GAAG4D,MACnE1C,KAAKgT,kBAAkBhT,KAAK4D,SAAS9E,GAAG2D,MACX,IAA1BzC,KAAK4D,SAAS9E,GAAG2D,OAClBzC,KAAK+M,KAAK7J,WAAY,EACtBlD,KAAK+M,KAAK5J,WAAanD,KAAK+M,KAAK9J,KAAO,GAE1CjD,KAAK4D,SAAS3B,OAAOnD,EAAG,GACxB,MAEF,IAAI,IAAIiD,EAAI,EAAGA,EAAI/B,KAAKgN,KAAKjO,OAAQgD,IACnC,GAAGlG,KAAK0B,yBAAyByC,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAGoD,KAAKgN,KAAKjL,GAAGyB,OAAQxD,KAAK4D,SAAS9E,GAAG8L,IAAIjO,EAAGqD,KAAK4D,SAAS9E,GAAG8L,IAAIhO,EAAGoD,KAAK4D,SAAS9E,GAAG0E,QAAS,CAC9JxD,KAAK6R,QAAQ7R,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAGoD,KAAKgN,KAAKjL,GAAGlC,OAC1DG,KAAKgN,KAAKjL,GAAG6B,SAAS5D,KAAK4D,SAAS9E,GAAG2D,OAAQ,EAC/CzC,KAAKgN,KAAKjL,GAAGiC,cAAchE,KAAK4D,SAAS9E,GAAG2D,OAASzC,KAAK4D,SAAS9E,GAAG4D,MACzC,IAA1B1C,KAAK4D,SAAS9E,GAAG2D,OAClBzC,KAAKgN,KAAKjL,GAAGmB,WAAY,EACzBlD,KAAKgN,KAAKjL,GAAGuH,iBAEftJ,KAAK4D,SAAS3B,OAAOnD,EAAG,GACxB,OAKN,IAAI,IAAIA,EAAI,EAAGA,EAAIkB,KAAK4D,SAAS7E,OAAQD,IACvC,IAAI,IAAImU,EAAI,EAAGA,EAAIjT,KAAKmK,UAAUpL,OAAQkU,IACxC,GAAGpX,KAAK0B,yBAAyByC,KAAKmK,UAAU8I,GAAGtW,EAAGqD,KAAKmK,UAAU8I,GAAGrW,EAAGoD,KAAKmK,UAAU8I,GAAGzP,OAAQxD,KAAK4D,SAAS9E,GAAG8L,IAAIjO,EAAGqD,KAAK4D,SAAS9E,GAAG8L,IAAIhO,EAAGoD,KAAK4D,SAAS9E,GAAG0E,QAAS,CAC7KxD,KAAK6R,QAAQ7R,KAAK4D,SAAS9E,GAAG8L,IAAIjO,EAAGqD,KAAK4D,SAAS9E,GAAG8L,IAAIhO,EAAGoD,KAAK4D,SAAS9E,GAAGe,OAC9EG,KAAK4D,SAAS3B,OAAOnD,EAAG,GACxB,MAKN,IAAI,IAAIA,EAAI,EAAGA,EAAIkB,KAAKgN,KAAKjO,OAAQD,IACnC,IAAI,IAAIiD,EAAI,EAAGA,EAAI/B,KAAKmK,UAAUpL,OAAQgD,IACxC,GAAG/B,KAAKkT,gBAAgBlT,KAAKgN,KAAKlO,GAAIkB,KAAKmK,UAAUpI,IAAK,CACxD/B,KAAK6R,QAAQ7R,KAAKgN,KAAKlO,GAAGnC,EAAGqD,KAAKgN,KAAKlO,GAAGlC,EAAGoD,KAAKgN,KAAKlO,GAAGe,OAC1DG,KAAKmT,WAAWrU,GAChB,MAKN,GAAGkB,KAAKgN,KAAKjO,OAAS,EACpB,IAAI,IAAID,EAAI,EAAGA,EAAIkB,KAAKgN,KAAKjO,OAAQD,IACnC,IAAI,IAAIiD,EAAIjD,EAAI,EAAGiD,EAAI/B,KAAKgN,KAAKjO,OAAQgD,IACvC,GAAGlG,KAAK0B,yBAAyByC,KAAKgN,KAAKlO,GAAGnC,EAAGqD,KAAKgN,KAAKlO,GAAGlC,EAAGoD,KAAKgN,KAAKlO,GAAGoK,SAAUlJ,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAGoD,KAAKgN,KAAKjL,GAAGmH,UAAW,CACpH,WAAtBlJ,KAAKgN,KAAKlO,GAAG2D,MAA2C,UAAtBzC,KAAKgN,KAAKlO,GAAG2D,MAAsBzC,KAAKgN,KAAKlO,GAAGoE,WACpFlD,KAAK4R,cAAc5R,KAAKgN,KAAKlO,GAAIkB,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,GAEtC,WAAtBoD,KAAKgN,KAAKjL,GAAGU,MAA2C,UAAtBzC,KAAKgN,KAAKlO,GAAG2D,MAAsBzC,KAAKgN,KAAKlO,GAAGoE,WACpFlD,KAAK4R,cAAc5R,KAAKgN,KAAKjL,GAAI/B,KAAKgN,KAAKlO,GAAGnC,EAAGqD,KAAKgN,KAAKlO,GAAGlC,GAGhE,IAAI0G,EAAMzH,KAAKa,aAAasD,KAAKgN,KAAKlO,GAAGnC,EAAGqD,KAAKgN,KAAKlO,GAAGlC,EAAGoD,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,GAEzFoD,KAAKgN,KAAKlO,GAAGsS,UAAU9N,EAAMzH,KAAKE,IAElCiE,KAAKgN,KAAKjL,GAAGqP,UAAU9N,GAM3BtD,KAAKmN,YACPnN,KAAKgN,KAAK3K,QAAQ,SAAA0N,GACblU,KAAK0B,yBAAyB2U,EAAKnF,KAAKpQ,EAAGuV,EAAKnF,KAAKnQ,EAAGsV,EAAKnF,KAAKvJ,OAAQuM,EAAIpT,EAAGoT,EAAInT,EAAGmT,EAAIvM,UAC7F0O,EAAKL,QAAQK,EAAKnF,KAAKpQ,EAAGuV,EAAKnF,KAAKnQ,EAAGsV,EAAKnF,KAAKlN,OACjDqS,EAAK9D,gBAAgB8B,QAAQ,kBAC7BgC,EAAKW,aAMX,IAAI,IAAI/T,EAAI,EAAGA,EAAIkB,KAAKqN,YAAYtO,OAAQD,IAAK,CAC/C,IAAIkB,KAAKmN,YAActR,KAAK0B,yBAAyByC,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAG0E,OACrHxD,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAGoD,KAAK+M,KAAKvJ,QAAS,CAC1CxD,KAAK+M,KAAKnJ,SAAS,IACpB5D,KAAK6R,QAAQ7R,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAG,WACvCoD,KAAK+M,KAAKnJ,SAAS,IAAK,EACxB5D,KAAK+M,KAAK/I,cAAc,GAAK,IAG7BhE,KAAK6R,QAAQ7R,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,EAAGoD,KAAK+M,KAAKlN,OACjDG,KAAKoO,gBAAgB8B,QAAQ,kBAC7BlQ,KAAK6S,WAEP7S,KAAK6R,QAAQ7R,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAGe,OAC/EG,KAAKqN,YAAYpL,OAAOnD,EAAG,GAC3B,MAEF,IAAI,IAAIiD,EAAI,EAAGA,EAAI/B,KAAKgN,KAAKjO,OAAQgD,IACnC,GAA0B,WAAtB/B,KAAKgN,KAAKjL,GAAGU,MAA2C,UAAtBzC,KAAKgN,KAAKjL,GAAGU,MAAqBzC,KAAKgN,KAAKjL,GAAG1B,QAAUL,KAAKgN,KAAKjL,GAAG2H,OAiBvG,GAAI7N,KAAK0B,yBAAyByC,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAG0E,OACvGxD,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAGoD,KAAKgN,KAAKjL,GAAGyB,QAAS,CACjDxD,KAAKgN,KAAKjL,GAAG6B,SAAS,IACvB5D,KAAK6R,QAAQ7R,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAG,WAC7CoD,KAAKgN,KAAKjL,GAAG6B,SAAS,IAAK,EAC3B5D,KAAKgN,KAAKjL,GAAGiC,cAAc,GAAK,IAGhChE,KAAK6R,QAAQ7R,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAGoD,KAAKgN,KAAKjL,GAAGlC,OAC1DG,KAAKmT,WAAWpR,GAChB/B,KAAKoO,gBAAgB8B,QAAQ,mBAE/BlQ,KAAK6R,QAAQ7R,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAGe,OAC/EG,KAAKqN,YAAYpL,OAAOnD,EAAG,GAC3B,YA9BF,GAAGkB,KAAKoT,iBAAiBpT,KAAKgN,KAAKjL,GAAI/B,KAAKqN,YAAYvO,IAAK,CACxDkB,KAAKgN,KAAKjL,GAAG6B,SAAS,IACvB5D,KAAK6R,QAAQ7R,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAG,WAC7CoD,KAAKgN,KAAKjL,GAAG6B,SAAS,IAAK,EAC3B5D,KAAKgN,KAAKjL,GAAGiC,cAAc,GAAK,IAGhChE,KAAK6R,QAAQ7R,KAAKgN,KAAKjL,GAAGpF,EAAGqD,KAAKgN,KAAKjL,GAAGnF,EAAGoD,KAAKgN,KAAKjL,GAAGlC,OAC1DG,KAAKmT,WAAWpR,GAChB/B,KAAKoO,gBAAgB8B,QAAQ,mBAE/BlQ,KAAK6R,QAAQ7R,KAAKqN,YAAYvO,GAAGnC,EAAGqD,KAAKqN,YAAYvO,GAAGlC,EAAGoD,KAAKqN,YAAYvO,GAAGe,OAC/EG,KAAKqN,YAAYpL,OAAOnD,EAAG,GAC3B,OAqCR,IAbGkB,KAAKqO,OAAO,KAAOrO,KAAKqO,OAAO,OAChCrO,KAAK+M,KAAK3J,MAAME,KAAO,IACpBtD,KAAK+M,KAAK3J,MAAME,MAAQzH,KAAKC,MAC9BkE,KAAK+M,KAAK3J,MAAME,KAAOzH,KAAKC,OAI7BkE,KAAKqO,OAAO,KAAOrO,KAAKqO,OAAO,OAChCrO,KAAK+M,KAAK3J,MAAME,KAAO,IACpBtD,KAAK+M,KAAK3J,MAAME,KAAOzH,KAAKC,MAC7BkE,KAAK+M,KAAK3J,MAAME,KAAOzH,KAAKC,MAG5BkE,KAAKoN,cAAgB,MAAQpN,KAAKmN,WAGpC,GAFAnN,KAAK+M,KAAKtJ,UAAW,EAElBzD,KAAKqO,OAAO,KAAOrO,KAAK+M,KAAKzL,OAAS,EAAG,CAC1CtB,KAAK+M,KAAKtJ,UAAW,EACrBzD,KAAK+M,KAAKzL,QACVtB,KAAK+M,KAAK7I,WAAW5C,MAAQtB,KAAK+M,KAAKzL,MACvCtB,KAAK+M,KAAKpM,YAAkC,EAAtBX,KAAK+M,KAAK3J,MAAMC,KACtC,IAAIzB,EAAe/F,KAAKS,MAAMT,KAAKG,cAAc,EAAG,IACpDgE,KAAK+M,KAAKjL,gBAAgBF,QAGvB,GAAK5B,KAAKqO,OAAO,KAAOrO,KAAKqO,OAAO,IAAM,CAC7CrO,KAAK+M,KAAKpM,YAAYX,KAAK+M,KAAK3J,MAAMC,KACtC,IAAIzB,EAAe/F,KAAKS,MAAMT,KAAKG,cAAc,EAAG,IACpDgE,KAAK+M,KAAKjL,gBAAgBF,GAe9B,IAXG5B,KAAKqO,OAAO,KAAQrO,KAAK+M,KAAK7J,WAAclD,KAAKmN,aAClDnN,KAAKqT,mBACLrT,KAAKoO,gBAAgB8B,QAAQ,UAG5BlQ,KAAKqO,OAAO,KAAOrO,KAAK+N,UAAY,IAAM/N,KAAKmN,YAAmC,KAArBnN,KAAKgO,cACnEhO,KAAKsT,WACLtT,KAAK+N,YACL/N,KAAKgO,gBAGHhO,KAAKmN,WACP,IAAI,IAAIrO,EAAI,EAAGA,EAAIkB,KAAKgN,KAAKjO,OAAQD,IAAK,CACxC,IAAIiR,EAAM/P,KAAKgN,KAAKlO,GACpBiR,EAAI5M,aACD4M,EAAI5M,YAAc,IACnBnD,KAAK4R,cAAc7B,EAAK/P,KAAK+M,KAAKpQ,EAAGqD,KAAK+M,KAAKnQ,GAC/CmT,EAAIzG,iBAMPtJ,KAAKgO,YAAc,KACpBhO,KAAKgO,cACFhO,KAAKgO,aAAe,IACrBhO,KAAKgO,YAAc,KAKvB,IAAI,IAAIlP,EAAI,EAAGA,EAAIkB,KAAKqN,YAAYtO,OAAQD,IACT,UAA9BkB,KAAKqN,YAAYvO,GAAGe,MACrBG,KAAKqN,YAAYvO,GAAGkD,OAAOhC,KAAKgN,MAGhChN,KAAKqN,YAAYvO,GAAGkD,OAAOhC,KAAK+M,MAE/B/M,KAAKqN,YAAYvO,GAAGwF,iBACrBtE,KAAKqN,YAAYpL,OAAOnD,EAAG,GAK/B,IAAI,IAAIiD,EAAI,EAAGA,EAAI/B,KAAK0B,UAAU3C,OAAQgD,IACxC/B,KAAK0B,UAAUK,GAAGC,SACfhC,KAAK0B,UAAUK,GAAGjC,MAAQ,GAC3BE,KAAK0B,UAAUO,OAAOF,EAAG,GAK7B/B,KAAKuT,kDAME,IAAAC,EAAAxT,KAEPA,KAAKgP,kBAAkBlO,UAAY,QACnCd,KAAKgP,kBAAkB9M,YAAc,OACrClC,KAAKgP,kBAAkBnM,KAAO,uBAE9B7C,KAAKgP,kBAAkB5M,SAAS,EAAE,EAAGpC,KAAKyM,WAAYzM,KAAKyM,YAGxDzM,KAAKmN,aAAenN,KAAKkO,WAC1BlO,KAAKgP,kBAAkBnO,OACvBb,KAAKgP,kBAAkBjO,YAAc,GACrCf,KAAKgP,kBAAkBiD,WAAW,aAAc,IAAK,KACrDjS,KAAKgP,kBAAkB5N,WAGzBpB,KAAKgN,KAAK3K,QAAQ,SAAA0N,GAChBA,EAAIxN,OAAOiR,EAAKxE,uBAGdhP,KAAKmN,YAAcnN,KAAKoN,cAAgB,MAC1CpN,KAAK+M,KAAKxK,OAAOvC,KAAKgP,mBAGxBhP,KAAKmK,UAAU9H,QAAQ,SAAA0G,GACrBA,EAASxG,OAAOiR,EAAKxE,qBAGvBhP,KAAKqN,YAAYhL,QAAQ,SAAA8O,GACvBA,EAAW5O,OAAOiR,EAAKxE,qBAEzBhP,KAAK4D,SAASvB,QAAQ,SAAAoR,GACpBA,EAAQlR,OAAOiR,EAAKxE,qBAGtBhP,KAAK0B,UAAUW,QAAQ,SAAAC,GACrBA,EAASC,OAAOiR,EAAKxE,qBAEvBhP,KAAK2N,OAAOtL,QAAQ,SAAAqR,GAClBA,EAAMnR,OAAOiR,EAAKxE,qBAEpBhP,KAAK4N,WAAWL,MAAMhL,OAAOvC,KAAKgP,mBAClChP,KAAK4N,WAAWH,MAAMlL,OAAOvC,KAAKgP,mBAClChP,KAAK4N,WAAWF,MAAMnL,OAAOvC,KAAKgP,mBAGlChP,KAAKiP,oBAAoB0E,UAAU3T,KAAKsM,iBAAkB,EAAG,kCAOzDtM,KAAKmO,QAAWnO,KAAKkO,WACvBlO,KAAKgC,SACLhC,KAAKuC,UAEJvC,KAAKkO,WACNlO,KAAKiP,oBAAoBpM,KAAO,uBAChC7C,KAAKiP,oBAAoBgD,WAAW,YAAa,IAAK,KACtDjS,KAAKiP,oBAAoBgD,WAAW,iBAAkB,IAAK,MAE1DjS,KAAKmO,SACNnO,KAAKiP,oBAAoBpM,KAAO,uBAChC7C,KAAKiP,oBAAoBgD,WAAW,SAAU,IAAK,8DChhCpC2B,aACpB,SAAAA,IAAerV,EAAAyB,KAAA4T,GACd5T,KAAKwM,YAAc,IACnBxM,KAAK6T,UAAY,YACjB7T,KAAK8T,YAAc,EACnB9T,KAAK+T,QAAU,CAAC,QAAS,UAAW,YAGpC/T,KAAKsM,iBAAmB0H,SAASC,eAAe,UAChDjU,KAAKsM,iBAAiB/K,MAAQvB,KAAKwM,YACnCxM,KAAKsM,iBAAiB9K,OAASxB,KAAKwM,YACpCxM,KAAKgP,kBAAoBhP,KAAKsM,iBAAiB4H,WAAW,MAG1DlU,KAAKmU,mBAAqBH,SAASC,eAAe,UAClDjU,KAAKmU,mBAAmB5S,MAAQvB,KAAKwM,YACrCxM,KAAKmU,mBAAmB3S,OAASxB,KAAKwM,YACtCwH,SAASI,KAAKC,YAAYrU,KAAKmU,oBAC/BnU,KAAKiP,oBAAsBjP,KAAKmU,mBAAmBD,WAAW,MAE9DlU,KAAKuC,OAASvC,KAAKuC,OAAO4M,KAAKnP,MAC/BA,KAAKoP,cAAgBpP,KAAKoP,cAAcD,KAAKnP,MAC7CsP,OAAOgF,YAActU,KAAKuU,gBAC1BjF,OAAOC,UAAYvP,KAAKoP,cAExBpP,KAAKyP,SAAWC,YAAY1P,KAAKuC,OAAQ,GAAK,mDAGjCoN,GACbA,EAAMC,iBAEgB,cAAnB5P,KAAK6T,WAEc,KAAlBlE,EAAME,SACR7P,KAAKwU,YAAYxU,KAAK+T,QAAQ/T,KAAK8T,cAGf,KAAlBnE,EAAME,SAAoC,KAAlBF,EAAME,UAChC7P,KAAK8T,cACF9T,KAAK8T,YAAc,IACrB9T,KAAK8T,YAAc9T,KAAK+T,QAAQhV,OAAS,IAItB,KAAlB4Q,EAAME,SAAoC,KAAlBF,EAAME,UAChC7P,KAAK8T,cACF9T,KAAK8T,aAAe9T,KAAK+T,QAAQhV,SACnCiB,KAAK8T,YAAc,KAIK,aAAnB9T,KAAK6T,YACZ7T,KAAK6T,UAAY,iDAIPY,GACX,OAAQA,GACP,IAAK,QACJ,IAAIrI,EAAKpM,KAAKgP,kBAAmBhP,KAAKsM,iBAAkBtM,KAAKiP,oBAAqBjP,KAAKwM,aACvFxM,KAAK6T,UAAY,OACjBa,cAAc1U,KAAKyP,UACnB,MACD,IAAK,WACJzP,KAAK6T,UAAY,+CASnB7T,KAAKgP,kBAAkBlO,UAAY,QACnCd,KAAKgP,kBAAkBnM,KAAO,aAE9B7C,KAAKgP,kBAAkB5M,SAAS,EAAE,EAAGpC,KAAKwM,YAAaxM,KAAKwM,aAE5DxM,KAAKgP,kBAAkBnO,OACvBb,KAAKgP,kBAAkBlO,UAAY,OAEnC,IADA,IAAI6T,EAAS,GACL7V,EAAI,EAAGA,EAAIkB,KAAK+T,QAAQhV,OAAQD,IACpCkB,KAAK8T,cAAgBhV,EACvBkB,KAAKgP,kBAAkB9M,YAAc,OAGrClC,KAAKgP,kBAAkB9M,YAAc,OAEtClC,KAAKgP,kBAAkB7M,WAA8B,IAAnBnC,KAAKwM,YAAoBxM,KAAKwM,YAAcmI,EAA2B,GAAnB3U,KAAKwM,YAAsC,GAAnBxM,KAAKwM,aACnHmI,GAAU,IAGX3U,KAAKgP,kBAAkBlM,SAAS,QAA4B,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aACvExM,KAAKgP,kBAAkBlM,SAAS,UAA8B,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aACzExM,KAAKgP,kBAAkBlM,SAAS,WAA+B,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aAC1ExM,KAAKgP,kBAAkB5N,UAEvBpB,KAAKiP,oBAAoB0E,UAAU3T,KAAKsM,iBAAkB,EAAG,0CAK7DtM,KAAKgP,kBAAkBlO,UAAY,QACnCd,KAAKgP,kBAAkBnM,KAAO,aAE9B7C,KAAKgP,kBAAkB5M,SAAS,EAAE,EAAGpC,KAAKwM,YAAaxM,KAAKwM,aAC5DxM,KAAKgP,kBAAkBnO,OACvBb,KAAKgP,kBAAkBlO,UAAY,OACnCd,KAAKgP,kBAAkBlM,SAAS,0BAA8C,GAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aACzFxM,KAAKgP,kBAAkBlM,SAAS,+BAAmD,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aAC9FxM,KAAKgP,kBAAkBlM,SAAS,iCAAqD,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aAChGxM,KAAKgP,kBAAkBlM,SAAS,kBAAsC,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aACjFxM,KAAKgP,kBAAkBlM,SAAS,eAAmC,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aAC9ExM,KAAKgP,kBAAkBlM,SAAS,cAAkC,IAAnB9C,KAAKwM,YAAuC,IAAnBxM,KAAKwM,aAC7ExM,KAAKgP,kBAAkBlM,SAAS,qBAAyC,IAAnB9C,KAAKwM,YAAuC,GAAnBxM,KAAKwM,aACpFxM,KAAKgP,kBAAkB5N,UACvBpB,KAAKiP,oBAAoB0E,UAAU3T,KAAKsM,iBAAkB,EAAG,oCAIvC,cAAnBtM,KAAK6T,UACP7T,KAAK4U,WAEqB,aAAnB5U,KAAK6T,WACZ7T,KAAK6U,wBAKR,IAAIjB","file":"static/js/main.1172fc66.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  var dx = x1 - x2;\r\n  var dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n/** @class Particle\r\n  * class to handle a particle's life\r\n  */\r\nexport default class Particle {\r\n  /** @constructor\r\n    * initialization of a particle\r\n    * @param floats x,y - position of the particle\r\n    * @param float direction - direction the particle will travel\r\n    * @param int speed - velocity of the particle\r\n    * @param string color - color of the particle\r\n    * @param int life - how many iterations the particle will last for\r\n    */\r\n  constructor(x, y, direction, speed, color, life, decay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.life = life;\r\n    this.decay = decay\r\n    this.color = color;\r\n    this.alpha = 1.0;\r\n    this.values = {high: 1.0, low: 0.7};\r\n    this.clock = 10;\r\n    this.speed = Math.randomInt(1, speed);\r\n    this.direction = direction;\r\n    this.speedX = Math.cos(direction) * this.speed;\r\n    this.speedY = -Math.sin(direction) * this.speed;\r\n  }\r\n\r\n  changeAlpha() {\r\n    if(this.alpha === this.values.high) {\r\n      this.alpha = this.values.low;\r\n    }\r\n    else {\r\n      this.alpha = this.values.high;\r\n    }\r\n  }\r\n\r\n  updateSpeed() {\r\n    this.speedX = Math.cos(this.direction) * this.speed;\r\n    this.speedY = -Math.sin(this.direction) * this.speed;\r\n  }\r\n\r\n  /** @function update()\r\n    * function to updates the particle if it hasn't hit the decay distance\r\n    */\r\n  update() {\r\n    this.clock--;\r\n    if(this.clock <= 0) {\r\n      this.clock = 10;\r\n      this.changeAlpha();\r\n    }\r\n    this.life--;\r\n    if(this.decay && this.speed > 0) {\r\n      this.speed -= 0.05;\r\n      this.updateSpeed();\r\n    }\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n  /** @function render()\r\n    * standard render function\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.globalAlpha = this.alpha;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, 1, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = [];\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.push(new Particle(x, y, 0, 5.0, 'green', 75, false));\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(3);\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0 || this.particles[j].x > this.x - this.width / 2 + this.fillLength) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUpDisplay {\r\n  constructor(x, y, type, timer) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.timer = timer;\r\n    this.type = type;\r\n    this.initColor();\r\n  }\r\n\r\n  initColor() {\r\n    switch (this.type) {\r\n      case 1:\r\n        this.color = 'red';\r\n        this.string = 'Homing: ';\r\n        break;\r\n      case 2:\r\n        this.color = 'red';\r\n        this.string = 'Rapid: '\r\n        break;\r\n      case 3:\r\n        this.color = 'magenta';\r\n        this.string = 'Shield: ';\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = \"25px Arial\";\r\n    ctx.globalAlpha = 0.60;\r\n    ctx.fillText(this.string + (this.timer / 60).toFixed(1), this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\nimport BoostBar from './boostBar.js';\r\nimport PowerUpDisplay from './powerUpTimer.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    //Velocity to determine the magnitude/direction of the ship\r\n    //This is actually acceleration...\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //particles for thruster trail\r\n    this.particles = [];\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.powerUpDisplays = {1: '', 2: '', 3: ''};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    var x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    var y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(var i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      var dx = x + Math.randomBetween(-3, 3);\r\n      var dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      var angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 3.0, 'blue', 35, true));\r\n      }\r\n      else {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 2.0, 'red', 20, true));\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        this.powerUpDisplays[i].timer--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n          this.powerUpDisplays[i] = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  createPowerUpDisplay(type, timer) {\r\n    if(type === 1) {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.40, type, timer);\r\n    }\r\n    else if(type === 2) {\r\n      this.powerUpDisplays[type]= new PowerUpDisplay(5, 1000 * 0.50, type, timer);\r\n    }\r\n    else {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.60, type, timer);\r\n    }\r\n  }\r\n\r\n  updatePowerUpDisplay(type, amount) {\r\n    this.powerUpDisplays[type].timer += amount;\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    for(let i = 1; i < 4; i ++) {\r\n      if(this.powerUpDisplays[i] !== '') {\r\n        this.powerUpDisplays[i].render(ctx);\r\n      }\r\n    }\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    var mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    var segments = 24;\r\n    //15 degree increments\r\n    var angle = Math.tau / segments;\r\n    var randomRadius = this.radius;\r\n    var x;\r\n    var y;\r\n    for(var i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    var mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(var i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    //Particle trail of the projectile\r\n    this.particles = [];\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    var x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    var y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(var i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      var dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      var dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particles.push(new Particle(dx, dy, Math.PI * this.velocity.dir, 1.0, this.color, 10, true));\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000|| this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(3, 6));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    //Particle effect for the trail\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.5;\r\n    this.target = null;\r\n    this.past = [];\r\n    this.width = 1;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  storePast() {\r\n    let point = {x: this.x, y: this.y};\r\n    this.past.push(point);\r\n    if(this.past.length > 30) {\r\n      this.past.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  alterPast() {\r\n    this.past.forEach(point => {\r\n      point.x += Math.randomBetween(-1, 1);\r\n      point.y += Math.randomBetween(-1, 1);\r\n    });\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    this.storePast();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.alterPast();\r\n  }\r\n\r\n  render(ctx) {\r\n    super.render(ctx);\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    for(let i = 0; i < this.past.length - 1; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.past[i].x, this.past[i].y);\r\n      ctx.lineTo(this.past[i + 1].x, this.past[i + 1].y);\r\n      ctx.stroke();\r\n      ctx.lineWidth += 0.1;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\nimport Particle from './particles.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    var color;\r\n    var random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger' || this.color === 'Elite') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger' || this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    var xi;\r\n    var xf;\r\n    var yi;\r\n    var yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    var numSegments = 6;\r\n    for(var i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      var cos = Math.cos(i * Math.PI / 3);\r\n      var sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(var i = 0; i < numParticles; i++) {\r\n      var angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      var x = this.x - Math.cos(angle) * this.radius;\r\n      var y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.particles.push(new Particle(dx, dy, angle + Math.PI / 6, 2.0, this.color, 20, true));\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    super.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      if(this.asteroid.destroyed) {\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//16.6 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1000;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//60 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 3600;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tvar xi;\r\n\t\tvar xf;\r\n\t\tvar yi;\r\n\t\tvar yf;\r\n\t\tvar numSegments = 2;\r\n\t\tfor(var i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tvar cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tvar sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        this.life = 80;\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class HUDObject {\r\n  constructor(x, y, type, information) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.info = information;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.font = \"30px Arial\";\r\n    ctx.globalAlpha = 0.70;\r\n    ctx.fillText(this.type + this.info, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    /*this.theme = new Audio('./theme.wav');\r\n    this.theme.volume = 0.01;\r\n    this.theme.loop = true;\r\n    this.theme.play();*/\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport Particle from './particles.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport HUDObject from './hud.js';\r\nimport './math.js';\r\nimport AudioController from './audiocontroller.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth) {\r\n    this.screenSide = screenWidth;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 6;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 3;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = new AudioController();\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    /*//HUD\r\n    this.HUDcanvas = document.getElementById('ui');\r\n    this.HUDcanvas.width = this.screenSide;\r\n    this.HUDcanvas.height = 100;\r\n    this.HUDcontext = this.HUDcanvas.getContext('2d');\r\n    document.body.appendChild(this.HUDcanvas); */\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 3;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n    if(event.keyCode === 80) {\r\n      if(this.paused) {\r\n        this.paused = false;\r\n      }\r\n      else {\r\n        this.paused = true;\r\n      }\r\n    }\r\n    if(event.keyCode === 192) {\r\n      this.masterReset();\r\n    }\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  initHUD() {\r\n    this.hudObjects.score = new HUDObject(this.screenSide * 0.45, this.screenSide * 0.05, 'Score: ', this.score);\r\n    this.hudObjects.lives = new HUDObject(this.screenSide * 0.03, this.screenSide * 0.97, 'Lives: ', this.lives);\r\n    this.hudObjects.level = new HUDObject(this.screenSide * 0.87, this.screenSide * 0.97, 'Level: ', this.level);\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    var x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    var y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    var dx = ufo.x - tx;\r\n    var dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    var distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    var direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    var x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    var y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n    }\r\n    this.audioController.trigger('shoot');\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    var x;\r\n    var y;\r\n    var radius;\r\n    var mass;\r\n    //Var to control the while loop\r\n    var currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      var spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    var x;\r\n    var y;\r\n    var radius = 25;\r\n    var currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      var collision = false;\r\n      var spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    var xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    var yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    var xDist = otherAsteroid.x - asteroid.x;\r\n    var yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        var angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        var m1 = asteroid.mass;\r\n        var m2 = otherAsteroid.mass;\r\n\r\n        // Velocity before equation\r\n        var u1 = this.rotate(asteroid.velocity, angle);\r\n        var u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        var v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        var v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        var vFinal1 = this.rotate(v1, -angle);\r\n        var vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    var distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      var direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateScore(amount) {\r\n    this.score += amount;\r\n    this.hudObjects.score.info = this.score;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    var asteroid = this.asteroids[aID];\r\n    var mass = asteroid.mass;\r\n    var x = asteroid.x;\r\n    var y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.updateScore(points);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      var random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      var direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      var angleChange = Math.tau / random;\r\n      for(var i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        var newX = x + Math.cos(direction) * mass;\r\n        var newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    var dx = ship.x - asteroid.x;\r\n    var dy = ship.y - asteroid.y;\r\n    var distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid)\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    var numParticles = Math.randomInt(30, 70);\r\n    var dir = Math.randomBetween(0, Math.tau);\r\n    var speed = Math.randomInt(3,5);\r\n    var life = Math.randomInt(30, 40);\r\n    for(var i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles.push(new Particle(x, y, Math.PI + dir, speed, color, life, true));\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    var x = Math.randomBetween(100, 900);\r\n    var y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    var buffer = 50;\r\n    var collision = false;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.asteroids.forEach(asteroid => {\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.projectiles.forEach(projectile => {\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.lives--;\r\n    this.hudObjects.lives.info = this.lives;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      /*this.theme.loop = false;\r\n      this.theme.pause();*/\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    this.updateScore(this.ufos[ufoID].bounty);\r\n    this.popups.push(new PopUp(this.ufos[ufoID].x, this.ufos[ufoID].y, this.ufos[ufoID].bounty, 'blip'));\r\n    if(this.ufos[ufoID].bounty === 500) {\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - 50, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + 50, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    //Update UFO if applicable\r\n    this.ufos.forEach(ufo => {\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    });\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n    //Update each asteroid\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.update();\r\n    });\r\n    let test = Math.ceil(this.level * this.level / 2) + 1;\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (test) === 0) {\r\n      this.level++;\r\n      this.hudObjects.level.info = this.level;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 3 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = 3 + this.level;\r\n      if(this.constAsteroids > this.MAXASTEROIDS) {\r\n        this.constAsteroids = this.MAXASTEROIDS;\r\n      }\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        let scaling = (this.ufos.length / this.level);\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * scaling, this.UFOTIME * 2 * scaling);\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      let ratio = (this.powerups.length * 2 / this.level)\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * ratio, this.POWERTIME * 2 * ratio)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    for(let i = 0; i < this.asteroids.length; i++) {\r\n      for(let j = i + 1; j < this.asteroids.length; j++) {\r\n        if(Math.circleCollisionDetection(this.asteroids[i].x, this.asteroids[i].y, this.asteroids[i].radius, this.asteroids[j].x, this.asteroids[j].y, this.asteroids[j].radius)) {\r\n          this.particleCollision(this.asteroids[i], this.asteroids[j]);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        if(Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius, this.asteroids[j].x, this.asteroids[j].y, this.asteroids[j].radius)) {\r\n          this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(this.asteroids[j].x, this.asteroids[j].y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for ship crashing\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[this.powerups[i].type] = true;\r\n        if(this.ship.powerupTimers[this.powerups[i].type] > 0) {\r\n          this.ship.updatePowerUpDisplay(this.powerups[i].type, this.powerups[i].timer);\r\n        }\r\n        else {\r\n          this.ship.createPowerUpDisplay(this.powerups[i].type, this.powerups[i].timer);\r\n        }\r\n        this.ship.powerupTimers[this.powerups[i].type] += this.powerups[i].timer;\r\n        this.createPowerUpBlip(this.powerups[i].type);\r\n        if(this.powerups[i].type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j++) {\r\n        if(Math.circleCollisionDetection(this.ufos[j].x, this.ufos[j].y, this.ufos[j].radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n          this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n          this.ufos[j].powerups[this.powerups[i].type] = true;\r\n          this.ufos[j].powerupTimers[this.powerups[i].type] += this.powerups[i].timer;\r\n          if(this.powerups[i].type === 2) {\r\n            this.ufos[j].reloading = false;\r\n            this.ufos[j].setRateOfFire();\r\n          }\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < this.asteroids.length; k++) {\r\n        if(Math.circleCollisionDetection(this.asteroids[k].x, this.asteroids[k].y, this.asteroids[k].radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n          this.explode(this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].color);\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        if(this.detectShipCrash(this.ufos[i], this.asteroids[j])) {\r\n          this.explode(this.ufos[i].x, this.ufos[i].y, this.ufos[i].color);\r\n          this.destoryUFO(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.ufos.length > 1) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        for(let j = i + 1; j < this.ufos.length; j++) {\r\n          if(Math.circleCollisionDetection(this.ufos[i].x, this.ufos[i].y, this.ufos[i].critical, this.ufos[j].x, this.ufos[j].y, this.ufos[j].critical)) {\r\n            if((this.ufos[i].type === 'Dodger' || this.ufos[i].type === 'Elite') && !this.ufos[i].reloading) {\r\n              this.ufoProjectile(this.ufos[i], this.ufos[j].x, this.ufos[j].y);\r\n            }\r\n            if((this.ufos[j].type === 'Dodger' || this.ufos[i].type === 'Elite') && !this.ufos[i].reloading) {\r\n              this.ufoProjectile(this.ufos[j], this.ufos[i].x, this.ufos[i].y);\r\n            }\r\n            //Get the direction from the first ufo to the second.\r\n            let dir = Math.getDirection(this.ufos[i].x, this.ufos[i].y, this.ufos[j].x, this.ufos[j].y)\r\n            //Point the direction the other way\r\n            this.ufos[i].alterPath(dir + Math.PI);\r\n            //From the second ufo's perspective, this is pointing away from ufo 1\r\n            this.ufos[j].alterPath(dir);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo.x, ufo.y, ufo.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      if(!this.respawning && Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'magenta');\r\n          this.ship.powerups[3] = false;\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        if((this.ufos[j].type === 'Dodger' || this.ufos[j].type === 'Elite') && this.ufos[j].clock === this.ufos[j].CLOCK) {\r\n          if(this.projectileDodger(this.ufos[j], this.projectiles[i])) {\r\n            if(this.ufos[j].powerups[3]) {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, 'magenta');\r\n              this.ufos[j].powerups[3] = false;\r\n              this.ufos[j].powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius,\r\n          this.ufos[j].x, this.ufos[j].y, this.ufos[j].radius)) {\r\n            if(this.ufos[j].powerups[3]) {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, 'magenta');\r\n              this.ufos[j].powerups[3] = false;\r\n              this.ufos[j].powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(4, 8));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 4));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      if(this.projectiles[i].color === 'green') {\r\n        this.projectiles[i].update(this.ufos);\r\n      }\r\n      else {\r\n        this.projectiles[i].update(this.ship);\r\n      }\r\n      if(this.projectiles[i].edgeDetection()) {\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n    //this.drawHUD();\r\n    //Display respawning if needed\r\n    if(this.respawning && !this.gameOver) {\r\n      this.backBufferContext.save();\r\n      this.backBufferContext.globalAlpha = 0.5;\r\n      this.backBufferContext.strokeText(\"RESPAWNING\", 350, 500);\r\n      this.backBufferContext.restore();\r\n    }\r\n    //Draw UFOs\r\n    this.ufos.forEach(ufo => {\r\n      ufo.render(this.backBufferContext);\r\n    });\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    //Draw asteroids\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.render(this.backBufferContext);\r\n    });\r\n    //draw projectiles\r\n    this.projectiles.forEach(projectile => {\r\n      projectile.render(this.backBufferContext);\r\n    });\r\n    this.powerups.forEach(powerup => {\r\n      powerup.render(this.backBufferContext);\r\n    });\r\n    //draw particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(this.backBufferContext);\r\n    });\r\n    this.popups.forEach(popup => {\r\n      popup.render(this.backBufferContext);\r\n    });\r\n    this.hudObjects.score.render(this.backBufferContext);\r\n    this.hudObjects.lives.render(this.backBufferContext);\r\n    this.hudObjects.level.render(this.backBufferContext);\r\n\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.screenBufferContext.font = \"50px Times New Roman\";\r\n      this.screenBufferContext.strokeText(\"GAME OVER\", 350, 500);\r\n      this.screenBufferContext.strokeText(\"Retry? Press ~\", 360, 600);\r\n    }\r\n    if(this.paused) {\r\n      this.screenBufferContext.font = \"50px Times New Roman\";\r\n      this.screenBufferContext.strokeText(\"Paused\", 425, 600);\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = ['start', 'options', 'controls'];\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\t//console.log(event.keyCode);\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttons[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\t\tnew Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth);\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.screenWidth * 0.35, this.screenWidth * scaleY, this.screenWidth * 0.3, this.screenWidth * 0.1);\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Options\", this.screenWidth * 0.42, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n//new Game();\r\n"],"sourceRoot":""}