{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particlePool.js","boostBar.js","powerUpTimer.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","hud.js","game.js","audiocontroller.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","ParticlePool","maxSize","color","speed","this","pool","Float32Array","end","decay","life","randSpeed","vx","sin","vy","cos","lifeNoise","I","last","ctx","save","beginPath","fillStyle","moveTo","arc","fill","restore","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","add","createParticles","update","strokeStyle","globalAlpha","strokeRect","fillRect","render","PowerUpDisplay","type","timer","initColor","string","font","fillText","toFixed","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boostParticles","normalParticles","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","powerUpDisplays","boostGauge","acceleration","angleNoise","angle","edgeDetection","updateVelocity","checkPowerUps","gradient","createRadialGradient","addColorStop","closePath","amount","drawShield","translate","rotate","lineTo","stroke","Asteroid","mass","held","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","push","context","Projectile","initSpeed","particlePool","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","past","shortest","distance","findDistance","findDirection","delta","point","splice","forEach","findTarget","adjustDirection","storePast","alterPast","lineWidth","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","clock","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","j","player","error","magnitude","updateSpeed","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","initTimer","initShape","initRapidLineSegments","rect","PopUp","size","initSettings","HUDObject","information","info","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","audioController","menu","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","initParticlePools","score","highscore","lives","level","popups","hudObjects","initHUD","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","gameState","buttonNames","drawPauseMenu","trigger","ufo","tx","ty","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","updateScore","angleChange","newX","newY","catchAsteroid","ufoProjectile","index","len","explode","stopTheme","playMenu","ufoID","createBlip","HUDcontext","strokeText","checkAsteroidAlignment","initAsteroids","difference","addUFO","scaling","createPowerUp","ratio","particleCollision","handleAsteriodExplosion","respawn","powerUp","updatePowerUpDisplay","createPowerUpDisplay","createPowerUpBlip","k","detectShipCrash","destoryUFO","ufo1","ufo2","projectileDodger","createProjectile","teleport","checkHighScore","drawImage","drawGameOver","AudioController","Audio","pickTheme","sounds","over","collisionSound","volume","explosion","shipExplosion","ufoLaser","homing","teleportSound","shieldBreak","homingPickUp","theme","play","pause","change","sound","muted","Menu","game","highlighted","buttons","musicStarted","initButtons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","handleMouseDown","onmousedown","scaleY","clickButton","clientX","clientY","button","masterReset","stopMenu","playTheme","clearInterval","unmute","mute","drawMenu","drawControls"],"mappings":"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","file":"static/js/main.c69bc102.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  let dx = x1 - x2;\r\n  let dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n\r\nexport default class ParticlePool {\r\n  // 6 floats -> x, y, vx, vy, decay, life\r\n  constructor(maxSize, color, speed) {\r\n    this.pool = new Float32Array(6 * maxSize);\r\n    this.end = 0;\r\n    this.max = maxSize;\r\n    this.color = color;\r\n    this.speed = speed;\r\n  }\r\n\r\n  add(x, y, direction, decay, life) {\r\n    let randSpeed = Math.randomInt(1, this.speed);\r\n    let vx = Math.sin(direction) * randSpeed;\r\n    let vy = -Math.cos(direction) * randSpeed;\r\n    let lifeNoise = life + Math.randomBetween(-0.5, 0.5);\r\n    if(this.end < this.max) {\r\n      this.pool[6*this.end] = x;\r\n      this.pool[6*this.end + 1] = y;\r\n      this.pool[6*this.end + 2] = vx;\r\n      this.pool[6*this.end + 3] = vy;\r\n      this.pool[6*this.end + 4] = decay;\r\n      this.pool[6*this.end + 5] = lifeNoise;\r\n      this.end++;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    for(let i = 0; i < this.end; i++) {\r\n      let I = 6 * i;\r\n      //Update X\r\n      this.pool[I] += this.pool[I + 2];\r\n      //Update Y\r\n      this.pool[I + 1] += this.pool[I + 3];\r\n      //Decay X & Y velocities\r\n      if(Math.abs(this.pool[I + 2]) > 0) {\r\n        if(this.pool[I + 2] > 0) {\r\n          this.pool[I + 2] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 2] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      if(Math.abs(this.pool[I + 3]) > 0) {\r\n        if(this.pool[I + 3] > 0) {\r\n          this.pool[I + 3] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 3] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      //Decrement life\r\n      this.pool[I + 5] -= 0.1;\r\n\r\n      if(this.pool[I + 5] <= 0) {\r\n        let last = 6 * (this.end - 1);\r\n        this.pool[I] = this.pool[last];\r\n        this.pool[I + 1] = this.pool[last + 1];\r\n        this.pool[I + 2] = this.pool[last + 2];\r\n        this.pool[I + 3] = this.pool[last + 3];\r\n        this.pool[I + 4] = this.pool[last + 4];\r\n        this.pool[I + 5] = this.pool[last + 5];\r\n        this.end--;\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    for(let i = 0; i < this.end; i ++) {\r\n      ctx.moveTo(this.pool[6 * i], this.pool[6 * i + 1])\r\n      ctx.arc(this.pool[6 * i], this.pool[6 * i + 1], 1, 0, Math.tau);\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = new ParticlePool(200, 'green', 5.0);\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.add(x, y, Math.PI / 2, 0.0, 7.5);\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(3);\r\n    //Particle effect for the thruster\r\n    this.particles.update();\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    ctx.restore();\r\n    this.particles.render(ctx);\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUpDisplay {\r\n  constructor(x, y, type, timer) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.timer = timer;\r\n    this.type = type;\r\n    this.initColor();\r\n  }\r\n\r\n  initColor() {\r\n    switch (this.type) {\r\n      case 1:\r\n        this.color = 'red';\r\n        this.string = 'Homing: ';\r\n        break;\r\n      case 2:\r\n        this.color = 'green';\r\n        this.string = 'Rapid: '\r\n        break;\r\n      case 3:\r\n        this.color = 'magenta';\r\n        this.string = 'Shield: ';\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = \"25px Arial\";\r\n    ctx.globalAlpha = 0.60;\r\n    ctx.fillText(this.string + (this.timer / 60).toFixed(1), this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\nimport ParticlePool from './particlePool.js';\r\nimport BoostBar from './boostBar.js';\r\nimport PowerUpDisplay from './powerUpTimer.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //size, color, speed\r\n    this.boostParticles = new ParticlePool(210, 'blue', 3.0);\r\n    this.normalParticles = new ParticlePool(80, 'red', 2.0);\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.powerUpDisplays = {1: '', 2: '', 3: ''};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    let x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    let y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      let dx = x + Math.randomBetween(-3, 3);\r\n      let dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      let angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.boostParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 3.5);\r\n      }\r\n      else {\r\n        this.normalParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 2.0);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        this.powerUpDisplays[i].timer--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n          this.powerUpDisplays[i] = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    this.boostParticles.update();\r\n    this.normalParticles.update();\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    let gradient = ctx.createRadialGradient(this.x, this.y, this.radius * 0.5, this.x, this.y, this.radius * 1.3);\r\n    gradient.addColorStop(0, \"black\");\r\n    gradient.addColorStop(1, \"magenta\");\r\n    ctx.fillStyle = gradient;\r\n    ctx.globalAlpha = 0.3;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  createPowerUpDisplay(type, timer) {\r\n    if(type === 1) {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.40, type, timer);\r\n    }\r\n    else if(type === 2) {\r\n      this.powerUpDisplays[type]= new PowerUpDisplay(5, 1000 * 0.50, type, timer);\r\n    }\r\n    else {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.60, type, timer);\r\n    }\r\n  }\r\n\r\n  updatePowerUpDisplay(type, amount) {\r\n    this.powerUpDisplays[type].timer += amount;\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    for(let i = 1; i < 4; i ++) {\r\n      if(this.powerUpDisplays[i] !== '') {\r\n        this.powerUpDisplays[i].render(ctx);\r\n      }\r\n    }\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    this.boostParticles.render(ctx);\r\n    this.normalParticles.render(ctx);\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.held = false;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    let segments = 24;\r\n    //15 degree increments\r\n    let angle = Math.tau / segments;\r\n    let randomRadius = this.radius;\r\n    let x;\r\n    let y;\r\n    for(let i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(let i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    this.particlePool = new ParticlePool(50, this.color, 1.0);\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    let x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    let y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      let dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      let dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particlePool.add(dx, dy, Math.PI * this.velocity.dir, -0.05, 1.0)\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000 || this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(2, 4));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.particlePool.update();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particlePool.render(ctx);\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.25;\r\n    this.target = null;\r\n    this.past = [];\r\n    this.width = 1;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  storePast() {\r\n    let point = {x: this.x, y: this.y};\r\n    this.past.push(point);\r\n    if(this.past.length > 30) {\r\n      this.past.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  alterPast() {\r\n    this.past.forEach(point => {\r\n      point.x += Math.randomBetween(-1, 1);\r\n      point.y += Math.randomBetween(-1, 1);\r\n    });\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    this.storePast();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.alterPast();\r\n  }\r\n\r\n  render(ctx) {\r\n    super.render(ctx);\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    for(let i = 0; i < this.past.length - 1; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.past[i].x, this.past[i].y);\r\n      ctx.lineTo(this.past[i + 1].x, this.past[i + 1].y);\r\n      ctx.stroke();\r\n      ctx.lineWidth += 0.1;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.boostParticles = null;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 75;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.normalParticles.color = this.color;\r\n    this.normalParticles.speed = 1.0;\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    let color;\r\n    let random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Elite') {\r\n      this.CLOCK = 1;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(75, 150);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    let xi;\r\n    let xf;\r\n    let yi;\r\n    let yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    let numSegments = 6;\r\n    for(let i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      let cos = Math.cos(i * Math.PI / 3);\r\n      let sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.held = true;\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid.held = false;\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      let x = this.x - Math.cos(angle) * this.radius;\r\n      let y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.normalParticles.add(x, y, this.velocity.dir + Math.PI, -0.05, 3.0);\r\n      //this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.normalParticles.add(dx, dy, angle, -0.05, 3.0);\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    this.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      let dist = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n      if(this.asteroid.destroyed || dist > this.bufferRadius + this.asteroid.radius) {\r\n        this.asteroid.held = false;\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    this.normalParticles.update();\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.normalParticles.render(ctx);\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = '';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//16.6 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1000;\r\n\t\t\t\t\tthis.color = 'red';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tthis.color = 'green';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//45 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 2700;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.initRapidLineSegments();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitRapidLineSegments() {\r\n\t\tlet xi, xf, yi, yf;\r\n\t\txi = -Math.cos(3 * Math.PI / 4) * this.radius * 0.8;\r\n\t\txf = Math.cos(3 * Math.PI / 4) * this.radius * 0.8;\r\n\t\tyi = -Math.sin(3 * Math.PI / 4) * this.radius * 0.8;\r\n\t\tyf = Math.sin(3 * Math.PI / 4) * this.radius * 0.8;\r\n\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\txi = -Math.cos(Math.PI / 3) * this.radius * 0.9;\r\n\t\txf = Math.cos(3 * Math.PI / 4) * this.radius * 0.7;\r\n\t\tyi = -Math.sin(Math.PI / 3) * this.radius * 0.9;\r\n\t\tyf = Math.sin(3 * Math.PI / 4) * this.radius * 0.7;\r\n\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\txi = -Math.cos(4 * Math.PI / 3) * this.radius * 0.9;\r\n\t\txf = Math.cos(3 * Math.PI / 4) * this.radius * 0.7;\r\n\t\tyi = -Math.sin(4 * Math.PI / 3) * this.radius * 0.9;\r\n\t\tyf = Math.sin(3 * Math.PI / 4) * this.radius * 0.7;\r\n\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tlet xi;\r\n\t\tlet xf;\r\n\t\tlet yi;\r\n\t\tlet yf;\r\n\t\tlet numSegments = 2;\r\n\t\tfor(let i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tlet cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tlet sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        if(string === 'RESPAWNING') {\r\n          this.life = 300;\r\n        }\r\n        else {\r\n          this.life = 120;\r\n        }\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class HUDObject {\r\n  constructor(x, y, type, information) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.info = information;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.font = \"30px Arial\";\r\n    ctx.globalAlpha = 0.70;\r\n    ctx.fillText(this.type + this.info, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport ParticlePool from './particlePool.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport HUDObject from './hud.js';\r\nimport './math.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth, audioController, menu) {\r\n    this.screenSide = screenWidth;\r\n    this.menu = menu;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 6;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 3;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n\r\n    this.audioController = audioController;\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 3;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n  }\r\n\r\n  initParticlePools() {\r\n    let speed = 5.0;\r\n    let max = 140;\r\n    this.particles.push(new ParticlePool(max, 'green', speed));\r\n    this.particles.push(new ParticlePool(max, 'white', speed));\r\n    this.particles.push(new ParticlePool(max, 'blue', speed));\r\n    this.particles.push(new ParticlePool(max, 'red', speed));\r\n    this.particles.push(new ParticlePool(max, 'fuchsia', speed));\r\n    this.particles.push(new ParticlePool(max, 'orange', speed));\r\n    this.particles.push(new ParticlePool(max, 'purple', speed));\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    if(event.keyCode === 80 || event.keyCode === 27) {\r\n      this.paused = true;\r\n      this.menu.gameState = 'paused';\r\n      this.menu.buttonNames[0] = 'resume';\r\n      this.menu.buttonNames[1] = 'restart';\r\n      this.menu.buttonNames[2] = 'mute';\r\n      this.menu.drawPauseMenu();\r\n    }\r\n    if(this.menu.gameState !== 'game') {\r\n      return;\r\n    }\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  initHUD() {\r\n    this.hudObjects.score = new HUDObject(this.screenSide * 0.45, this.screenSide * 0.05, 'Score: ', this.score);\r\n    this.hudObjects.lives = new HUDObject(this.screenSide * 0.03, this.screenSide * 0.97, 'Lives: ', this.lives);\r\n    this.hudObjects.level = new HUDObject(this.screenSide * 0.87, this.screenSide * 0.97, 'Level: ', this.level);\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    let x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.3;\r\n    let y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.3;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n      this.audioController.trigger('homing');\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    let dx = ufo.x - tx;\r\n    let dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    let direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    let x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    let y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n      this.audioController.trigger('homing');\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    let x;\r\n    let y;\r\n    let radius;\r\n    let mass;\r\n    //Var to control the while loop\r\n    let currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    let x;\r\n    let y;\r\n    let radius = 25;\r\n    let currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      let collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    let xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    let yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    let xDist = otherAsteroid.x - asteroid.x;\r\n    let yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        let angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        let m1 = 0;\r\n        let m2 = 0;\r\n        //If UFOs are holding the asteroid, treat them as if they were more massive\r\n        if(asteroid.held === true) {\r\n          m1 = asteroid.mass * 5;\r\n        }\r\n        else {\r\n          m1 = asteroid.mass;\r\n        }\r\n        if(otherAsteroid.held === true) {\r\n          m2 = otherAsteroid.mass * 3;\r\n        }\r\n        else {\r\n          m2 = otherAsteroid.mass;\r\n        }\r\n\r\n        // Velocity before equation\r\n        let u1 = this.rotate(asteroid.velocity, angle);\r\n        let u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        let v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        let v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        let vFinal1 = this.rotate(v1, -angle);\r\n        let vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    let distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      let direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateScore(amount) {\r\n    this.score += amount;\r\n    this.hudObjects.score.info = this.score;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    let asteroid = this.asteroids[aID];\r\n    let mass = asteroid.mass;\r\n    let x = asteroid.x;\r\n    let y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    asteroid.held = false;\r\n    //delete this.asteroids[aID];\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.updateScore(points);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      let random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      let direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      let angleChange = Math.tau / random;\r\n      for(let i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        let newX = x + Math.cos(direction) * mass;\r\n        let newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    let dx = ship.x - asteroid.x;\r\n    let dy = ship.y - asteroid.y;\r\n    let distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid);\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    let numParticles = Math.randomInt(30, 70);\r\n    let dir = Math.randomBetween(0, Math.tau);\r\n    let index = 0;\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      if(this.particles[j].color === color) {\r\n        index = j;\r\n        break;\r\n      }\r\n    }\r\n    for(let i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles[index].add(x, y, Math.PI + dir, -0.05, 3.5)\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    let x = Math.randomBetween(100, 900);\r\n    let y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    let buffer = 50;\r\n    let collision = false;\r\n    let len = 0;;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.projectiles.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let projectile = this.projectiles[i];\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.popups.push(new PopUp(350, 475, \"RESPAWNING\", 'annoucement'));\r\n    this.lives--;\r\n    this.hudObjects.lives.info = this.lives;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      this.menu.gameState = 'gameOver';\r\n      this.menu.buttonNames[1] = 'restart';\r\n      this.menu.buttonNames[2] = 'mute';\r\n      this.audioController.trigger('game over');\r\n      this.audioController.stopTheme();\r\n      this.audioController.playMenu();\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    let ufo = this.ufos[ufoID];\r\n    this.updateScore(ufo.bounty);\r\n    this.popups.push(new PopUp(ufo.x, ufo.y, ufo.bounty, 'blip'));\r\n    if(ufo.asteroid !== '') {\r\n      ufo.asteroid.held = false;\r\n    }\r\n    if(ufo.bounty === 500) {\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    let random = Math.randomInt(20, 50);\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - random, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + random, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        //delete this.popups[i];\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    let len = this.ufos.length;\r\n    for(let i = 0; i < len; i++) {\r\n      let ufo = this.ufos[i];\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    }\r\n\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n\r\n    //Update each asteroid\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].update();\r\n    }\r\n\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (Math.ceil(this.level * this.level / 2) + 1) === 0) {\r\n      this.level++;\r\n      this.hudObjects.level.info = this.level;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 3 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = 3 + this.level;\r\n      if(this.constAsteroids > this.MAXASTEROIDS) {\r\n        this.constAsteroids = this.MAXASTEROIDS;\r\n      }\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        let scaling = (this.ufos.length / this.level);\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * scaling, this.UFOTIME * 2 * scaling);\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      let ratio = (this.powerups.length * 2 / this.level)\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * ratio, this.POWERTIME * 2 * ratio)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      for(let j = i + 1; j < len; j++) {\r\n        let asteroid = this.asteroids[i];\r\n        let otherAsteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, otherAsteroid.x, otherAsteroid.y, otherAsteroid.radius)) {\r\n          this.particleCollision(asteroid, otherAsteroid);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let projectile = this.projectiles[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(projectile.x, projectile.y, projectile.color);\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(asteroid.x, asteroid.y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for player crashing\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          if(this.ship.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(i);\r\n            break;\r\n          }\r\n          else {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    len = this.ufos.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      let powerUp = this.powerups[i];\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[powerUp.type] = true;\r\n        if(this.ship.powerupTimers[powerUp.type] > 0) {\r\n          this.ship.updatePowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        else {\r\n          this.ship.createPowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        this.ship.powerupTimers[powerUp.type] += powerUp.timer;\r\n        this.createPowerUpBlip(powerUp.type);\r\n        if(powerUp.type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        this.audioController.trigger('homing pickup');\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < len; j++) {\r\n        let ufo = this.ufos[j];\r\n        if(Math.circleCollisionDetection(ufo.x, ufo.y, ufo.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(ufo.x, ufo.y, ufo.color);\r\n          ufo.powerups[powerUp.type] = true;\r\n          ufo.powerupTimers[powerUp.type] += powerUp.timer;\r\n          if(powerUp.type === 2) {\r\n            ufo.reloading = false;\r\n            ufo.setRateOfFire();\r\n          }\r\n          this.audioController.trigger('homing pickup');\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < len; k++) {\r\n        let powerUp = this.powerups[i];\r\n        let asteroid = this.asteroids[k];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(powerUp.pos.x, powerUp.pos.y, powerUp.color);\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let ufo = this.ufos[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(this.detectShipCrash(ufo, asteroid)) {\r\n          if(ufo.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(j);\r\n          }\r\n          else {\r\n            this.explode(ufo.x, ufo.y, ufo.color);\r\n            this.destoryUFO(i);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.ufos.length;\r\n    if(len > 0) {\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo1 = this.ufos[i];\r\n        if(len > 1) {\r\n          for(let j = i + 1; j < len; j++) {\r\n            let ufo2 = this.ufos[j];\r\n            if(Math.circleCollisionDetection(ufo1.x, ufo1.y, ufo1.critical, ufo2.x, ufo2.y, ufo2.critical)) {\r\n              if((ufo1.type === 'Dodger' || ufo1.type === 'Elite') && !ufo1.reloading) {\r\n                this.ufoProjectile(ufo1, ufo2.x, ufo2.y);\r\n              }\r\n              if((ufo2.type === 'Dodger' || ufo2.type === 'Elite') && !ufo2.reloading) {\r\n                this.ufoProjectile(ufo2, ufo1.x, ufo1.y);\r\n              }\r\n              //Get the direction from the first ufo to the second.\r\n              let dir = Math.getDirection(ufo1.x, ufo1.y, ufo2.x, ufo2.y)\r\n              //Point the direction the other way\r\n              ufo1.alterPath(dir + Math.PI);\r\n              //From the second ufo's perspective, this is pointing away from ufo 1\r\n              ufo2.alterPath(dir);\r\n            }\r\n          }\r\n        }\r\n        if(!this.respawning) {\r\n          if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo1.x, ufo1.y, ufo1.radius)) {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(!this.respawning && Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'fuchsia');\r\n          this.audioController.trigger('shield broken');\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(projectile.x, projectile.y, projectile.color);\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        let ufo = this.ufos[j];\r\n        if((ufo.type === 'Dodger' || ufo.type === 'Elite') && ufo.clock === ufo.CLOCK) {\r\n          if(this.projectileDodger(ufo, projectile)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'fuchsia');\r\n              this.audioController.trigger('shield broken');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n          ufo.x, ufo.y, ufo.radius)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'fuchsia');\r\n              this.audioController.trigger('shield broken');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(3, 6));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 3));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(projectile.color === 'green') {\r\n        projectile.update(this.ufos);\r\n      }\r\n      else {\r\n        projectile.update(this.ship);\r\n      }\r\n      if(projectile.edgeDetection()) {\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n\r\n    let len = this.ufos.length;\r\n    //Draw UFOs\r\n    for(let i = 0; i < len; i++) {\r\n      this.ufos[i].render(this.backBufferContext);\r\n    }\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    len = this.asteroids.length;\r\n    //Draw asteroids\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].render(this.backBufferContext);\r\n    }\r\n    len = this.projectiles.length;\r\n    //draw projectiles\r\n    for(let i = 0; i < len; i++) {\r\n      this.projectiles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.powerups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.powerups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.particles.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.particles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.popups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.popups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    this.hudObjects.score.render(this.backBufferContext);\r\n    this.hudObjects.lives.render(this.backBufferContext);\r\n    this.hudObjects.level.render(this.backBufferContext);\r\n\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.menu.drawGameOver();\r\n    }\r\n    /*\r\n    if(this.gameOver) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"GAME OVER\", 350, 500);\r\n      this.backBufferContext.fillText(\"Retry? Press ~\", 360, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n    if(this.paused) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"Paused\", 425, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }*/\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    this.menu = new Audio('./menu2.wav');\r\n    this.pickTheme();\r\n\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.sounds.push(this.menu);\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.homing = new Audio('./homing.wav');\r\n    this.sounds.push(this.homing);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n    this.shieldBreak = new Audio('./shieldbreak.wav');\r\n    this.sounds.push(this.shieldBreak);\r\n    this.homingPickUp = new Audio('./homingpowerup.wav');\r\n    this.sounds.push(this.homingPickUp);\r\n  }\r\n\r\n  pickTheme() {\r\n    if(Math.random() > 0.5) {\r\n      this.theme = new Audio('./theme.wav');\r\n    }\r\n    else {\r\n      this.theme = new Audio('./theme2.wav');\r\n    }\r\n  }\r\n\r\n  playTheme() {\r\n    this.theme.volume = 0.1;\r\n    this.theme.loop = true;\r\n    this.theme.play();\r\n  }\r\n\r\n  stopTheme() {\r\n    this.theme.pause();\r\n  }\r\n\r\n  playMenu() {\r\n    this.menu.volume = 0.30;\r\n    this.menu.loop = true;\r\n    this.menu.play();\r\n  }\r\n\r\n  stopMenu() {\r\n    this.menu.pause();\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n    this.theme.muted = true;\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n    this.theme.muted = false;\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'homing':\r\n        this.homing.play();\r\n        break;\r\n      case 'homing pickup':\r\n        this.homingPickUp.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'shield broken':\r\n        this.shieldBreak.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\nimport AudioController from './audiocontroller.js';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.game = null;\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = [];\r\n\t\tthis.buttonNames = ['start', 'mute', 'controls'];\r\n\t\tthis.musicStarted = false;\r\n\t\tthis.muted = false;\r\n\t\tthis.initButtons();\r\n\t\tthis.audioController = new AudioController();\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\tinitButtons() {\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < 3; i++) {\r\n\t\t\tthis.buttons.push({x: this.screenWidth * 0.35, y: this.screenWidth * scaleY, width: this.screenWidth * 0.3, height: this.screenWidth * 0.1})\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\tif(!this.musicStarted) {\r\n\t\t\tthis.audioController.playMenu();\r\n\t\t\tthis.musicStarted = true;\r\n\t\t}\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttonNames[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\thandleMouseDown(event) {\r\n\t\tevent.preventDefault();\r\n\t\tif(!this.musicStarted) {\r\n\t\t\tthis.audioController.playMenu();\r\n\t\t\tthis.musicStarted = true;\r\n\t\t}\r\n\t\t//Adjust the client click position to the canvas position. Drawing with 1000px / 800px canvas (1000 / 800) = 5 / 4\r\n\t\tlet x = event.clientX * 5 / 4;\r\n\t\tlet y = event.clientY * 5 / 4;\r\n\t\tif(this.gameState === 'main menu' || this.gameState === 'paused') {\r\n\t\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\t\tlet check = Math.circleRectangleCollision(x, y, 10, this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tthis.clickButton(this.buttonNames[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t\telse if(this.gameState === 'gameOver') {\r\n\t\t\tfor(let i = 1; i < this.buttons.length; i++) {\r\n\t\t\t\tlet check = Math.circleRectangleCollision(x, y, 10, this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tthis.clickButton(this.buttonNames[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase \"restart\":\r\n\t\t\tcase 0:\r\n\t\t\t\tif(this.game !== null) {\r\n\t\t\t\t\tthis.audioController.stopTheme();\r\n\t\t\t\t\tif(!this.muted) {\r\n\t\t\t\t\t\tthis.audioController.pickTheme();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.game.masterReset();\r\n\t\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\t\tthis.audioController.stopMenu();\r\n\t\t\t\t\tthis.audioController.playTheme();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.game = new Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth, this.audioController, this);\r\n\t\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\t\tthis.audioController.playTheme();\r\n\t\t\t\t\tthis.audioController.stopMenu();\r\n\t\t\t\t}\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mute\":\r\n\t\t\tcase 1:\r\n\t\t\t\tif(this.muted) {\r\n\t\t\t\t\tthis.audioController.unmute();\r\n\t\t\t\t\tthis.muted = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.audioController.mute();\r\n\t\t\t\t\tthis.muted = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\tcase 2:\r\n\t\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"resume\":\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tthis.game.paused = false;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Mute\", this.screenWidth * 0.44, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.font = '120px Times New Roman';\r\n\t\tthis.backBufferContext.fillText(\"Asteroids\", this.screenWidth * 0.05, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\" & \", this.screenWidth * 0.50, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"Aliens\", this.screenWidth * 0.65, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawPauseMenu() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"black\";\r\n\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tthis.backBufferContext.fillRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"Resume\", this.screenWidth * 0.42, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Restart\", this.screenWidth * 0.43, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Mute\", this.screenWidth * 0.44, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawGameOver() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"black\";\r\n\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\tfor(let i = 1; i < this.buttons.length; i++) {\r\n\t\t\tthis.backBufferContext.fillRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.font = '100px Times New Roman';\r\n\t\tthis.backBufferContext.fillText(\"Game Over\", this.screenWidth * 0.30, this.screenWidth * 0.30);\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\tthis.backBufferContext.fillText(\"Restart\", this.screenWidth * 0.43, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Mute\", this.screenWidth * 0.44, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n"],"sourceRoot":""}