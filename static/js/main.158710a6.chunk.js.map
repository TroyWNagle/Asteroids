{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particlePool.js","particles.js","boostBar.js","powerUpTimer.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","popups.js","hud.js","audiocontroller.js","game.js","index.js"],"names":["Math","tau","PI","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","getDir","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","ParticlePool","maxSize","color","speed","this","pool","Float32Array","end","decay","life","randSpeed","vx","sin","vy","cos","lifeNoise","I","last","ctx","save","beginPath","fillStyle","moveTo","arc","fill","restore","Particle","speedX","speedY","updateSpeed","closePath","BoostBar","boost","width","height","MAXBOOST","particles","fillLength","numParticles","push","createParticles","j","update","splice","strokeStyle","globalAlpha","strokeRect","fillRect","forEach","particle","render","PowerUpDisplay","type","timer","initColor","string","font","fillText","toFixed","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","boostParticles","normalParticles","boosting","boostRecharge","TOPSPEED","powerups","1","2","3","powerupTimers","powerUpDisplays","boostGauge","acceleration","angleNoise","add","angle","edgeDetection","updateVelocity","checkPowerUps","amount","translate","rotate","lineTo","stroke","drawShield","Asteroid","mass","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","context","Projectile","initSpeed","particlePool","targets","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","past","shortest","distance","findDistance","findDirection","delta","point","findTarget","adjustDirection","storePast","alterPast","lineWidth","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","clock","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","player","error","magnitude","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","pos","initTimer","initShape","rect","PopUp","size","initSettings","HUDObject","information","info","AudioController","sounds","over","Audio","collisionSound","volume","explosion","shipExplosion","ufoLaser","teleportSound","change","sound","muted","play","Game","backBuffer","backBufferCanvas","screenContext","screenWidth","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","initParticlePools","score","highscore","lives","level","popups","hudObjects","initHUD","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","audioController","keyMap","13","32","37","38","39","65","68","70","87","88","backBufferContext","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","masterReset","ufo","tx","ty","trigger","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","points","updateScore","angleChange","newX","newY","catchAsteroid","ufoProjectile","index","len","explode","ufoID","createBlip","HUDcontext","strokeText","checkAsteroidAlignment","initAsteroids","difference","addUFO","scaling","createPowerUp","ratio","particleCollision","handleAsteriodExplosion","respawn","powerUp","updatePowerUpDisplay","createPowerUpDisplay","createPowerUpBlip","k","detectShipCrash","destoryUFO","ufo1","ufo2","projectileDodger","createProjectile","teleport","checkHighScore","drawImage","Menu","gameState","highlighted","buttons","buttonNames","initButtons","document","getElementById","getContext","screenBufferCanvas","body","appendChild","handleMouseDown","onmousedown","scaleY","clickButton","clientX","clientY","button","clearInterval","drawMenu","drawControls"],"mappings":"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","file":"static/js/main.158710a6.chunk.js","sourcesContent":["//Custom math functions library\r\nMath.tau = Math.PI * 2;\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDir = function(dist, x, y , x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  let direction = Math.acos(dy / dist);\r\n\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if(direction < 0) {\r\n    direction += Math.tau;\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  let dx = x1 - x2;\r\n  let dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n\r\nexport default class ParticlePool {\r\n  // 6 floats -> x, y, vx, vy, decay, life\r\n  constructor(maxSize, color, speed) {\r\n    this.pool = new Float32Array(6 * maxSize);\r\n    this.end = 0;\r\n    this.max = maxSize;\r\n    this.color = color;\r\n    this.speed = speed;\r\n  }\r\n\r\n  add(x, y, direction, decay, life) {\r\n    let randSpeed = Math.randomInt(1, this.speed);\r\n    let vx = Math.sin(direction) * randSpeed;\r\n    let vy = -Math.cos(direction) * randSpeed;\r\n    let lifeNoise = life + Math.randomBetween(-0.5, 0.5);\r\n    if(this.end < this.max) {\r\n      this.pool[6*this.end] = x;\r\n      this.pool[6*this.end + 1] = y;\r\n      this.pool[6*this.end + 2] = vx;\r\n      this.pool[6*this.end + 3] = vy;\r\n      this.pool[6*this.end + 4] = decay;\r\n      this.pool[6*this.end + 5] = lifeNoise;\r\n      this.end++;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    for(let i = 0; i < this.end; i++) {\r\n      let I = 6 * i;\r\n      //Update X\r\n      this.pool[I] += this.pool[I + 2];\r\n      //Update Y\r\n      this.pool[I + 1] += this.pool[I + 3];\r\n      //Decay X & Y velocities\r\n      if(Math.abs(this.pool[I + 2]) > 0) {\r\n        if(this.pool[I + 2] > 0) {\r\n          this.pool[I + 2] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 2] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      if(Math.abs(this.pool[I + 3]) > 0) {\r\n        if(this.pool[I + 3] > 0) {\r\n          this.pool[I + 3] += this.pool[I + 4];\r\n        }\r\n        else {\r\n          this.pool[I + 3] -= this.pool[I + 4];\r\n        }\r\n      }\r\n      //Decrement life\r\n      this.pool[I + 5] -= 0.1;\r\n\r\n      if(this.pool[I + 5] <= 0) {\r\n        let last = 6 * (this.end - 1);\r\n        this.pool[I] = this.pool[last];\r\n        this.pool[I + 1] = this.pool[last + 1];\r\n        this.pool[I + 2] = this.pool[last + 2];\r\n        this.pool[I + 3] = this.pool[last + 3];\r\n        this.pool[I + 4] = this.pool[last + 4];\r\n        this.pool[I + 5] = this.pool[last + 5];\r\n        this.end--;\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    for(let i = 0; i < this.end; i ++) {\r\n      ctx.moveTo(this.pool[6 * i], this.pool[6 * i + 1])\r\n      ctx.arc(this.pool[6 * i], this.pool[6 * i + 1], 1, 0, Math.tau);\r\n    }\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n/** @class Particle\r\n  * class to handle a particle's life\r\n  */\r\nexport default class Particle {\r\n  /** @constructor\r\n    * initialization of a particle\r\n    * @param floats x,y - position of the particle\r\n    * @param float direction - direction the particle will travel\r\n    * @param int speed - velocity of the particle\r\n    * @param string color - color of the particle\r\n    * @param int life - how many iterations the particle will last for\r\n    */\r\n  constructor(x, y, direction, speed, color, life, decay) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.life = life;\r\n    this.decay = decay;\r\n    this.color = color;\r\n    this.speed = Math.randomInt(1, speed);\r\n    this.direction = direction;\r\n    this.speedX = Math.cos(direction) * this.speed;\r\n    this.speedY = -Math.sin(direction) * this.speed;\r\n  }\r\n\r\n  updateSpeed() {\r\n    this.speedX = Math.cos(this.direction) * this.speed;\r\n    this.speedY = -Math.sin(this.direction) * this.speed;\r\n  }\r\n\r\n  /** @function update()\r\n    * function to updates the particle if it hasn't hit the decay distance\r\n    */\r\n  update() {\r\n    this.life--;\r\n    if(this.decay && this.speed > 0) {\r\n      this.speed -= 0.05;\r\n      this.updateSpeed();\r\n    }\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n  /** @function render()\r\n    * standard render function\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, 1, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\nexport default class BoostBar {\r\n  constructor(boost, max) {\r\n    this.x = 500;\r\n    this.y = 950;\r\n    this.width = 400;\r\n    this.height = 25;\r\n    this.MAXBOOST = max;\r\n    this.boost = boost;\r\n    this.particles = [];\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST);\r\n  }\r\n\r\n  createParticles(numParticles) {\r\n    let x = 1 + this.x - this.width / 2;\r\n    for (let i = 0; i < numParticles; i++) {\r\n      let y = Math.randomBetween(this.y - this.height / 2, this.y + this.height / 2);\r\n      this.particles.push(new Particle(x, y, 0, 5.0, 'green', 75, false));\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.fillLength = this.width * (this.boost / this.MAXBOOST)\r\n    this.createParticles(3);\r\n    //Particle effect for the thruster\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0 || this.particles[j].x > this.x - this.width / 2 + this.fillLength) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = 'blue';\r\n    ctx.fillStyle = 'blue';\r\n    ctx.globalAlpha = 0.30;\r\n    ctx.strokeRect(this.x - this.width / 2, this.y - this.height / 2, this.width, this.height);\r\n    ctx.fillRect(this.x - this.width / 2, this.y - this.height / 2, this.fillLength, this.height);\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUpDisplay {\r\n  constructor(x, y, type, timer) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.timer = timer;\r\n    this.type = type;\r\n    this.initColor();\r\n  }\r\n\r\n  initColor() {\r\n    switch (this.type) {\r\n      case 1:\r\n        this.color = 'red';\r\n        this.string = 'Homing: ';\r\n        break;\r\n      case 2:\r\n        this.color = 'red';\r\n        this.string = 'Rapid: '\r\n        break;\r\n      case 3:\r\n        this.color = 'magenta';\r\n        this.string = 'Shield: ';\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = \"25px Arial\";\r\n    ctx.globalAlpha = 0.60;\r\n    ctx.fillText(this.string + (this.timer / 60).toFixed(1), this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\nimport ParticlePool from './particlePool.js';\r\nimport BoostBar from './boostBar.js';\r\nimport PowerUpDisplay from './powerUpTimer.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    //Velocity to determine the magnitude/direction of the ship\r\n    //This is actually acceleration...\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //particles for thruster trail\r\n    this.particles = [];\r\n    //size, color, speed\r\n    this.boostParticles = new ParticlePool(210, 'blue', 3.0);\r\n    this.normalParticles = new ParticlePool(80, 'red', 2.0);\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.boostRecharge = 1;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n    this.powerUpDisplays = {1: '', 2: '', 3: ''};\r\n    this.boostGauge = new BoostBar(this.boost, this.MAXBOOST);\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    let x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    let y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      let dx = x + Math.randomBetween(-3, 3);\r\n      let dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      let angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.boostParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 3.5);\r\n        //this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 3.0, 'blue', 35, true));\r\n      }\r\n      else {\r\n        this.normalParticles.add(dx, dy, Math.PI + angleNoise, -0.05, 2.0);\r\n        //this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 2.0, 'red', 20, true));\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        this.powerUpDisplays[i].timer--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n          this.powerUpDisplays[i] = '';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.tau\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boostRecharge *= -1;\r\n      //Variable makes it so the boost only recharges every other frame.\r\n      if(this.boostRecharge === 1) {\r\n        this.boost++;\r\n        this.boostGauge.boost = this.boost;\r\n      }\r\n    }\r\n\r\n    //Particle effect for the thruster\r\n    /*for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }*/\r\n    this.boostParticles.update();\r\n    this.normalParticles.update();\r\n    this.boostGauge.update();\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  createPowerUpDisplay(type, timer) {\r\n    if(type === 1) {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.40, type, timer);\r\n    }\r\n    else if(type === 2) {\r\n      this.powerUpDisplays[type]= new PowerUpDisplay(5, 1000 * 0.50, type, timer);\r\n    }\r\n    else {\r\n      this.powerUpDisplays[type] = new PowerUpDisplay(5, 1000 * 0.60, type, timer);\r\n    }\r\n  }\r\n\r\n  updatePowerUpDisplay(type, amount) {\r\n    this.powerUpDisplays[type].timer += amount;\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    for(let i = 1; i < 4; i ++) {\r\n      if(this.powerUpDisplays[i] !== '') {\r\n        this.powerUpDisplays[i].render(ctx);\r\n      }\r\n    }\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    //Render particles\r\n    /*this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });*/\r\n    this.boostParticles.render(ctx);\r\n    this.normalParticles.render(ctx);\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n    this.boostGauge.render(ctx);\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    let segments = 24;\r\n    //15 degree increments\r\n    let angle = Math.tau / segments;\r\n    let randomRadius = this.radius;\r\n    let x;\r\n    let y;\r\n    for(let i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    let mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(let i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import ParticlePool from './particlePool.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.tau;\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    //Particle trail of the projectile\r\n    //this.particles = [];\r\n    this.particlePool = new ParticlePool(50, this.color, 1.0);\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    let x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    let y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      let dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      let dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particlePool.add(dx, dy, Math.PI * this.velocity.dir, -0.05, 1.0)\r\n      //this.particles.push(new Particle(dx, dy, Math.PI * this.velocity.dir, 1.0, this.color, 10, true));\r\n    }\r\n    //console.log(this.particlePool);\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000 || this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(2, 4));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.particlePool.update();\r\n    //Particle effect for the trail\r\n    /*for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }*/\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particlePool.render(ctx);\r\n    /*this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });*/\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.25;\r\n    this.target = null;\r\n    this.past = [];\r\n    this.width = 1;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.tau\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.tau\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.tau\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.tau\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  storePast() {\r\n    let point = {x: this.x, y: this.y};\r\n    this.past.push(point);\r\n    if(this.past.length > 30) {\r\n      //delete this.past[0];\r\n      this.past.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  alterPast() {\r\n    this.past.forEach(point => {\r\n      point.x += Math.randomBetween(-1, 1);\r\n      point.y += Math.randomBetween(-1, 1);\r\n    });\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    this.storePast();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.alterPast();\r\n  }\r\n\r\n  render(ctx) {\r\n    super.render(ctx);\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    for(let i = 0; i < this.past.length - 1; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.past[i].x, this.past[i].y);\r\n      ctx.lineTo(this.past[i + 1].x, this.past[i + 1].y);\r\n      ctx.stroke();\r\n      ctx.lineWidth += 0.1;\r\n    }\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.boostParticles = null;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.type = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.normalParticles.color = this.color;\r\n    this.normalParticles.speed = 1.0;\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    let color;\r\n    let random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.type = \"Elite\";\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.type = \"Dodger\";\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.type = \"Hurler\";\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n      this.type = \"Theif\";\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.type === 'Dodger' || this.color === 'Elite') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.type === 'Dodger' || this.type === 'Elite') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.type === 'Hurler') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    let xi;\r\n    let xf;\r\n    let yi;\r\n    let yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    let numSegments = 6;\r\n    for(let i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      let cos = Math.cos(i * Math.PI / 3);\r\n      let sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.dir = Math.getDir(distance, this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let direction = Math.getDir(distance, this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      let x = this.x - Math.cos(angle) * this.radius;\r\n      let y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.normalParticles.add(x, y, this.velocity.dir + Math.PI, -0.05, 3.0);\r\n      //this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30, true));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.tau);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.normalParticles.add(dx, dy, angle, -0.05, 3.0);\r\n      //this.particles.push(new Particle(dx, dy, angle + Math.PI / 6, 2.0, this.color, 20, true));\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 3; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    this.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      let dist = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n      if(this.asteroid.destroyed || dist > this.bufferRadius + this.asteroid.radius) {\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    this.normalParticles.update();\r\n    /*for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        //delete this.particles[j];\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }*/\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.normalParticles.render(ctx);\r\n    /*this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });*/\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//16.6 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1000;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//45 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 2700;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tlet xi;\r\n\t\tlet xf;\r\n\t\tlet yi;\r\n\t\tlet yf;\r\n\t\tlet numSegments = 2;\r\n\t\tfor(let i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tlet cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tlet sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.tau);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class PopUp {\r\n  constructor(x, y, string, type) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.string = '';\r\n    this.life = 0;\r\n    this.size = 0;\r\n    this.initSettings(string);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  initSettings(string) {\r\n    switch (this.type) {\r\n      case \"blip\":\r\n        this.life = 40;\r\n        this.size = 25;\r\n        this.string = '+ ' + string;\r\n        break;\r\n      case \"annoucement\":\r\n        this.life = 80;\r\n        this.size = 50;\r\n        this.string = string;\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.life--;\r\n    if(this.life <= 0) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.font = this.size + \"px Arial\";\r\n    ctx.fillText(this.string, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class HUDObject {\r\n  constructor(x, y, type, information) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.type = type;\r\n    this.info = information;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.font = \"30px Arial\";\r\n    ctx.globalAlpha = 0.70;\r\n    ctx.fillText(this.type + this.info, this.x, this.y);\r\n    ctx.restore();\r\n  }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    /*this.theme = new Audio('./theme.wav');\r\n    this.theme.volume = 0.01;\r\n    this.theme.loop = true;\r\n    this.theme.play();*/\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport ParticlePool from './particlePool.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport PopUp from './popups.js';\r\nimport HUDObject from './hud.js';\r\nimport './math.js';\r\nimport AudioController from './audiocontroller.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor(backBuffer, backBufferCanvas, screenContext, screenWidth) {\r\n    this.screenSide = screenWidth;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 6;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 3;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.popups = [];\r\n    this.hudObjects = {score: '', lives: '', level: ''};\r\n    this.initHUD();\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = new AudioController();\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    /*//HUD\r\n    this.HUDcanvas = document.getElementById('ui');\r\n    this.HUDcanvas.width = this.screenSide;\r\n    this.HUDcanvas.height = 100;\r\n    this.HUDcontext = this.HUDcanvas.getContext('2d');\r\n    document.body.appendChild(this.HUDcanvas); */\r\n\r\n    this.backBufferContext = backBuffer;\r\n    this.backBufferCanvas = backBufferCanvas;\r\n    this.screenBufferContext = screenContext;\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 3;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    this.initParticlePools();\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  initParticlePools() {\r\n    let speed = 5.0;\r\n    let max = 140;\r\n    this.particles.push(new ParticlePool(max, 'green', speed));\r\n    this.particles.push(new ParticlePool(max, 'white', speed));\r\n    this.particles.push(new ParticlePool(max, 'blue', speed));\r\n    this.particles.push(new ParticlePool(max, 'red', speed));\r\n    this.particles.push(new ParticlePool(max, 'fuchsia', speed));\r\n    this.particles.push(new ParticlePool(max, 'orange', speed));\r\n    this.particles.push(new ParticlePool(max, 'purple', speed));\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n    if(event.keyCode === 80) {\r\n      if(this.paused) {\r\n        this.paused = false;\r\n      }\r\n      else {\r\n        this.paused = true;\r\n      }\r\n    }\r\n    if(event.keyCode === 192) {\r\n      this.masterReset();\r\n    }\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  initHUD() {\r\n    this.hudObjects.score = new HUDObject(this.screenSide * 0.45, this.screenSide * 0.05, 'Score: ', this.score);\r\n    this.hudObjects.lives = new HUDObject(this.screenSide * 0.03, this.screenSide * 0.97, 'Lives: ', this.lives);\r\n    this.hudObjects.level = new HUDObject(this.screenSide * 0.87, this.screenSide * 0.97, 'Level: ', this.level);\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    let x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    let y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    let dx = ufo.x - tx;\r\n    let dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    let distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    let direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    let x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    let y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n    }\r\n    this.audioController.trigger('shoot');\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    let x;\r\n    let y;\r\n    let radius;\r\n    let mass;\r\n    //Var to control the while loop\r\n    let currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    let x;\r\n    let y;\r\n    let radius = 25;\r\n    let currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      let collision = false;\r\n      let spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      for(let i = 0; i < currLength; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    let xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    let yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    let xDist = otherAsteroid.x - asteroid.x;\r\n    let yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        let angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        let m1 = asteroid.mass;\r\n        let m2 = otherAsteroid.mass;\r\n\r\n        // Velocity before equation\r\n        let u1 = this.rotate(asteroid.velocity, angle);\r\n        let u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        let v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        let v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        let vFinal1 = this.rotate(v1, -angle);\r\n        let vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    let distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      let direction = Math.getDir(distance, projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateScore(amount) {\r\n    this.score += amount;\r\n    this.hudObjects.score.info = this.score;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    let asteroid = this.asteroids[aID];\r\n    let mass = asteroid.mass;\r\n    let x = asteroid.x;\r\n    let y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    //delete this.asteroids[aID];\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    let points = Math.floor(100 / mass);\r\n    this.popups.push(new PopUp(x, y, points, 'blip'));\r\n    this.updateScore(points);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      let random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      let direction = Math.randomBetween(0, Math.tau);\r\n      //Uniform distribution\r\n      let angleChange = Math.tau / random;\r\n      for(let i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        let newX = x + Math.cos(direction) * mass;\r\n        let newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    let dx = ship.x - asteroid.x;\r\n    let dy = ship.y - asteroid.y;\r\n    let distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDir(distance, asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.type === 'Hurler' || ship.type === 'Elite') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid)\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    let numParticles = Math.randomInt(30, 70);\r\n    let dir = Math.randomBetween(0, Math.tau);\r\n    let index = 0;\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      if(this.particles[j].color === color) {\r\n        index = j;\r\n        break;\r\n      }\r\n    }\r\n    for(let i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.tau);\r\n      }\r\n      this.particles[index].add(x, y, Math.PI + dir, -0.05, 3.5)\r\n      //this.particles.push(new Particle(x, y, Math.PI + dir, speed, color, life, true));\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    let x = Math.randomBetween(100, 900);\r\n    let y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    let buffer = 50;\r\n    let collision = false;\r\n    let len = 0;;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n      len = this.projectiles.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let projectile = this.projectiles[i];\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      }\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.lives--;\r\n    this.hudObjects.lives.info = this.lives;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      /*this.theme.loop = false;\r\n      this.theme.pause();*/\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    let ufo = this.ufos[ufoID];\r\n    this.updateScore(ufo.bounty);\r\n    this.popups.push(new PopUp(ufo.x, ufo.y, ufo.bounty, 'blip'));\r\n    if(ufo.bounty === 500) {\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 life\");\r\n    }\r\n    this.kills++;\r\n    //delete this.ufos[ufoID];\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  createPowerUpBlip(type) {\r\n    let string = '';\r\n    switch (type) {\r\n      case 1:\r\n        string = \"Homing Lasers\";\r\n        break;\r\n      case 2:\r\n        string = \"Rapid Fire\";\r\n        break;\r\n      case 3:\r\n        string = \"Force Field\";\r\n        break;\r\n      default:\r\n\r\n    }\r\n    this.createBlip(string);\r\n  }\r\n\r\n  createBlip(string) {\r\n    let random = Math.randomInt(20, 50);\r\n    if(this.ship.y > 500) {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y - random, string, \"blip\"));\r\n    }\r\n    else {\r\n      this.popups.push(new PopUp(this.ship.x, this.ship.y + random, string, \"blip\"));\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update PopUps\r\n    for(let i = 0; i < this.popups.length; i++) {\r\n      if(this.popups[i].update()) {\r\n        //delete this.popups[i];\r\n        this.popups.splice(i, 1);\r\n      }\r\n    }\r\n    //Update Ship\r\n    this.ship.update();\r\n    let len = this.ufos.length;\r\n    for(let i = 0; i < len; i++) {\r\n      let ufo = this.ufos[i];\r\n      if((ufo.type === 'Theif' || ufo.type === 'Elite') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '' && !this.respawning) {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    }\r\n\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n\r\n    //Update each asteroid\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].update();\r\n    }\r\n\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (Math.ceil(this.level * this.level / 2) + 1) === 0) {\r\n      this.level++;\r\n      this.hudObjects.level.info = this.level;\r\n      this.popups.push(new PopUp(450, 500, \"Level \" + this.level, 'annoucement'));\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.hudObjects.lives.info = this.lives;\r\n      this.createBlip(\"1 Life\");\r\n      this.teleports += this.level;\r\n      let initAsteroids = 3 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = 3 + this.level;\r\n      if(this.constAsteroids > this.MAXASTEROIDS) {\r\n        this.constAsteroids = this.MAXASTEROIDS;\r\n      }\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        let scaling = (this.ufos.length / this.level);\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * scaling, this.UFOTIME * 2 * scaling);\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      let ratio = (this.powerups.length * 2 / this.level)\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * ratio, this.POWERTIME * 2 * ratio)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < len; i++) {\r\n      for(let j = i + 1; j < len; j++) {\r\n        let asteroid = this.asteroids[i];\r\n        let otherAsteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, otherAsteroid.x, otherAsteroid.y, otherAsteroid.radius)) {\r\n          this.particleCollision(asteroid, otherAsteroid);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let projectile = this.projectiles[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(projectile.x, projectile.y, projectile.color);\r\n          //delete this.projectiles[i];\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(asteroid.x, asteroid.y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for player crashing\r\n      len = this.asteroids.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let asteroid = this.asteroids[i];\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          if(this.ship.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(i);\r\n          }\r\n          else {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    len = this.ufos.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      let powerUp = this.powerups[i];\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[powerUp.type] = true;\r\n        if(this.ship.powerupTimers[powerUp.type] > 0) {\r\n          this.ship.updatePowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        else {\r\n          this.ship.createPowerUpDisplay(powerUp.type, powerUp.timer);\r\n        }\r\n        this.ship.powerupTimers[powerUp.type] += powerUp.timer;\r\n        this.createPowerUpBlip(powerUp.type);\r\n        if(powerUp.type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        ////delete this.powerups[i];\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < len; j++) {\r\n        let ufo = this.ufos[j];\r\n        if(Math.circleCollisionDetection(ufo.x, ufo.y, ufo.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(ufo.x, ufo.y, ufo.color);\r\n          ufo.powerups[powerUp.type] = true;\r\n          ufo.powerupTimers[powerUp.type] += powerUp.timer;\r\n          if(powerUp.type === 2) {\r\n            ufo.reloading = false;\r\n            ufo.setRateOfFire();\r\n          }\r\n          //delete this.powerups[i];\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.asteroids.length;\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < len; k++) {\r\n        let powerUp = this.powerups[i];\r\n        let asteroid = this.asteroids[k];\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, powerUp.pos.x, powerUp.pos.y, powerUp.radius)) {\r\n          this.explode(powerUp.pos.x, powerUp.pos.y, powerUp.color);\r\n          //delete this.powerups[i];\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        let ufo = this.ufos[i];\r\n        let asteroid = this.asteroids[j];\r\n        if(this.detectShipCrash(ufo, asteroid)) {\r\n          if(ufo.powerups[3] && asteroid.mass < 15) {\r\n            this.explode(asteroid.x, asteroid.y, 'white');\r\n            this.handleAsteriodExplosion(j);\r\n          }\r\n          else {\r\n            this.explode(ufo.x, ufo.y, ufo.color);\r\n            this.destoryUFO(i);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    len = this.ufos.length;\r\n    if(len > 0) {\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo1 = this.ufos[i];\r\n        if(len > 1) {\r\n          for(let j = i + 1; j < len; j++) {\r\n            let ufo2 = this.ufos[j];\r\n            if(Math.circleCollisionDetection(ufo1.x, ufo1.y, ufo1.critical, ufo2.x, ufo2.y, ufo2.critical)) {\r\n              if((ufo1.type === 'Dodger' || ufo1.type === 'Elite') && !ufo1.reloading) {\r\n                this.ufoProjectile(ufo1, ufo2.x, ufo2.y);\r\n              }\r\n              if((ufo2.type === 'Dodger' || ufo2.type === 'Elite') && !ufo2.reloading) {\r\n                this.ufoProjectile(ufo2, ufo1.x, ufo1.y);\r\n              }\r\n              //Get the direction from the first ufo to the second.\r\n              let dir = Math.getDirection(ufo1.x, ufo1.y, ufo2.x, ufo2.y)\r\n              //Point the direction the other way\r\n              ufo1.alterPath(dir + Math.PI);\r\n              //From the second ufo's perspective, this is pointing away from ufo 1\r\n              ufo2.alterPath(dir);\r\n            }\r\n          }\r\n        }\r\n        if(!this.respawning) {\r\n          if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo1.x, ufo1.y, ufo1.radius)) {\r\n            this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n            this.audioController.trigger('ship explosion');\r\n            this.respawn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /*if(!this.respawning) {\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo.x, ufo.y, ufo.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }*/\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(!this.respawning && Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'magenta');\r\n          this.ship.powerups[3] = false;\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(projectile.x, projectile.y, projectile.color);\r\n        //delete this.projectiles[i];\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        let ufo = this.ufos[j];\r\n        if((ufo.type === 'Dodger' || ufo.type === 'Elite') && ufo.clock === ufo.CLOCK) {\r\n          if(this.projectileDodger(ufo, projectile)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'magenta');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            //delete this.projectiles[i];\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius,\r\n          ufo.x, ufo.y, ufo.radius)) {\r\n            if(ufo.powerups[3]) {\r\n              this.explode(ufo.x, ufo.y, 'magenta');\r\n              ufo.powerups[3] = false;\r\n              ufo.powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(ufo.x, ufo.y, ufo.color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(projectile.x, projectile.y, projectile.color);\r\n            //delete this.projectiles[i];\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.tau) {\r\n        this.ship.accel.dir += Math.tau;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.tau) {\r\n        this.ship.accel.dir -= Math.tau;\r\n      }\r\n    }\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      //Enter\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.boostGauge.boost = this.ship.boost;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(3, 6));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      //W or Up Arrow\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 3));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    if(!this.respawning) {\r\n      len = this.ufos.length;\r\n      for(let i = 0; i < len; i++) {\r\n        let ufo = this.ufos[i];\r\n        ufo.rateOfFire--;\r\n        if(ufo.rateOfFire <= 0) {\r\n          this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n          ufo.setRateOfFire();\r\n        }\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      let projectile = this.projectiles[i];\r\n      if(projectile.color === 'green') {\r\n        projectile.update(this.ufos);\r\n      }\r\n      else {\r\n        projectile.update(this.ship);\r\n      }\r\n      if(projectile.edgeDetection()) {\r\n        //delete this.projectiles[i];\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n    //this.drawHUD();\r\n    //Display respawning if needed\r\n    if(this.respawning && !this.gameOver) {\r\n      this.backBufferContext.save();\r\n      this.backBufferContext.globalAlpha = 0.5;\r\n      this.backBufferContext.strokeText(\"RESPAWNING\", 350, 500);\r\n      this.backBufferContext.restore();\r\n    }\r\n    let len = this.ufos.length;\r\n    //Draw UFOs\r\n    for(let i = 0; i < len; i++) {\r\n      this.ufos[i].render(this.backBufferContext);\r\n    }\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    len = this.asteroids.length;\r\n    //Draw asteroids\r\n    for(let i = 0; i < len; i++) {\r\n      this.asteroids[i].render(this.backBufferContext);\r\n    }\r\n    len = this.projectiles.length;\r\n    //draw projectiles\r\n    for(let i = 0; i < len; i++) {\r\n      this.projectiles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.powerups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.powerups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.particles.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.particles[i].render(this.backBufferContext);\r\n    }\r\n\r\n    len = this.popups.length;\r\n    for(let i = 0; i < len; i++) {\r\n      this.popups[i].render(this.backBufferContext);\r\n    }\r\n\r\n    this.hudObjects.score.render(this.backBufferContext);\r\n    this.hudObjects.lives.render(this.backBufferContext);\r\n    this.hudObjects.level.render(this.backBufferContext);\r\n\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"GAME OVER\", 350, 500);\r\n      this.backBufferContext.fillText(\"Retry? Press ~\", 360, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n    if(this.paused) {\r\n      this.backBufferContext.font = \"50px Arial\";\r\n      this.backBufferContext.fillStyle = 'yellow';\r\n      this.backBufferContext.fillText(\"Paused\", 425, 600);\r\n      this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000;\r\n\t\tthis.gameState = 'main menu';\r\n\t\tthis.highlighted = 0;\r\n\t\tthis.buttons = [];\r\n\t\tthis.buttonNames = ['start', 'options', 'controls'];\r\n\t\tthis.initButtons();\r\n\r\n\t\t//Back Buffer\r\n\t\tthis.backBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.backBufferCanvas.width = this.screenWidth;\r\n\t\tthis.backBufferCanvas.height = this.screenWidth;\r\n\t\tthis.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n\t\t//Canvas that actually gets put on the screen\r\n\t\tthis.screenBufferCanvas = document.getElementById(\"canvas\");\r\n\t\tthis.screenBufferCanvas.width = this.screenWidth;\r\n\t\tthis.screenBufferCanvas.height = this.screenWidth;\r\n\t\tdocument.body.appendChild(this.screenBufferCanvas);\r\n\t\tthis.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n\t\tthis.render = this.render.bind(this);\r\n\t\tthis.handleKeyDown = this.handleKeyDown.bind(this);\r\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\r\n\t\tthis.interval = setInterval(this.render, 50 / 3);\r\n\t}\r\n\r\n\tinitButtons() {\r\n\t\tlet scaleY = 0.30;\r\n\t\tfor(let i = 0; i < 3; i++) {\r\n\t\t\tthis.buttons.push({x: this.screenWidth * 0.35, y: this.screenWidth * scaleY, width: this.screenWidth * 0.3, height: this.screenWidth * 0.1})\r\n\t\t\tscaleY += 0.15;\r\n\t\t}\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefault();\r\n\t\t//console.log(event.keyCode);\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\t//Enter\r\n\t\t\tif(event.keyCode === 13) {\r\n\t\t\t\tthis.clickButton(this.buttonNames[this.highlighted]);\r\n\t\t\t}\r\n\t\t\t//W & Up arrow\r\n\t\t\tif(event.keyCode === 87 || event.keyCode === 38) {\r\n\t\t\t\tthis.highlighted--;\r\n\t\t\t\tif(this.highlighted < 0) {\r\n\t\t\t\t\tthis.highlighted = this.buttons.length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//S & Down Arrow\r\n\t\t\tif(event.keyCode === 83 || event.keyCode === 40) {\r\n\t\t\t\tthis.highlighted++;\r\n\t\t\t\tif(this.highlighted >= this.buttons.length) {\r\n\t\t\t\t\tthis.highlighted = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\thandleMouseDown(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t//Adjust the client click position to the canvas position. Drawing with 1000px / 800px canvas (1000 / 800) = 5 / 4\r\n\t\tlet x = event.clientX * 5 / 4;\r\n\t\tlet y = event.clientY * 5 / 4;\r\n\t\tif(this.gameState === 'main menu') {\r\n\t\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\t\tlet check = Math.circleRectangleCollision(x, y, 10, this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t\t\tif(check) {\r\n\t\t\t\t\tthis.clickButton(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.gameState === 'options') {\r\n\r\n\t\t}\r\n\t\telse if(this.gameState === 'controls') {\r\n\t\t\tthis.gameState = 'main menu';\r\n\t\t}\r\n\t}\r\n\r\n\tclickButton(button) {\r\n\t\tswitch (button) {\r\n\t\t\tcase \"start\":\r\n\t\t\tcase 0:\r\n\t\t\t\tnew Game(this.backBufferContext, this.backBufferCanvas, this.screenBufferContext, this.screenWidth);\r\n\t\t\t\tthis.gameState = \"game\";\r\n\t\t\t\tclearInterval(this.interval);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"options\":\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"controls\":\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.gameState = \"controls\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tdrawMenu() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tfor(let i = 0; i < this.buttons.length; i++) {\r\n\t\t\tif(this.highlighted === i) {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"cyan\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.backBufferContext.strokeStyle = \"blue\";\r\n\t\t\t}\r\n\t\t\tthis.backBufferContext.strokeRect(this.buttons[i].x, this.buttons[i].y, this.buttons[i].width, this.buttons[i].height);\r\n\t\t}\r\n\r\n\t\tthis.backBufferContext.fillText(\"Start\", this.screenWidth * 0.44, this.screenWidth * 0.37);\r\n\t\tthis.backBufferContext.fillText(\"Options\", this.screenWidth * 0.42, this.screenWidth * 0.52);\r\n\t\tthis.backBufferContext.fillText(\"Controls\", this.screenWidth * 0.41, this.screenWidth * 0.67);\r\n\t\tthis.backBufferContext.restore();\r\n\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\tdrawControls() {\r\n\t\tthis.backBufferContext.save();\r\n\t\tthis.backBufferContext.fillStyle = \"blue\";\r\n\t\tthis.backBufferContext.fillText(\"W or Up Arrow: Thruster\", this.screenWidth * 0.20, this.screenWidth * 0.25);\r\n\t\tthis.backBufferContext.fillText(\"A or Left Arrow: Rotate Left\", this.screenWidth * 0.17, this.screenWidth * 0.35);\r\n\t\tthis.backBufferContext.fillText(\"D or Right Arrow: Rotate Right\", this.screenWidth * 0.15, this.screenWidth * 0.45);\r\n\t\tthis.backBufferContext.fillText(\"Spacebar: Shoot\", this.screenWidth * 0.29, this.screenWidth * 0.55);\r\n\t\tthis.backBufferContext.fillText(\"Enter: Boost\", this.screenWidth * 0.34, this.screenWidth * 0.65);\r\n\t\tthis.backBufferContext.fillText(\"F: Teleport\", this.screenWidth * 0.36, this.screenWidth * 0.75);\r\n\t\tthis.backBufferContext.fillText(\"Any Key to Go Back\", this.screenWidth * 0.26, this.screenWidth * 0.90);\r\n\t\tthis.backBufferContext.restore();\r\n\t\tthis.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\t//Initial Setup\r\n\t\tthis.backBufferContext.fillStyle = 'black';\r\n\t\tthis.backBufferContext.font = '50px Arial';\r\n\t\t//Refresh canvas\r\n\t\tthis.backBufferContext.fillRect(0,0, this.screenWidth, this.screenWidth);\r\n\t\tif(this.gameState === \"main menu\") {\r\n\t\t\tthis.drawMenu();\r\n\t\t}\r\n\t\telse if(this.gameState === \"controls\") {\r\n\t\t\tthis.drawControls();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nnew Menu();\r\n//new Game();\r\n"],"sourceRoot":""}