{"version":3,"sources":["math.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","particles.js","ship.js","asteroid.js","projectile.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","homing.js","ufo.js","powerup.js","audiocontroller.js","game.js","index.js"],"names":["Math","randomBetween","min","max","random","randomInt","lowest","floor","highest","ceil","round","getDirection","x","y","x2","y2","dx","dy","dist","sqrt","direction","acos","PI","getDistance","circleCollisionDetection","x1","y1","r1","r2","circleRectangleCollision","cx","cy","cr","rx","ry","rw","rh","rec","abs","pow","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Particle","speed","color","life","this","startX","startY","alpha","values","high","low","clock","speedX","cos","speedY","sin","changeAlpha","updateSpeed","ctx","save","fillStyle","globalAlpha","beginPath","arc","closePath","fill","restore","Ship","RATE","reloading","rateOfFire","accel","mag","dir","velocity","radius","particles","MAXBOOST","boosting","boost","TOPSPEED","powerups","1","2","3","powerupTimers","acceleration","numParticles","angleNoise","push","angle","edgeDetection","updateVelocity","checkPowerUps","j","update","splice","strokeStyle","translate","rotate","moveTo","lineTo","stroke","forEach","particle","render","drawShield","Asteroid","mass","destroyed","surfacePath","createSurface","initVelocity","explodedVelocity","randomRadius","context","Projectile","initSpeed","targets","createParticles","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","get_get","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","Homing","_this","correction","shortest","distance","findDistance","findDirection","delta","findTarget","adjustDirection","UFO","rotation","asteroid","innerRadius","bufferRadius","critical","bounty","setColor","setClock","setRateOfFire","lineSegments","initLineSegments","goal","CLOCK","xi","xf","yi","yf","xI","xF","yI","yF","asteroids","player","error","magnitude","goToGoal","orbitAsteroid","asteroidParticles","segment","PowerUp","type","pos","timer","initTimer","initShape","rect","AudioController","sounds","over","Audio","collisionSound","volume","explosion","shipExplosion","ufoLaser","teleportSound","change","sound","muted","play","Game","screenSide","MAXUFO","MAXASTEROIDS","UFOTIME","POWERTIME","numAsteroids","ship","ufos","kills","ufoTimer","respawning","respawnTimer","projectiles","createAsteroids","score","highscore","lives","level","constAsteroids","teleports","coolingDown","powerupTimer","gameOver","paused","audioController","keyMap","13","32","37","38","39","65","68","70","87","88","HUDcanvas","document","getElementById","width","height","HUDcontext","getContext","body","appendChild","backBufferCanvas","backBufferContext","screenBufferCanvas","screenBufferContext","loop","bind","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","interval","setInterval","event","preventDefault","keyCode","masterReset","ufo","tx","ty","trigger","addAsteroid","currLength","collision","spawnSide","otherAsteroid","xVelocityDiff","yVelocityDiff","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","projectile","alterPath","aID","angleChange","newX","newY","catchAsteroid","ufoProjectile","explode","ufoID","fillRect","font","strokeText","_this2","checkAsteroidAlignment","initAsteroids","difference","addUFO","createPowerUp","particleCollision","handleAsteriodExplosion","respawn","k","detectShipCrash","destoryUFO","projectileDodger","createProjectile","teleport","checkHighScore","_this3","drawHUD","powerup","drawImage","Menu","screenWidth","gameState","highlighted","buttons","onmousedown","handleMouseDown","preventDefualt"],"mappings":"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","file":"static/js/main.2eecee19.chunk.js","sourcesContent":["//Custom math functions library\r\n\r\n\r\n/** @function Math.randomBetween\r\n  * Math prototype function built to easily create ranom floats\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random float between the parameters\r\n  */\r\nMath.randomBetween = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\n/** @function Math.randomInt\r\n  * Math prototype function built to easily create random integers\r\n  * @param {float} min - the lowest number you want\r\n  * @param {float} max - the highest number you want (I beleive it is non-inclusive)\r\n  * @returns random integer between the parameters\r\n  */\r\nMath.randomInt = function (min, max) {\r\n  let lowest = Math.floor(min);\r\n  let highest = Math.ceil(max);\r\n  return Math.round(Math.random() * (highest - lowest)) + lowest;\r\n};\r\n\r\n/** @function Math.getDirection\r\n  * Math prototype funciton to get the direction between two points/objects\r\n  * @param {float} x - x position of object 1\r\n  * @param {float} y - y position of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  */\r\nMath.getDirection = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  //arcCosine of dy & hyp.\r\n  let direction = Math.acos(dy/dist);\r\n  //Flip the direction based on the relative x\r\n  if(dx > 0) {\r\n    direction *= -1;\r\n  }\r\n  if( direction < 0) {\r\n    direction += Math.PI * 2\r\n  }\r\n  return direction;\r\n};\r\n\r\nMath.getDistance = function(x, y, x2, y2) {\r\n  //Get relative Distances\r\n  let dx = x - x2;\r\n  let dy = y - y2;\r\n  //Find hyp. of triangle\r\n  let dist = Math.sqrt(dx * dx + dy * dy);\r\n  return dist;\r\n};\r\n\r\n/** @function circleCollisionDetection\r\n  * Function to detect collisions between two circles, kept as general\r\n  * as possible for maximum versatility\r\n  * @param {float} x1 - x position of object 1\r\n  * @param {float} y1 - y position of object 1\r\n  * @param {int/float} r1 - radius of object 1\r\n  * @param {float} x2 - x position of object 2\r\n  * @param {float} y2 - y position of object 2\r\n  * @param {int/float} r2 - radius of object 2\r\n  */\r\nMath.circleCollisionDetection = function(x1, y1, r1, x2, y2, r2) {\r\n  var dx = x1 - x2;\r\n  var dy = y1 - y2;\r\n  //Quick check to avoid having to square things\r\n  if(dx > r1 + r2 || dy > r1 + r2) {\r\n    return false;\r\n  }\r\n  //More accurate check\r\n  if(dx * dx + dy * dy >= (r1 + r2) * (r1 + r2)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/** @function circleRectangleCollision\r\n* funciton to handle collisions between circles and rectangles, which are pretty much just buttons\r\n* Again kept as general as possible for maximum versatility\r\n* @param {float} cx - x position of circle\r\n* @param {float} xy - y position of circle\r\n* @param {int/float} cr - radius of circle\r\n* @param {float} rx - x position of rectangle top left corner\r\n* @param {float} ry - y position of rectangle top left corner\r\n* @param {int} rw - width of rectangle\r\n* @param {int} rh - height of rectangle\r\n*/\r\nMath.circleRectangleCollision = function(cx, cy, cr, rx, ry, rw, rh) {\r\n  //Find the center of the button\r\n  let rec = {x: rx + rw / 2, y: ry + rh / 2}\r\n  //Distances between centers\r\n  let dx = Math.abs(cx - rec.x);\r\n  let dy = Math.abs(cy - rec.y);\r\n\r\n  //Broad distance check\r\n  if (dx > (rw / 2 + cr)) { return false; }\r\n  if (dy > (rh / 2 + cr)) { return false; }\r\n\r\n  //Single dimension checks\r\n  if (dx <= (rw / 2)) { return true; }\r\n  if (dy <= (rh / 2)) { return true; }\r\n\r\n  //Corner Check\r\n  let dist = Math.pow((dx - rw / 2) , 2) + Math.pow((dy - rh / 2), 2);\r\n  return (dist <= (cr * cr));\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","\r\n/** @class Particle\r\n  * class to handle a particle's life\r\n  */\r\nexport default class Particle {\r\n  /** @constructor\r\n    * initialization of a particle\r\n    * @param floats x,y - position of the particle\r\n    * @param float direction - direction the particle will travel\r\n    * @param int speed - velocity of the particle\r\n    * @param string color - color of the particle\r\n    * @param int life - how many iterations the particle will last for\r\n    */\r\n  constructor(x, y, direction, speed, color, life) {\r\n    this.startX = x;\r\n    this.startY = y;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.life = life;\r\n    this.color = color;\r\n    this.alpha = 1.0;\r\n    this.values = {high: 1.0, low: 0.7};\r\n    this.clock = 10;\r\n    this.speed = Math.randomInt(0, speed);\r\n    this.direction = direction;\r\n    this.speedX = Math.cos(direction) * this.speed;\r\n    this.speedY = -Math.sin(direction) * this.speed;\r\n  }\r\n\r\n  changeAlpha() {\r\n    if(this.alpha === this.values.high) {\r\n      this.alpha = this.values.low;\r\n    }\r\n    else {\r\n      this.alpha = this.values.high;\r\n    }\r\n  }\r\n\r\n  updateSpeed() {\r\n    this.speedX = Math.cos(this.direction) * this.speed;\r\n    this.speedY = -Math.sin(this.direction) * this.speed;\r\n  }\r\n\r\n  /** @function update()\r\n    * function to updates the particle if it hasn't hit the decay distance\r\n    */\r\n  update() {\r\n    this.clock--;\r\n    if(this.clock <= 0) {\r\n      this.clock = 10;\r\n      this.changeAlpha();\r\n    }\r\n    this.life--;\r\n    if(this.speed > 0) {\r\n      this.speed -= 0.05;\r\n      this.updateSpeed();\r\n    }\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n  /** @function render()\r\n    * standard render function\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = this.color;\r\n    ctx.globalAlpha = this.alpha;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, 1, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\n\r\n/** @class Ship\r\n  * Class that handles everything ship related, Super class of UFO\r\n  */\r\nexport default class Ship {\r\n  /** @constructor\r\n    * Handles the initialization of a ship object\r\n    */\r\n  constructor() {\r\n    //position of the center of the Ship\r\n    this.x = 500;\r\n    this.y = 500;\r\n    this.RATE = 40;\r\n    this.reloading = false;\r\n    this.rateOfFire = this.RATE;\r\n    //Velocity to determine the magnitude/direction of the ship\r\n    //This is actually acceleration...\r\n    this.accel = {mag: 0.1, dir: 0.0};\r\n    this.velocity = {mag: 0.0, dir: 0.0};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.radius = 15;\r\n    //particles for thruster trail\r\n    this.particles = [];\r\n    this.color = 'green';\r\n    this.MAXBOOST = 120;\r\n    this.boosting = false;\r\n    this.boost = 120;\r\n    this.TOPSPEED = 3.0;\r\n    // 1 = homing, 2 = rapid fire\r\n    this.powerups = {1: false, 2: false, 3: false};\r\n    this.powerupTimers = {1: 0, 2: 0, 3: 0};\r\n  }\r\n\r\n  /** @function updateSpeed()\r\n    * Handles the updating of the player's ship and enforces the speed limit\r\n    */\r\n  updateSpeed(acceleration) {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * acceleration;\r\n    this.speed.x += Math.sin(this.accel.dir) * acceleration;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= this.TOPSPEED) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.x = this.TOPSPEED;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= this.TOPSPEED) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -this.TOPSPEED;\r\n      }\r\n      else {\r\n        this.speed.y = this.TOPSPEED;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the player's ship passing the edge of the screen, wraps back around\r\n    */\r\n  edgeDetection() {\r\n    if(this.x <= -this.radius) {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y <= -this.radius) {\r\n      this.y = 1000;\r\n    }\r\n    if(this.x >= 1000 + this.radius) {\r\n      this.x = 0;\r\n    }\r\n    if(this.y >= 1000 + this.radius) {\r\n      this.y = 0;\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get position of the back of the ship\r\n    var x = this.x - Math.sin(this.accel.dir) * this.radius;\r\n    var y = this.y + Math.cos(this.accel.dir) * this.radius;\r\n    for(var i = 0; i < numParticles; i++) {\r\n      //Create some noise on the starting position\r\n      var dx = x + Math.randomBetween(-3, 3);\r\n      var dy = y + Math.randomBetween(-3, 3);\r\n      //0.0872665 is 5 degrees in radians\r\n      var angleNoise = this.accel.dir + Math.randomBetween(-0.0872665 * 2, 0.0872665 * 2)\r\n      //Create new Particle\r\n      if(this.boosting && this.boost > 0) {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 3.0, 'blue', 35));\r\n      }\r\n      else {\r\n        this.particles.push(new Particle(dx, dy, Math.PI + angleNoise, 1, 'red', 20));\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPowerUps() {\r\n    for(let i = 1; i <= 2; i++) {\r\n      if(this.powerups[i]) {\r\n        this.powerupTimers[i]--;\r\n        if(this.powerupTimers[i] <= 0) {\r\n          this.powerups[i] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateVelocity() {\r\n    let mag = Math.sqrt(this.speed.x * this.speed.x + this.speed.y * this.speed.y);\r\n    let angle = Math.acos(this.speed.y / mag);\r\n    if(this.speed.x < 0) {\r\n      angle *= -1;\r\n    }\r\n    if(angle < 0) {\r\n      angle += Math.PI * 2\r\n    }\r\n    this.velocity.mag = mag;\r\n    this.velocity.dir = angle;\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of the ships position and the particles tied to its trail\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    this.updateVelocity();\r\n    this.checkPowerUps();\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        if(this.powerups[2]) {\r\n          this.rateOfFire = this.RATE / 2\r\n        }\r\n        else {\r\n          this.rateOfFire = this.RATE;\r\n        }\r\n        this.reloading = false;\r\n      }\r\n    }\r\n\r\n    if(!this.boosting && this.boost < this.MAXBOOST) {\r\n      this.boost++;\r\n    }\r\n\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  drawShield(ctx) {\r\n    ctx.save();\r\n    ctx.fillStyle = 'magenta';\r\n    ctx.globalAlpha = 0.1;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius * 1.3, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n\r\n  /** @function render()\r\n    * function to draw the ship and the particles for the thruster trail\r\n    * @param context ctx - the backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save()\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    //Enable accurate rotation\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.accel.dir);\r\n    //Draw ship\r\n    ctx.moveTo(0, -this.radius);\r\n    ctx.lineTo(10, this.radius);\r\n    ctx.lineTo(0, this.radius / 1.5);\r\n    ctx.lineTo(-10, this.radius);\r\n    ctx.lineTo(0, -this.radius);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      this.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n/** @class Asteroid\r\n  * Class that handles the construction and data of an Asteroid\r\n  */\r\nexport default class Asteroid {\r\n  /** @constructor\r\n    * Initializes all the properties of the asteroid\r\n    * @param floats x, y - position of te asteroid to be created\r\n    * @param float mass - mass of the asteroid, also the radius, mass to radius ratio 1:1\r\n    * @param float direction - direction in radians of the asteroid's speed, -1.0 if the asteroid is being created from scratch\r\n    */\r\n  constructor(x, y, mass, direction) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.destroyed = false;\r\n    //if somehow this gets called with a mass less than 5\r\n    if(mass < 5) {\r\n      mass = 5;\r\n    }\r\n    this.mass = mass;\r\n    this.radius = mass;\r\n    this.surfacePath = [];\r\n    this.createSurface();\r\n    this.direction = direction;\r\n    this.velocity = {x: 0.0, y: 0.0};\r\n    this.angle = 0.0;\r\n    //direction is not -1 if the asteroid has exploded\r\n    if(this.direction === -1.0) {\r\n      this.initVelocity();\r\n    }\r\n    else {\r\n      this.explodedVelocity();\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * function to initalize the velocity of the asteroid from scratch\r\n    */\r\n  initVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    var mag = Math.randomInt(8, 10) / this.mass;\r\n    if(this.x < 0) {\r\n      this.velocity.x = Math.randomBetween(1.0, mag);\r\n    }\r\n    else if(this.x > 1000 + this.radius){\r\n      this.velocity.x = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.x = Math.randomBetween(-mag, mag);\r\n    }\r\n    if(this.y < 0) {\r\n      this.velocity.y = Math.randomBetween(1.0, mag);\r\n    }\r\n    else  if(this.y > 1000 + this.radius){\r\n      this.velocity.y = -Math.randomBetween(1.0, mag);\r\n    }\r\n    else {\r\n      this.velocity.y = Math.randomBetween(-mag, mag);\r\n    }\r\n  }\r\n\r\n  /** @function createSurface()\r\n    * function to create some 'noise' on the asteroid's surface\r\n    */\r\n  createSurface() {\r\n    var segments = 24;\r\n    //15 degree increments\r\n    var angle = Math.PI * 2 / segments;\r\n    var randomRadius = this.radius;\r\n    var x;\r\n    var y;\r\n    for(var i = 0; i < segments; i++) {\r\n      if(Math.randomInt(0, 100) > 70) {\r\n        randomRadius = Math.randomBetween(this.radius * 0.80, this.radius);\r\n      }\r\n      x = Math.cos(i * angle) * randomRadius;\r\n      y = -Math.sin(i * angle) * randomRadius;\r\n      this.surfacePath.push({x: x, y: y});\r\n    }\r\n  }\r\n\r\n  /** @function explodedVelocity()\r\n    * function to initalize velocities from asteroids that have spawned from an Explosion\r\n    */\r\n  explodedVelocity() {\r\n    //Sets speed of the asteroids, more mass = slower\r\n    var mag = Math.randomInt(9, 12) / this.mass;\r\n    //Uses the direction given to ensure the asteroids leave the center of the original asteroid\r\n    this.velocity.x = Math.cos(this.direction) * mag;\r\n    this.velocity.y = -Math.sin(this.direction) * mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen\r\n    */\r\n  edgeDetection() {\r\n    if(this.x >= 1000 + 2.5 * this.radius) {\r\n      this.x = -2.4 * this.radius;\r\n    }\r\n    else if(this.x <= -2.5 * this.radius) {\r\n      this.x = 1000 + 2.4 * this.radius;\r\n    }\r\n    if(this.y >= 1000 + 2.5 * this.radius) {\r\n      this.y = -2.4 * this.radius;\r\n    }\r\n    else if(this.y <= -2.5 * this.radius) {\r\n      this.y = 1000 + 2.4 * this.radius;\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * handles the updating of asteroids speed and position\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    if(this.velocity.x > 0) {\r\n      this.angle += 0.01;\r\n    }\r\n    else {\r\n      this.angle -= 0.01;\r\n    }\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n  }\r\n\r\n  /** @function render()\r\n    * function that handles drawing the asteroids\r\n    * @param context context - backBufferContext from game.js\r\n    */\r\n  render(context) {\r\n    context.save();\r\n    context.strokeStyle = 'white';\r\n    context.translate(this.x, this.y);\r\n    context.rotate(this.angle);\r\n    context.beginPath();\r\n    //Draw the noisy surface\r\n    context.moveTo(this.surfacePath[0].x,this.surfacePath[0].y);\r\n    for(var i = 1; i < this.surfacePath.length; i++) {\r\n      context.lineTo(this.surfacePath[i].x, this.surfacePath[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import Particle from './particles.js';\r\n\r\n/** @class Projectile\r\n  * Class to handle projectiles\r\n  */\r\nexport default class Projectile {\r\n  constructor(x, y, direction, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = 3.5;\r\n    this.color = color;\r\n    if(direction < 0) {\r\n      direction += Math.PI * 2\r\n    }\r\n    this.velocity = {mag: 5.0, dir: direction};\r\n    this.speed = {x: 0.0, y: 0.0};\r\n    this.initSpeed();\r\n    //Particle trail of the projectile\r\n    this.particles = [];\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for trail of the projectile\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    //Get the back of the projectile\r\n    var x = this.x - Math.sin(this.velocity.dir)* this.radius;\r\n    var y = this.y + Math.cos(this.velocity.dir)* this.radius;\r\n    for(var i = 0; i < numParticles; i++) {\r\n      //Spread the particles over the projectile\r\n      var dx = x + Math.randomBetween(-this.radius, this.radius);\r\n      var dy = y + Math.randomBetween(-this.radius, this.radius);\r\n      this.particles.push(new Particle(dx, dy, Math.PI * this.velocity.dir, 1.0, this.color, 10));\r\n    }\r\n  }\r\n\r\n  /** @function initSpeed()\r\n    * function to handle speed initialization\r\n    */\r\n  initSpeed() {\r\n    this.speed.x = Math.sin(this.velocity.dir) * this.velocity.mag;\r\n    this.speed.y = -Math.cos(this.velocity.dir) * this.velocity.mag;\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle edgeDetection of projectiles, projectiles are destroyed at the edge\r\n    */\r\n  edgeDetection() {\r\n    if(this.x + this.radius >= 1000 || this.x - this.radius <= 0 ||\r\n    this.y + this.radius >= 1000|| this.y - this.radius <= 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function update()\r\n    * typical update function, also updates its particle trail\r\n    */\r\n  update(targets) {\r\n    this.createParticles(Math.randomInt(3, 6));\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    //Particle effect for the trail\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function\r\n    * @param context ctx - backBufferContext from game.js\r\n    */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n  }\r\n}\r\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import Projectile from \"./projectile.js\"\r\n\r\n\r\nexport default class Homing extends Projectile {\r\n  constructor(x, y, direction, color) {\r\n    super(x, y, direction, color);\r\n    // 0.0174533 is 1 degree in radians\r\n    this.correction = 0.0174533 * 1.5;\r\n    this.target = null;\r\n  }\r\n\r\n  findTarget(targets) {\r\n    let shortest = 10000\r\n    for(let i = 0; i < targets.length; i++) {\r\n      let distance = 0;\r\n      if(this.target !== targets[i]) {\r\n        distance = this.findDistance(targets[i]);\r\n      }\r\n      if(distance < shortest) {\r\n        this.target = targets[i]\r\n        shortest = distance\r\n      }\r\n    }\r\n    if(shortest === 10000) {\r\n      this.target = null\r\n    }\r\n  }\r\n\r\n  findDistance(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    return distance\r\n  }\r\n\r\n  findDirection(target) {\r\n    let dx = this.x - target.x\r\n    let dy = this.y - target.y\r\n    let distance = Math.sqrt(dx * dx + dy * dy)\r\n    let direction = Math.acos(dy / distance)\r\n    if(dx > 0) {\r\n      direction *= -1\r\n    }\r\n    if( direction < 0) {\r\n      direction += Math.PI * 2\r\n    }\r\n    return direction;\r\n  }\r\n\r\n  adjustDirection() {\r\n    let direction = this.findDirection(this.target);\r\n    if(this.velocity.dir < 0) {\r\n      this.velocity.dir += Math.PI * 2\r\n    }\r\n    let delta = this.velocity.dir - direction\r\n    if(delta > Math.PI) {\r\n      delta -= Math.PI * 2\r\n    }\r\n    if(delta < -Math.PI) {\r\n      delta += Math.PI * 2\r\n    }\r\n    if(delta > 0) {\r\n      this.velocity.dir -= this.correction;\r\n    }\r\n    if(delta < 0) {\r\n      this.velocity.dir += this.correction;\r\n    }\r\n  }\r\n\r\n  update(targets) {\r\n    if(this.color === 'green') {\r\n      if(targets.length > 0) {\r\n        this.findTarget(targets);\r\n      }\r\n    }\r\n    else {\r\n      this.target = targets;\r\n    }\r\n    if(this.target) {\r\n      this.adjustDirection();\r\n      super.initSpeed();\r\n    }\r\n    super.update(targets)\r\n  }\r\n}\r\n","import Ship from './ship.js';\r\nimport Particle from './particles.js';\r\n\r\n/** @class UFO\r\n  * Class to handle the UFO, inherits from the Ship class\r\n  */\r\nexport default class UFO extends Ship {\r\n  /** @constructor\r\n    * Handles the initialization of the UFO\r\n    */\r\n  constructor(x, y) {\r\n    super();\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rotation = 0.0;\r\n    this.accel = {mag: 0.0, dir: 0.0}\r\n    this.acceleration = 0.2;\r\n    this.asteroid = '';\r\n    //For visual\r\n    this.innerRadius = 10;\r\n    //For the actual size of the ship\r\n    this.radius = 25;\r\n    //For the area around the ship the UFO tries to keep empty\r\n    this.bufferRadius = 60;\r\n    //When the Ship is on the verge of crashing into an asteroid, it shoots to destory it\r\n    this.critical = 40;\r\n    this.color = \"\";\r\n    this.clock = 0;\r\n    this.bounty = 0;\r\n    this.setColor();\r\n    this.setClock();\r\n    this.rateOfFire = 0;\r\n    this.setRateOfFire();\r\n    //For visual\r\n    this.lineSegments = [];\r\n    this.initLineSegments();\r\n    this.goal = '';\r\n    this.initVelocity();\r\n    //1 second, delay on when to start seeking out the goal again\r\n  }\r\n\r\n  setColor() {\r\n    var color;\r\n    var random = Math.randomInt(0, 101);\r\n    //Spawn UFO and reset Timer\r\n    if(random > 90) {\r\n      color = 'fuchsia';\r\n      this.bounty = 500;\r\n    }\r\n    else if(random > 85) {\r\n      color = 'purple';\r\n      this.bounty = 200;\r\n    }\r\n    else if (random > 45) {\r\n      color = 'blue';\r\n      this.bounty = 150;\r\n    }\r\n    else {\r\n      color = 'orange';\r\n      this.bounty = 100;\r\n    }\r\n    this.color = color;\r\n  }\r\n\r\n  setClock() {\r\n    this.CLOCK = 0;\r\n    if(this.color === 'purple' || this.color === 'fuchsia') {\r\n      this.CLOCK = 5;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else if(this.color === 'blue') {\r\n      this.CLOCK = 30;\r\n      this.clock = this.CLOCK;\r\n    }\r\n    else {\r\n      this.CLOCK = 60;\r\n      this.clock = this.CLOCK;\r\n    }\r\n  }\r\n\r\n  setRateOfFire() {\r\n    if(this.color === 'purple' || this.color === 'fuchsia') {\r\n      this.rateOfFire = Math.randomInt(150, 350);\r\n    }\r\n    else if(this.color === 'blue') {\r\n      this.rateOfFire = Math.randomInt(300, 700);\r\n    }\r\n    else {\r\n      this.rateOfFire = Math.randomInt(300, 500);\r\n    }\r\n    if(this.powerups[2]) {\r\n      this.rateOfFire = Math.round(this.rateOfFire / 2)\r\n    }\r\n  }\r\n\r\n  /** @function initLineSegments()\r\n    * handles the creation of endpoints to draw lines on the UFO\r\n    */\r\n  initLineSegments() {\r\n    var xi;\r\n    var xf;\r\n    var yi;\r\n    var yf;\r\n    // 60 degress per segment, (PI / 3)\r\n    var numSegments = 6;\r\n    for(var i = 0; i < numSegments; i++) {\r\n      //Calculate various sin and cos values\r\n      var cos = Math.cos(i * Math.PI / 3);\r\n      var sin = Math.sin(i * Math.PI / 3);\r\n      //Set x values based on cos * radius values\r\n      xi = cos * this.innerRadius;\r\n      xf = cos * this.radius;\r\n      //Set y values based on - sin * radius values\r\n      yi = -sin * this.innerRadius;\r\n      yf = -sin * this.radius;\r\n      this.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n    }\r\n  }\r\n\r\n  /** @function initVelocity()\r\n    * Handles the initVelocity of the UFO\r\n    */\r\n  initVelocity() {\r\n    this.goal = {x: Math.randomBetween(200, 800), y: Math.randomBetween(200, 800)};\r\n  }\r\n\r\n  updateSpeed() {\r\n    //Alter the direction\r\n    this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n    this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n    //Enforce the max x speed\r\n    if(Math.abs(this.speed.x) >= 1.5) {\r\n      if(this.speed.x < 0) {\r\n        this.speed.x = -1.5;\r\n      }\r\n      else {\r\n        this.speed.x = 1.5;\r\n      }\r\n    }\r\n    //Enfore the max y speed\r\n    if(Math.abs(this.speed.y) >= 1.5) {\r\n      if(this.speed.y < 0) {\r\n        this.speed.y = -1.5;\r\n      }\r\n      else {\r\n        this.speed.y = 1.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @function edgeDetection()\r\n    * function to handle the asteroid leaving the edge of the screen,  slightly different than player ship since it is okay for it to be off screen\r\n    * Side note - UFO is much more vulnerable to asteroids off screen, cannot shoot to protect itself (though it will try) and asteroids switching sides may instantly destory it\r\n    */\r\n  edgeDetection() {\r\n    if((this.x + this.bufferRadius >= 1000 && this.speed.x > 0) || (this.x - this.bufferRadius <= 0 && this.speed.x < 0)) {\r\n      this.speed.x *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n    if((this.y + this.bufferRadius >= 1000 && this.speed.y > 0) || (this.y - this.bufferRadius <= 0 && this.speed.y < 0)) {\r\n      this.speed.y *= -1\r\n      this.accel.dir += Math.PI / 2\r\n      this.accel.mag = 0.0\r\n    }\r\n  }\r\n\r\n  checkCollisions(asteroids, x, y) {\r\n    for(let j = 0; j < asteroids.length; j++) {\r\n      if(Math.circleCollisionDetection(x, y, this.critical, asteroids[j].x, asteroids[j].y, asteroids[j].radius)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToGoal() {\r\n    this.accel.dir = Math.getDirection(this.x, this.y, this.goal.x, this.goal.y);\r\n    this.accel.mag = this.acceleration;\r\n    let distance = Math.getDistance(this.x, this.y, this.goal.x, this.goal.y);\r\n    if(distance < this.radius) {\r\n      this.goal = '';\r\n    }\r\n  }\r\n\r\n  alterPath(direction) {\r\n    this.accel.mag = this.acceleration;\r\n    this.accel.dir = direction;\r\n    if(this.goal !== '') {\r\n      //This is so it doesn't get pushed to zero by dodging a lot\r\n      this.setClock();\r\n      this.clock--;\r\n    }\r\n  }\r\n\r\n  catchAsteroid(asteroid) {\r\n    this.asteroid = asteroid\r\n    this.asteroid.velocity.x = this.speed.x;\r\n    this.asteroid.velocity.y = this.speed.y;\r\n  }\r\n\r\n  orbitAsteroid() {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let distance = Math.getDistance(this.x, this.y, this.asteroid.x, this.asteroid.y)\r\n    let delta = 0.02;\r\n    let x = this.x + Math.sin(direction + delta) * distance;\r\n    let y = this.y - Math.cos(direction + delta) * distance;\r\n    this.asteroid.x = x;\r\n    this.asteroid.y = y;\r\n  }\r\n\r\n  checkAsteroidAlignment(player) {\r\n    let direction = Math.getDirection(this.x, this.y, this.asteroid.x, this.asteroid.y);\r\n    let aim = Math.getDirection(this.x, this.y, player.x, player.y);\r\n    let error = direction - aim;\r\n    //If it is only off my 5 degrees\r\n    if(Math.abs(error) < 5 * Math.PI / 180) {\r\n      let magnitude = 30 / this.asteroid.mass;\r\n      this.speed.y += -Math.cos(this.accel.dir) * this.accel.mag;\r\n      this.speed.x += Math.sin(this.accel.dir) * this.accel.mag;\r\n      this.asteroid.velocity.x = Math.sin(direction) * magnitude;\r\n      this.asteroid.velocity.y = -Math.cos(direction) * magnitude\r\n      this.asteroid = '';\r\n    }\r\n  }\r\n\r\n  /** @function createParticles()\r\n    * function to handle creating the particles for the thruster trail\r\n    * @param int numParticles - number of particles to be created\r\n    */\r\n  createParticles(numParticles) {\r\n    for(var i = 0; i < numParticles; i++) {\r\n      var angle = this.velocity.dir + Math.randomBetween(-Math.PI, 0);\r\n      var x = this.x - Math.cos(angle) * this.radius;\r\n      var y = this.y + Math.sin(angle) * this.radius;\r\n      //Create new Particle\r\n      this.particles.push(new Particle(x, y, Math.PI + this.velocity.dir, 0.70 * this.velocity.mag, this.color, 30));\r\n    }\r\n  }\r\n\r\n  asteroidParticles(numParticles) {\r\n    let x = this.asteroid.x;\r\n    let y = this.asteroid.y;\r\n    for(let i = 0; i < numParticles; i++) {\r\n      let angle = Math.randomBetween(0, Math.PI * 2);\r\n      //Get a poin on the asteroid's surface\r\n      let dx = x + Math.cos(angle) * this.asteroid.radius;\r\n      let dy = y - Math.sin(angle) * this.asteroid.radius;\r\n\r\n      this.particles.push(new Particle(dx, dy, angle + Math.PI / 6, 2.0, this.color, 20));\r\n    }\r\n  }\r\n\r\n  /** @function update()\r\n    * standard position / speed update function\r\n    */\r\n  update() {\r\n    this.edgeDetection();\r\n    this.updateSpeed();\r\n    super.checkPowerUps();\r\n    super.updateVelocity();\r\n    if(this.clock < this.CLOCK) {\r\n      this.clock--;\r\n      if(this.clock <= 0) {\r\n        this.setClock();\r\n      }\r\n    }\r\n    if(this.clock === this.CLOCK && this.goal !== '') {\r\n      this.goToGoal();\r\n    }\r\n    //Controlling the rate of fire\r\n    if(this.reloading) {\r\n      this.rateOfFire--;\r\n      if(this.rateOfFire <= 0) {\r\n        this.setRateOfFire()\r\n        this.reloading = false;\r\n      }\r\n    }\r\n    if(this.speed.x > 0) {\r\n      this.rotation += 0.01;\r\n    }\r\n    else {\r\n      this.rotation -= 0.01;\r\n    }\r\n    if(this.asteroid !== '') {\r\n      if(this.asteroid.destroyed) {\r\n        this.asteroid = '';\r\n      }\r\n      else {\r\n        this.asteroid.velocity.x = this.speed.x;\r\n        this.asteroid.velocity.y = this.speed.y;\r\n        this.orbitAsteroid();\r\n        this.asteroidParticles(1);\r\n      }\r\n    }\r\n    this.x += this.speed.x;\r\n    this.y += this.speed.y;\r\n    if(Math.random() > 0.50) {\r\n      this.createParticles(1);\r\n    }\r\n    //Particle effect for the thruster\r\n    for(var j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n /** @function render()\r\n  * standard render function\r\n  */\r\n  render(ctx) {\r\n    ctx.save();\r\n    ctx.strokeStyle = this.color;\r\n    ctx.translate(this.x, this.y);\r\n    ctx.rotate(this.rotation);\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.innerRadius, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, this.radius, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.lineSegments.forEach(segment => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(segment.xI, segment.yI);\r\n      ctx.lineTo(segment.xF, segment.yF);\r\n      ctx.stroke();\r\n    });\r\n    ctx.restore();\r\n    //Render particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(ctx);\r\n    });\r\n    if(this.powerups[3]) {\r\n      super.drawShield(ctx);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport default class PowerUp {\r\n\tconstructor(x, y, type) {\r\n\t\tthis.pos = {x: x, y: y};\r\n\t\tthis.type = type\r\n\t\tthis.radius = 10;\r\n\t\tthis.color = 'red';\r\n\t\tthis.timer = 0;\r\n\t\tthis.lineSegments = []\r\n\t\tthis.initTimer()\r\n\t\tthis.initShape()\r\n\t}\r\n\r\n\tinitTimer() {\r\n\t\tswitch (this.type){\r\n\t\t\t\t//Homing\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t//15 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 900;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Rapid Fire\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t//20 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 1200;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//Shield\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\t//60 seconds at 60 fps\r\n\t\t\t\t\tthis.timer = 3600;\r\n\t\t\t\t\tthis.color = 'magenta';\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n\r\n\tinitShape() {\r\n\t\tswitch (this.type) {\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.initLineSegments()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tinitLineSegments() {\r\n\t\tvar xi;\r\n\t\tvar xf;\r\n\t\tvar yi;\r\n\t\tvar yf;\r\n\t\tvar numSegments = 2;\r\n\t\tfor(var i = 0; i < numSegments; i++) {\r\n\t\t\t//Calculate various sin and cos values\r\n\t\t\tvar cos = Math.cos(i * Math.PI / 2);\r\n\t\t\tvar sin = Math.sin(i * Math.PI / 2);\r\n\t\t\t//Set x values based on cos * radius values\r\n\t\t\txi = cos * this.radius;\r\n\t\t\txf = -cos * this.radius;\r\n\t\t\t//Set y values based on - sin * radius values\r\n\t\t\tyi = -sin * this.radius;\r\n\t\t\tyf = sin * this.radius;\r\n\t\t\tthis.lineSegments.push({xI: xi, xF: xf, yI: yi, yF: yf});\r\n\t\t}\r\n\t}\r\n\r\n/** @function render()\r\n * standard render function\r\n */\r\n render(ctx) {\r\n   ctx.save();\r\n   ctx.strokeStyle = this.color;\r\n   ctx.translate(this.pos.x, this.pos.y);\r\n   ctx.beginPath();\r\n   ctx.arc(0, 0, this.radius, 0, Math.PI * 2);\r\n   ctx.closePath();\r\n   ctx.stroke();\r\n\t ctx.beginPath();\r\n\t ctx.rect(-this.radius * 1.30, -this.radius * 1.30, this.radius * 2.60, this.radius * 2.60)\r\n\t ctx.closePath();\r\n\t ctx.stroke();\r\n   this.lineSegments.forEach(segment => {\r\n     ctx.beginPath();\r\n     ctx.moveTo(segment.xI, segment.yI);\r\n     ctx.lineTo(segment.xF, segment.yF);\r\n     ctx.stroke();\r\n   });\r\n   ctx.restore();\r\n }\r\n}\r\n","\r\n\r\nexport default class AudioController {\r\n  constructor() {\r\n    //Found this Wav file @ https://freesound.org/people/joshuaempyre/sounds/251461/\r\n    /*this.theme = new Audio('./theme.wav');\r\n    this.theme.volume = 0.01;\r\n    this.theme.loop = true;\r\n    this.theme.play();*/\r\n    //All Wav files below were created with BFXR\r\n    //Array of sounds for simplifing manipulating the sounds in mass\r\n    this.sounds = [];\r\n    this.over = new Audio('./gameOver.wav');\r\n    this.sounds.push(this.over);\r\n    this.collisionSound = new Audio('collision.wav');\r\n    this.collisionSound.volume = 0.50;\r\n    this.sounds.push(this.collisionSound);\r\n    this.explosion = new Audio('./Explosion.wav');\r\n    this.explosion.volume = 0.70;\r\n    this.sounds.push(this.explosion);\r\n    this.shipExplosion = new Audio('./shipExplosion.wav');\r\n    this.sounds.push(this.shipExplosion);\r\n    //this.laser = new Audio('./laserShoot.wav');\r\n    this.ufoLaser = new Audio('./ufoShot.wav');\r\n    this.sounds.push(this.ufoLaser);\r\n    this.teleportSound = new Audio('./teleport.wav');\r\n    this.sounds.push(this.teleportSound);\r\n  }\r\n\r\n  adjustMasterVolume(change) {\r\n    this.sounds.forEach(sound => {\r\n      sound.volume += change;\r\n      if(sound.volume < 0.0) {\r\n        sound.volume = 0.0;\r\n      }\r\n      if(sound.volume > 1.0) {\r\n        sound.volume = 1.0;\r\n      }\r\n    });\r\n  }\r\n\r\n  mute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = true;\r\n    });\r\n  }\r\n\r\n  unmute() {\r\n    this.sounds.forEach(sound => {\r\n      sound.muted = false;\r\n    });\r\n  }\r\n\r\n  trigger(sound) {\r\n    switch (sound) {\r\n      case 'shoot':\r\n        this.ufoLaser.play();\r\n        break;\r\n      case 'collision':\r\n        this.collisionSound.play();\r\n        break;\r\n      case 'explosion':\r\n        this.explosion.play();\r\n        break;\r\n      case 'ship explosion':\r\n        this.shipExplosion.play();\r\n        break;\r\n      case 'teleport':\r\n        this.teleportSound.play();\r\n        break;\r\n      case 'game over':\r\n        this.over.play();\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n}\r\n","\r\nimport Ship from './ship.js';\r\nimport Asteroid from './asteroid.js';\r\nimport Projectile from './projectile.js';\r\nimport Homing from './homing.js';\r\nimport Particle from './particles.js';\r\nimport UFO from './ufo.js';\r\nimport PowerUp from './powerup.js';\r\nimport './math.js';\r\nimport AudioController from './audiocontroller.js';\r\n\r\n/** @class Game\r\n  * Game object that controls the interactions between all other Objects\r\n  */\r\nexport default class Game {\r\n  /** @constructor\r\n    * Game object constructor, no arguement, sets up all the necessities.\r\n    */\r\n  constructor() {\r\n    this.screenSide = 1000;\r\n    //Absolutes\r\n    this.MAXUFO = 5;\r\n    this.MAXASTEROIDS = 10;\r\n    this.UFOTIME = 500;\r\n    this.POWERTIME = 900;\r\n    //Num Objects\r\n    this.numAsteroids = 5;\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    this.kills = 0;\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.highscore = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    //Make sure there are never fewer than the inital amount of asteroids\r\n    this.constAsteroids = this.level * this.numAsteroids;\r\n    //controls the teleport function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //Over Loop Controllers\r\n    this.gameOver = false;;\r\n    this.paused = false;\r\n\r\n    this.audioController = new AudioController();\r\n\r\n    //Input Map\r\n    this.keyMap = {13: false, 32: false, 37: false, 38: false, 39: false, 65: false, 68: false, 70: false, 87: false, 88: false};\r\n\r\n    //HUD\r\n    this.HUDcanvas = document.getElementById('ui');\r\n    this.HUDcanvas.width = this.screenSide;\r\n    this.HUDcanvas.height = 100;\r\n    this.HUDcontext = this.HUDcanvas.getContext('2d');\r\n    document.body.appendChild(this.HUDcanvas);\r\n\r\n    //Back Buffer\r\n    this.backBufferCanvas = document.getElementById(\"canvas\");\r\n    this.backBufferCanvas.width = this.screenSide;\r\n    this.backBufferCanvas.height = this.screenSide;\r\n    this.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n\r\n    //Canvas that actually gets put on the screen\r\n    this.screenBufferCanvas = document.getElementById(\"canvas\");\r\n    this.screenBufferCanvas.width = this.screenSide;\r\n    this.screenBufferCanvas.height = this.screenSide;\r\n    document.body.appendChild(this.screenBufferCanvas);\r\n    this.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n\r\n    //Binders\r\n    this.loop = this.loop.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n\r\n    //60 fps\r\n    this.interval = setInterval(this.loop, 50/3);\r\n  }\r\n\r\n  /** @function masterReset()\r\n    * This function handles the reset of eve except for the highscore, ~ to activate\r\n    */\r\n  masterReset() {\r\n    //Objects/Arrays\r\n    this.ship = new Ship();\r\n    this.ufos = [];\r\n    //Variables to control ufo spawn\r\n    this.ufoTimer = Math.randomInt(this.UFOTIME, this.UFOTIME * 2);\r\n    this.powerups = [];\r\n    this.powerupTimer = Math.randomInt(this.POWERTIME, this.POWERTIME * 3);\r\n    //var To control ufo firing\r\n    //this.ufoRateOfFire = Math.randomInt(150, 350);\r\n    //Vars to help with respawning the player\r\n    this.respawning = false;\r\n    this.respawnTimer = 300;\r\n    this.projectiles = [];\r\n    this.asteroids = [];\r\n    this.numAsteroids = 5;\r\n    this.createAsteroids();\r\n    this.particles = [];\r\n    //HUD Variables\r\n    this.score = 0;\r\n    this.lives = 3;\r\n    this.level = 1;\r\n    //controls the telepor function\r\n    this.teleports = 10;\r\n    this.coolingDown = 50;\r\n    //Over Loop Controllers\r\n    this.gameOver = false;\r\n    this.paused = false;\r\n    /*this.theme.loop = true;\r\n    this.theme.play();*/\r\n  }\r\n\r\n  /** @function handleKeyDown()\r\n    * function to handle key presses\r\n    */\r\n  handleKeyDown(event) {\r\n    event.preventDefault();\r\n    //Update the keyMap\r\n    this.keyMap[event.keyCode] = true;\r\n    //Handle the Pause seperately, to control the loop function\r\n    if(event.keyCode === 80) {\r\n      if(this.paused) {\r\n        this.paused = false;\r\n      }\r\n      else {\r\n        this.paused = true;\r\n      }\r\n    }\r\n    if(event.keyCode === 192) {\r\n      this.masterReset();\r\n    }\r\n  }\r\n\r\n  /** @function\r\n    * function to handle the keys being lifted up\r\n    */\r\n  handleKeyUp(event) {\r\n    event.preventDefault();\r\n    //Update the key map\r\n    this.keyMap[event.keyCode] = false;\r\n  }\r\n\r\n  /** @function\r\n    * function to create a Projectile from the player's ship\r\n    */\r\n  createProjectile() {\r\n    //Get the coordinates of the tip of the ship, The 1.2 is so you can't run into your own shot immediately\r\n    var x = this.ship.x + Math.sin(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    var y = this.ship.y - Math.cos(this.ship.accel.dir)* this.ship.radius * 1.2;\r\n    if(this.ship.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, this.ship.accel.dir, this.ship.color));\r\n    }\r\n    this.ship.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to handle UFO projectiles\r\n    * @param float tx - is the x position of the target\r\n    * @param float ty - is the y position of the target\r\n    */\r\n  ufoProjectile(ufo, tx, ty) {\r\n    var dx = ufo.x - tx;\r\n    var dy = ufo.y - ty;\r\n    //Draw a line to the target\r\n    var distance = Math.sqrt(dx * dx + dy * dy);\r\n    //Get the direction to the target\r\n    var direction = Math.acos(dy / distance);\r\n    //Mirror the angle for the left hand side\r\n    if(dx > 0) {\r\n      direction *= -1;\r\n    }\r\n    //Again, 1.2 is so the ufo doesn't immediately destory itself when it shoots\r\n    var x = ufo.x + Math.sin(direction)* ufo.radius * 1.2;\r\n    var y = ufo.y - Math.cos(direction)* ufo.radius * 1.2;\r\n    if(ufo.powerups[1]) {\r\n      this.projectiles.push(new Homing(x, y, direction, ufo.color));\r\n    }\r\n    else {\r\n      this.projectiles.push(new Projectile(x, y, direction, ufo.color));\r\n    }\r\n    this.audioController.trigger('shoot');\r\n    ufo.reloading = true;\r\n  }\r\n\r\n  /** @function\r\n    * function to create as many asteroids as needed\r\n    */\r\n  createAsteroids() {\r\n    while(this.asteroids.length < this.numAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n    }\r\n  }\r\n\r\n  /** @function addAsteroid()\r\n    * Function to add new asteroid to the list while making sure it is not spawned where a object already is\r\n    * @param float direction - determines the inital direction of the asteroid if it has exploded, -1.0 if spawning in otherwise\r\n    */\r\n  addAsteroid(direction) {\r\n    //Variables to establish the particle\r\n    var x;\r\n    var y;\r\n    var radius;\r\n    var mass;\r\n    //Var to control the while loop\r\n    var currLength = this.asteroids.length;\r\n    //Loop that generates random values for the particle and makes sure the space is not already occupied\r\n    while (currLength === this.asteroids.length) {\r\n      //Var to determine if it would have spawned inside something\r\n      var collision = false;\r\n      var spawnSide = Math.randomInt(1, 5);\r\n      mass = Math.randomBetween(10, 75);\r\n      radius = mass;\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = this.screenSide + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n        y = this.screenSide + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, this.screenSide + 2 * radius);\r\n      }\r\n      //Checks if the position is occupied by another asteroid\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(asteroid.x, asteroid.y, asteroid.radius, x, y, radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.asteroids.push(new Asteroid(x, y, mass, direction));\r\n      }\r\n    }\r\n  }\r\n\r\n  addUFO() {\r\n    var x;\r\n    var y;\r\n    var radius = 25;\r\n    var currLength = this.ufos.length;\r\n\r\n    while(currLength === this.ufos.length) {\r\n      var collision = false;\r\n      var spawnSide = Math.randomInt(1, 5);\r\n      //Top\r\n      if(spawnSide === 1) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = - 2 * radius;\r\n      }\r\n      //Right\r\n      else if(spawnSide === 2) {\r\n        x = 1000 + 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      //Bottom\r\n      else if(spawnSide === 3) {\r\n        x = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n        y = 1000 + 2 * radius;\r\n      }\r\n      //Left\r\n      else {\r\n        x = - 2 * radius;\r\n        y = Math.randomBetween(-2 * radius, 1000 + 2 * radius);\r\n      }\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(x, y, radius + 40, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      if(!collision) {\r\n        this.ufos.push(new UFO(x, y));\r\n      }\r\n    }\r\n  }\r\n\r\n  createPowerUp() {\r\n    let x = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let y = Math.randomInt(this.screenSide * 0.10, this.screenSide * 0.90)\r\n    let random = Math.random();\r\n    if(random > 0.66) {\r\n      this.powerups.push(new PowerUp(x, y, 1));\r\n    }\r\n    else if (random > 0.33) {\r\n      this.powerups.push(new PowerUp(x, y, 2));\r\n    }\r\n    else {\r\n      this.powerups.push(new PowerUp(x, y, 3));\r\n    }\r\n  }\r\n\r\n  /** @function rotate()\r\n    * Function to change the velocities to make the collisions act like 1-dimensional collisions\r\n    * @param velocity is the x and y velocities of the asteroid\r\n    * @param float angle is the offset needed to adjust for\r\n    * @returns vector of rotated velocities\r\n    */\r\n  rotate(velocity, angle) {\r\n    const rotatedVelocities = {\r\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\r\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\r\n    };\r\n    return rotatedVelocities;\r\n  }\r\n\r\n  /** @function particleCollision()\r\n    * Function to handle asteroid to asteroid collisions (treated like elastic particle collisions), I ripped this out of one my side projects\r\n    * @param asteroid is the first asteroid in question\r\n    * @param asteroid otherAsteroid is the other particle in question\r\n    */\r\n  particleCollision(asteroid, otherAsteroid) {\r\n    //Vars to determine the differences in velocities\r\n    var xVelocityDiff = asteroid.velocity.x - otherAsteroid.velocity.x;\r\n    var yVelocityDiff = asteroid.velocity.y - otherAsteroid.velocity.y;\r\n    //Vars to determine the distances between particles\r\n    var xDist = otherAsteroid.x - asteroid.x;\r\n    var yDist = otherAsteroid.y - asteroid.y;\r\n\r\n    // Prevent accidental overlap of particles\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\r\n\r\n        // Grab angle between the two colliding asteroids\r\n        var angle = -Math.atan2(otherAsteroid.y - asteroid.y, otherAsteroid.x - asteroid.x);\r\n\r\n        // Store mass in var for better readability in collision equation\r\n        var m1 = asteroid.mass;\r\n        var m2 = otherAsteroid.mass;\r\n\r\n        // Velocity before equation\r\n        var u1 = this.rotate(asteroid.velocity, angle);\r\n        var u2 = this.rotate(otherAsteroid.velocity, angle);\r\n\r\n        // Velocity after 1d collision equation\r\n        var v1 = { x: (u1.x * (m1 - m2) + 2 * m2 * u2.x) / (m1 + m2), y: u1.y };\r\n        var v2 = { x: (u2.x * (m2 - m1) + 2 * m1 * u1.x)/ (m1 + m2), y: u2.y };\r\n\r\n        // Final velocity after rotating axis back to original location\r\n        var vFinal1 = this.rotate(v1, -angle);\r\n        var vFinal2 = this.rotate(v2, -angle);\r\n\r\n        // Swap particle velocities for realistic bounce effect\r\n        asteroid.velocity.x = vFinal1.x;\r\n        asteroid.velocity.y = vFinal1.y;\r\n        otherAsteroid.velocity.x = vFinal2.x;\r\n        otherAsteroid.velocity.y = vFinal2.y;\r\n    }\r\n  }\r\n\r\n  projectileDodger(ufo, projectile) {\r\n    var distance = Math.getDistance(ufo.x, ufo.y, projectile.x, projectile.y);\r\n    if(distance < (ufo.bufferRadius * 2 + projectile.radius)) {\r\n      var direction = Math.getDirection(projectile.x, projectile.y, ufo.x, ufo.y);\r\n      ufo.alterPath(direction);\r\n      ufo.setClock();\r\n      ufo.clock--;\r\n    }\r\n    if(distance < (ufo.radius + projectile.radius)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function handleAsteriodExplosion()\r\n    * function to handles asteroids exploding from a projectile\r\n    * @param int aID - index of the asteroid to be exploded\r\n    */\r\n  handleAsteriodExplosion(aID) {\r\n    //Save the essentials\r\n    var asteroid = this.asteroids[aID];\r\n    var mass = asteroid.mass;\r\n    var x = asteroid.x;\r\n    var y = asteroid.y;\r\n    //Get rid of the asteroid\r\n    asteroid.destroyed = true;\r\n    this.asteroids.splice(aID, 1);\r\n    this.audioController.trigger('explosion');\r\n    //Smaller asteroids are harder to hit, thus more score\r\n    this.score += Math.floor(100 / mass);\r\n    //If it isn't too small\r\n    if(mass >= 15) {\r\n      //random number of pieces the asteroid will break into\r\n      var random = Math.randomInt(2, 4);\r\n      //Update asteroid count\r\n      this.numAsteroids += random - 1;\r\n      mass /= random;\r\n      //Random direction\r\n      var direction = Math.randomBetween(0, 2 * Math.PI);\r\n      //Uniform distribution\r\n      var angleChange = 2 * Math.PI / random;\r\n      for(var i = 0; i < random; i++) {\r\n        //Since mass is also the radius\r\n        var newX = x + Math.cos(direction) * mass;\r\n        var newY = y - Math.sin(direction) * mass;\r\n        //Create new asteroid\r\n        this.asteroids.push(new Asteroid(newX, newY, mass, direction));\r\n        direction += angleChange;\r\n      }\r\n    }\r\n    else {\r\n      this.numAsteroids--;\r\n    }\r\n  }\r\n\r\n  /** @function detectShipCrash()\r\n    * determines if a ufo hits an asteroid and determines AI\r\n    * @param Ship ship - must be a ufo\r\n    * @param Asteroid asteroid - asteroid object\r\n    */\r\n  detectShipCrash(ship, asteroid) {\r\n    var dx = ship.x - asteroid.x;\r\n    var dy = ship.y - asteroid.y;\r\n    var distance = dx * dx + dy * dy;\r\n    if(distance < Math.pow(asteroid.radius + ship.radius, 2)) {\r\n      return true;\r\n    }\r\n    if(ship.asteroid === asteroid) {\r\n      return;\r\n    }\r\n    if(distance < Math.pow(ship.bufferRadius + asteroid.radius, 2)) {\r\n      let direction = Math.getDirection(asteroid.x, asteroid.y, ship.x, ship.y);\r\n      ship.alterPath(direction);\r\n      if((ship.color === 'blue' || ship.color === 'fuchsia') && asteroid.radius < ship.critical && ship.asteroid === '') {\r\n        ship.catchAsteroid(asteroid)\r\n      }\r\n      //Check if UFO is on the verge of crashing\r\n      else if (distance < Math.pow(ship.critical + asteroid.radius, 2)) {\r\n        //Deploy Counter Measures!!\r\n        if(!ship.reloading) {\r\n          this.ufoProjectile(ship, asteroid.x, asteroid.y);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** @function explode()\r\n    * function to create explosion particle effects\r\n    * @param floats x, y - position of explosion\r\n    * @param string color - determines the color of particles to be created\r\n    */\r\n  explode(x, y, color) {\r\n    var numParticles = Math.randomInt(30, 70);\r\n    var dir = Math.randomBetween(0, Math.PI * 2);\r\n    var speed = Math.randomInt(3,5);\r\n    var life = Math.randomInt(30, 40);\r\n    for(var i = 0; i < numParticles; i ++) {\r\n      if(Math.random() > 0.6) {\r\n        dir = Math.randomBetween(0, Math.PI * 2);\r\n      }\r\n      this.particles.push(new Particle(x, y, Math.PI * dir, speed, color, life));\r\n    }\r\n  }\r\n\r\n  /** @function teleport()\r\n    * function to handle the teleport extra credit\r\n    * Checks if the area is clear before chosing a spot\r\n    */\r\n  teleport() {\r\n    //Random position\r\n    var x = Math.randomBetween(100, 900);\r\n    var y = Math.randomBetween(100, 900);\r\n    //So you don't spawn right next to something and immediately die\r\n    var buffer = 50;\r\n    var collision = false;\r\n    //Loop until you find something, potentially opens the door for infinite loop, but extremely unlikely with the small buffer, and everything is constantly moving\r\n    do {\r\n      if(collision) {\r\n        x = Math.randomBetween(100, 900);\r\n        y = Math.randomBetween(100, 900);\r\n        collision = false;\r\n      }\r\n      //Checks if the ufo is nearby\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, ufo.x, ufo.y, ufo.radius + 2 * buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.asteroids.forEach(asteroid => {\r\n        //Check if new space is free of asteroids\r\n        if(Math.circleCollisionDetection(x, y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n      this.projectiles.forEach(projectile => {\r\n        //Check if the new space if free of projectiles\r\n        if(Math.circleCollisionDetection(projectile.x, projectile.y, projectile.radius, x, y, this.ship.radius + buffer)) {\r\n          collision = true;\r\n        }\r\n      });\r\n    } while(collision);\r\n    //Particle explosion in the to & from spots\r\n    this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n    this.explode(x, y, this.ship.color);\r\n    this.audioController.trigger('teleport');\r\n    this.ship.x = x;\r\n    this.ship.y = y;\r\n    //Resets you ships momentum, Reseting the momentum is definitely easier for the player\r\n    this.ship.speed.x = 0.0;\r\n    this.ship.speed.y = 0.0;\r\n  }\r\n\r\n  /** @function respawn()\r\n    * function to handle the player's ship getting destroyed\r\n    */\r\n  respawn() {\r\n    this.respawning = true;\r\n    this.lives--;\r\n    if(this.lives >= 0) {\r\n      this.ship = new Ship();\r\n    }\r\n    else {\r\n      this.gameOver = true;\r\n      /*this.theme.loop = false;\r\n      this.theme.pause();*/\r\n      this.audioController.trigger('game over');\r\n    }\r\n  }\r\n\r\n  /** @function destoryUFO()\r\n    * handles the ufo getting destroyed;\r\n    */\r\n  destoryUFO(ufoID) {\r\n    this.score += this.ufos[ufoID].bounty;\r\n    if(this.ufos[ufoID].bounty === 200 || this.ufos[ufoID].bounty === 500) {\r\n      this.lives++;\r\n    }\r\n    this.kills++;\r\n    this.ufos.splice(ufoID, 1);\r\n    this.audioController.trigger('ship explosion');\r\n  }\r\n\r\n  checkHighScore() {\r\n    if(this.score > this.highscore) {\r\n      this.highscore = this.score;\r\n    }\r\n  }\r\n\r\n  /** @function drawHUD()\r\n    * function to draw the HUD at the bottom of the screen\r\n    */\r\n  drawHUD() {\r\n    this.HUDcontext.fillStyle = 'black';\r\n    this.HUDcontext.strokeStyle = 'blue';\r\n    this.HUDcontext.fillRect(0, 0, this.screenSide, 100);\r\n    this.HUDcontext.font = '30px Times New Roman';\r\n    this.HUDcontext.strokeText(\"LIVES: \" + this.lives, 10, 50);\r\n    this.HUDcontext.strokeText(\"LEVEL: \" + this.level, 400, 50);\r\n    this.HUDcontext.strokeText(\"SCORE: \" + this.score, 800, 50);\r\n    this.HUDcontext.strokeText(\"TELEPORTS: \" + this.teleports, 550, 50);\r\n    this.HUDcontext.strokeText(\"HIGHSCORE: \" + this.highscore , 150, 50);\r\n    this.HUDcontext.font = '20px Times New Roman';\r\n    this.HUDcontext.strokeText(\"CONTROLS: \", 10, 75);\r\n    this.HUDcontext.strokeText(\"W: Thurster  A: Rotate Left  D: Rotate Right  Space: Shoot  F: Teleport  P: Pause  ~: Reset\", 150, 75);\r\n  }\r\n\r\n  /** @function update()\r\n    * Handles updating all object and variables, comments laced throughout\r\n    */\r\n  update() {\r\n    //Update Ship\r\n    this.ship.update();\r\n    //Update UFO if applicable\r\n    this.ufos.forEach(ufo => {\r\n      if((ufo.color === 'orange' || ufo.color === 'fuchsia') && ufo.goal === '') {\r\n        if(this.powerups.length > 0) {\r\n          let random = Math.randomInt(0, this.powerups.length - 1)\r\n          ufo.goal = {x: this.powerups[random].pos.x, y: this.powerups[random].pos.y}\r\n        }\r\n      }\r\n      ufo.update();\r\n      if(ufo.asteroid !== '') {\r\n        ufo.checkAsteroidAlignment(this.ship);\r\n      }\r\n    });\r\n    if(this.asteroids.length < this.constAsteroids) {\r\n      this.addAsteroid(-1.0);\r\n      this.numAsteroids++;\r\n    }\r\n    //Update each asteroid\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.update();\r\n    });\r\n\r\n    //Update Level if no more asteroids\r\n    if(this.kills !== 0 && this.kills % (this.level * 5) === 0) {\r\n      this.level++;\r\n      //You Will Probably Need These\r\n      this.lives++;\r\n      this.teleports += this.level;\r\n      let initAsteroids = 5 + this.level;\r\n      if(initAsteroids > this.MAXASTEROIDS) {\r\n        initAsteroids = this.MAXASTEROIDS;\r\n      }\r\n      let difference = initAsteroids - this.asteroids.length;\r\n      if(this.asteroids.length < initAsteroids) {\r\n        for(let i = 0; i < difference; i++) {\r\n          this.addAsteroid(-1.0);\r\n          this.numAsteroids++;\r\n        }\r\n      }\r\n      this.constAsteroids = this.numAsteroids;\r\n    }\r\n\r\n    //Determine UFO spawning\r\n    if(this.ufoTimer > 0 && this.ufos.length < this.MAXUFO) {\r\n      this.ufoTimer--;\r\n      if(this.ufoTimer <= 0) {\r\n        this.addUFO();\r\n        this.ufoTimer = Math.randomInt(this.UFOTIME * (this.ufos.length / this.level), this.UFOTIME * 2 * (this.ufos.length / this.level));\r\n      }\r\n    }\r\n\r\n    this.powerupTimer--;\r\n    if(this.powerupTimer <= 0) {\r\n      this.createPowerUp();\r\n      this.powerupTimer = Math.randomInt(this.POWERTIME * this.powerups.length, this.POWERTIME * 3 * this.powerups.length)\r\n    }\r\n\r\n    //Control respawning\r\n    if(this.respawning) {\r\n      this.respawnTimer--;\r\n      if(this.respawnTimer <= 0) {\r\n        //Done respawning, ship can now be destroyed again\r\n        this.respawnTimer = 300;\r\n        this.respawning = false;\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between asteroids\r\n    for(let i = 0; i < this.asteroids.length; i++) {\r\n      for(let j = i + 1; j < this.asteroids.length; j++) {\r\n        if(Math.circleCollisionDetection(this.asteroids[i].x, this.asteroids[i].y, this.asteroids[i].radius, this.asteroids[j].x, this.asteroids[j].y, this.asteroids[j].radius)) {\r\n          this.particleCollision(this.asteroids[i], this.asteroids[j]);\r\n          this.audioController.trigger('collision');\r\n        }\r\n      }\r\n    }\r\n\r\n    //Checks for collisions between projectiles and asteroids\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        if(Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius, this.asteroids[j].x, this.asteroids[j].y, this.asteroids[j].radius)) {\r\n          this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n          this.projectiles.splice(i, 1);\r\n          this.explode(this.asteroids[j].x, this.asteroids[j].y, 'white');\r\n          this.handleAsteriodExplosion(j);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      //Check for ship crashing\r\n      this.asteroids.forEach(asteroid => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, asteroid.x, asteroid.y, asteroid.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //Check if a ship or UFO picks up a powerup\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n        this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n        this.ship.powerups[this.powerups[i].type] = true;\r\n        this.ship.powerupTimers[this.powerups[i].type] += this.powerups[i].timer;\r\n        if(this.powerups[i].type === 2) {\r\n          this.ship.reloading = false;\r\n          this.ship.rateOfFire = this.ship.RATE / 2\r\n        }\r\n        this.powerups.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j++) {\r\n        if(Math.circleCollisionDetection(this.ufos[j].x, this.ufos[j].y, this.ufos[j].radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n          this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n          this.ufos[j].powerups[this.powerups[i].type] = true;\r\n          this.ufos[j].powerupTimers[this.powerups[i].type] += this.powerups[i].timer;\r\n          if(this.powerups[i].type === 2) {\r\n            this.ufos[j].reloading = false;\r\n            this.ufos[j].setRateOfFire();\r\n          }\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.powerups.length; i++) {\r\n      for(let k = 0; k < this.asteroids.length; k++) {\r\n        if(Math.circleCollisionDetection(this.asteroids[k].x, this.asteroids[k].y, this.asteroids[k].radius, this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].radius)) {\r\n          this.explode(this.powerups[i].pos.x, this.powerups[i].pos.y, this.powerups[i].color);\r\n          this.powerups.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      for(let j = 0; j < this.asteroids.length; j++) {\r\n        if(this.detectShipCrash(this.ufos[i], this.asteroids[j])) {\r\n          this.explode(this.ufos[i].x, this.ufos[i].y, this.ufos[i].color);\r\n          this.destoryUFO(i);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(this.ufos.length > 1) {\r\n      for(let i = 0; i < this.ufos.length; i++) {\r\n        for(let j = i + 1; j < this.ufos.length; j++) {\r\n          if(Math.circleCollisionDetection(this.ufos[i].x, this.ufos[i].y, this.ufos[i].critical, this.ufos[j].x, this.ufos[j].y, this.ufos[j].critical)) {\r\n            if((this.ufos[i].color === 'purple' || this.ufos[i].color === 'fuchsia') && !this.ufos[i].reloading) {\r\n              this.ufoProjectile(this.ufos[i], this.ufos[j].x, this.ufos[j].y);\r\n            }\r\n            if((this.ufos[j].color === 'purple' || this.ufos[i].color === 'fuchsia') && !this.ufos[i].reloading) {\r\n              this.ufoProjectile(this.ufos[j], this.ufos[i].x, this.ufos[i].y);\r\n            }\r\n            //Get the direction from the first ufo to the second.\r\n            let dir = Math.getDirection(this.ufos[i].x, this.ufos[i].y, this.ufos[j].x, this.ufos[j].y)\r\n            //Point the direction the other way\r\n            this.ufos[i].alterPath(dir + Math.PI);\r\n            //From the second ufo's perspective, this is pointing away from ufo 1\r\n            this.ufos[j].alterPath(dir);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.respawning) {\r\n      this.ufos.forEach(ufo => {\r\n        if(Math.circleCollisionDetection(this.ship.x, this.ship.y, this.ship.radius, ufo.x, ufo.y, ufo.radius)) {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n      });\r\n    }\r\n\r\n    //projectile ship collision checks\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      if(!this.respawning && Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius,\r\n        this.ship.x, this.ship.y, this.ship.radius)) {\r\n        if(this.ship.powerups[3]) {\r\n          this.explode(this.ship.x, this.ship.y, 'magenta');\r\n          this.ship.powerups[3] = false;\r\n          this.ship.powerupTimers[3] = 0;\r\n        }\r\n        else {\r\n          this.explode(this.ship.x, this.ship.y, this.ship.color);\r\n          this.audioController.trigger('ship explosion');\r\n          this.respawn();\r\n        }\r\n        this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n        this.projectiles.splice(i, 1);\r\n        break;\r\n      }\r\n      for(let j = 0; j < this.ufos.length; j ++) {\r\n        if((this.ufos[j].color === 'purple' || this.ufos[j].color === 'fuchsia') && this.ufos[j].clock === this.ufos[j].CLOCK) {\r\n          if(this.projectileDodger(this.ufos[j], this.projectiles[i])) {\r\n            if(this.ufos[j].powerups[3]) {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, 'magenta');\r\n              this.ufos[j].powerups[3] = false;\r\n              this.ufos[j].powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n        else if (Math.circleCollisionDetection(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].radius,\r\n          this.ufos[j].x, this.ufos[j].y, this.ufos[j].radius)) {\r\n            if(this.ufos[j].powerups[3]) {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, 'magenta');\r\n              this.ufos[j].powerups[3] = false;\r\n              this.ufos[j].powerupTimers[3] = 0;\r\n            }\r\n            else {\r\n              this.explode(this.ufos[j].x, this.ufos[j].y, this.ufos[j].color);\r\n              this.destoryUFO(j);\r\n              this.audioController.trigger('ship explosion');\r\n            }\r\n            this.explode(this.projectiles[i].x, this.projectiles[i].y, this.projectiles[i].color);\r\n            this.projectiles.splice(i, 1);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //Input Map Applying\r\n    //A or Left Arrow\r\n    if(this.keyMap[65] || this.keyMap[37]){\r\n      this.ship.accel.dir -= 0.07;\r\n      if(this.ship.accel.dir <= -Math.PI * 2) {\r\n        this.ship.accel.dir += Math.PI * 2;\r\n      }\r\n    }\r\n    //D or Right Arrow\r\n    if(this.keyMap[68] || this.keyMap[39]) {\r\n      this.ship.accel.dir += 0.07;\r\n      if(this.ship.accel.dir >= Math.PI * 2) {\r\n        this.ship.accel.dir -= Math.PI * 2;\r\n      }\r\n    }\r\n    //W or Up Arrow\r\n    if((this.respawnTimer <= 150 || !this.respawning)) {\r\n      this.ship.boosting = false;\r\n      if(this.keyMap[13] && this.ship.boost >= 0) {\r\n        this.ship.boosting = true;\r\n        this.ship.boost--;\r\n        this.ship.updateSpeed(this.ship.accel.mag * 3);\r\n        let numParticles = Math.floor(Math.randomBetween(4, 8));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n      else if ((this.keyMap[87] || this.keyMap[38])) {\r\n        this.ship.updateSpeed(this.ship.accel.mag);\r\n        let numParticles = Math.floor(Math.randomBetween(1, 4));\r\n        this.ship.createParticles(numParticles);\r\n      }\r\n    }\r\n    //Space\r\n    if(this.keyMap[32] && !this.ship.reloading && !this.respawning) {\r\n      this.createProjectile();\r\n      this.audioController.trigger('shoot');\r\n    }\r\n    //F\r\n    if(this.keyMap[70] && this.teleports > 0 && !this.respawning && this.coolingDown === 50) {\r\n      this.teleport();\r\n      this.teleports--;\r\n      this.coolingDown--;\r\n    }\r\n    //UFOs firing\r\n    for(let i = 0; i < this.ufos.length; i++) {\r\n      let ufo = this.ufos[i];\r\n      ufo.rateOfFire--;\r\n      if(ufo.rateOfFire <= 0) {\r\n        this.ufoProjectile(ufo, this.ship.x, this.ship.y);\r\n        ufo.setRateOfFire();\r\n      }\r\n    }\r\n\r\n    //Control Teleport/Prevent multiple from a single button Press\r\n    if(this.coolingDown < 50) {\r\n      this.coolingDown--;\r\n      if(this.coolingDown <= 0) {\r\n        this.coolingDown = 50;\r\n      }\r\n    }\r\n\r\n    //Update projectiles, if there are any\r\n    for(let i = 0; i < this.projectiles.length; i++) {\r\n      if(this.projectiles[i].color === 'green') {\r\n        this.projectiles[i].update(this.ufos);\r\n      }\r\n      else {\r\n        this.projectiles[i].update(this.ship);\r\n      }\r\n      if(this.projectiles[i].edgeDetection()) {\r\n        this.projectiles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //update particles\r\n    for(let j = 0; j < this.particles.length; j++) {\r\n      this.particles[j].update();\r\n      if(this.particles[j].life <= 0) {\r\n        this.particles.splice(j, 1);\r\n      }\r\n    }\r\n\r\n    //Update highscore\r\n    this.checkHighScore();\r\n  }\r\n\r\n  /** @function render()\r\n    * standard render function, calls all other render funcitons and drawHUD\r\n    */\r\n  render() {\r\n    //Initial Setup\r\n    this.backBufferContext.fillStyle = 'black';\r\n    this.backBufferContext.strokeStyle = 'blue';\r\n    this.backBufferContext.font = '50px Times New Roman';\r\n    //Refresh canvas\r\n    this.backBufferContext.fillRect(0,0, this.screenSide, this.screenSide);\r\n    this.drawHUD();\r\n    //Display respawning if needed\r\n    if(this.respawning && !this.gameOver) {\r\n      this.backBufferContext.save();\r\n      this.backBufferContext.globalAlpha = 0.5;\r\n      this.backBufferContext.strokeText(\"RESPAWNING\", 350, 500);\r\n      this.backBufferContext.restore();\r\n    }\r\n    //Draw UFOs\r\n    this.ufos.forEach(ufo => {\r\n      ufo.render(this.backBufferContext);\r\n    });\r\n    //Draw ship\r\n    if(!this.respawning || this.respawnTimer <= 150) {\r\n      this.ship.render(this.backBufferContext);\r\n    }\r\n    //Draw asteroids\r\n    this.asteroids.forEach(asteroid => {\r\n      asteroid.render(this.backBufferContext);\r\n    });\r\n    //draw projectiles\r\n    this.projectiles.forEach(projectile => {\r\n      projectile.render(this.backBufferContext);\r\n    });\r\n    this.powerups.forEach(powerup => {\r\n      powerup.render(this.backBufferContext);\r\n    });\r\n    //draw particles\r\n    this.particles.forEach(particle => {\r\n      particle.render(this.backBufferContext);\r\n    });\r\n    //Bit blit the back buffer onto the screen\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas, 0, 0);\r\n  }\r\n\r\n  /** @function loop()\r\n    * continuously loops the update and render function unless gameOver or paused\r\n    */\r\n  loop() {\r\n    if(!this.paused && !this.gameOver) {\r\n      this.update();\r\n      this.render();\r\n    }\r\n    if(this.gameOver) {\r\n      this.screenBufferContext.font = \"50px Times New Roman\";\r\n      this.screenBufferContext.strokeText(\"GAME OVER\", 350, 500);\r\n      this.screenBufferContext.strokeText(\"Retry? Press ~\", 360, 600);\r\n    }\r\n    if(this.paused) {\r\n      this.screenBufferContext.font = \"50px Times New Roman\";\r\n      this.screenBufferContext.strokeText(\"Paused\", 425, 600);\r\n    }\r\n  }\r\n}\r\n","import Game from './game.js';\r\nimport './game.css';\r\n\r\nexport default class Menu {\r\n\tconstructor() {\r\n\t\tthis.screenWidth = 1000\r\n\t\tthis.gameState = 'menu'\r\n\t\tthis.highlighted = 'start'\r\n\t\tthis.buttons = ['start', 'options']\r\n\r\n\t\twindow.onmousedown = this.handleMouseDown;\r\n\t\twindow.onkeydown = this.handleKeyDown;\r\n\t}\r\n\r\n\thandleKeyDown(event){\r\n\t\tevent.preventDefualt();\r\n\r\n\t\tif(this.gameState === 'menu') {\r\n\r\n\t\t}\r\n\t}\r\n\r\n}\r\nnew Game();\r\n"],"sourceRoot":""}